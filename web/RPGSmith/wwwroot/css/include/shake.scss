// Based on https://elrumordelaluz.github.io/csshake/
$class-slug: for !default

$prefix: 'shake' !default;
$trigger: 'shake-trigger' !default;

$h: 3px;
$v: 3px;
$r: 1deg;
$dur: 800ms;
$precision: .10;
$opacity: false;
$q: infinite;
$t: ease-in-out;
$delay: null;
$chunk: 100%;

$lists: 10;
$classPrefix: 'rpgsmith';

// Placeholders
%shake {
    /*display: inline-block;*/
    transform-origin: center center;
}

%paused {
    animation-play-state: paused;
}

%running {
    animation-play-state: running;
}

%animation {
    @if $delay {
        animation-delay: $delay;
    }
    animation-duration: $dur;
    animation-timing-function: $t;
    animation-iteration-count: $q;
}

@function apply-random($input) {
    @return if($input != 0, random($input) - $input/2, 0);
}

.#{$classPrefix}-shake-all-pause {
    @extend %paused;
}

@for $i from 1 through $lists {

    $className: $classPrefix + '-shake-' + $i;
    $animationName: $classPrefix + '-animation-' + $i;

    $interval: if($precision > 0 and $precision < 1, 100 * $precision, 10);
    $step: $interval * 1%;

    .#{$classPrefix}-shake-#{$i} {
        @extend %shake;
    }
    .#{$className}.#{$prefix}-freeze,
    .#{$className}.#{$prefix}-constant.#{$prefix}-constant--hover:hover,
    .#{$className}.#{$trigger}:hover .#{$prefix}-constant.#{$prefix}-constant--hover {
        @extend %paused;
    }

    .#{$className} .#{$prefix}-freeze:hover,
    .#{$className} .#{$trigger}:hover .#{$prefix}-freeze,
    .#{$className} .#{$className}:hover,
    .#{$className} .#{$trigger}:hover .#{$className},
    .#{$trigger}:hover .#{$className} .#{$className} {
        @extend %running;
    }

    @at-root {
        @keyframes #{$animationName} {
            @while $step < $chunk {
                $rotate: apply-random($r);
                $move-x: apply-random($h);
                $move-y: apply-random($v);

                #{$step} {
                    transform: translate3d($move-x, $move-y, 0) rotate($rotate);
                    @if $opacity {
                        opacity: random(100) / 100;
                    }
                }

                $step: $step + $interval;
            }
            #{ if($chunk < 100%, (0%, $chunk, 100%), (0%, 100%)) } {
                transform: translate3d(0, 0) rotate(0);
            }
        }
    }

    .#{$className} {
        @extend %animation;
        &:hover,
        .#{$trigger}:hover &,
        &.#{$prefix}-freeze,
        &.#{$prefix}-constant {
            animation-name: #{$animationName};
        }
    }
}
