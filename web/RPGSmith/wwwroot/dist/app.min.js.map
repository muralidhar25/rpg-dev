{"version":3,"sources":["js/controllers/Facebook.js","js/controllers/Google.js","js/dice/customdice.js","js/dice/main.js","js/polyfill.array.js","js/rpgsmith.js","js/site.js","js/controllers/loginController.js","js/controllers/registerController.js","js/controllers/resetpwdController.js","js/controllers/topNavController.js","js/directives/drag.js","js/directives/fileupload.js","js/directives/gridstack.js","js/directives/notetileDirectives.js","js/directives/pageslideMenu.js","js/directives/rulesetproperty.js","js/directives/tileDirectives.js","js/directives/tilePicker.js","js/filters/resolvers.js","js/objects/characterCoreStat.js","js/objects/counter.js","js/objects/tile.js","js/services/auth.js","js/services/characterService.js","js/services/dataContext.js","js/services/dataShareService.js","js/services/layoutService.js","js/services/navService.js","js/services/rulesetService.js","js/services/tabService.js","js/services/tileService.js","js/tinymce/background.js","js/tinymce/border.js","js/tinymce/staticContent.js","js/controllers/dialogs/dialogs.js","js/controllers/pages/attributesPageController.js","js/controllers/pages/charactersPageController.js","js/controllers/pages/commandsPageController.js","js/controllers/pages/countersPageController.js","js/controllers/pages/executesPageController.js","js/controllers/pages/layoutPageController.js","js/controllers/pages/layoutsPageController.js","js/controllers/pages/linksPageController.js","js/controllers/pages/notesPageController.js","js/controllers/pages/RulesetsPageController.js","js/controllers/pages/tilePageController.js","js/directives/RPGSmithTypes/rpgsmithrulesettype.js","js/directives/RPGSmithTypes/rpgsmithtype.js","js/directives/RPGSmithTypes/rpgsmithtypecontent.js","templates.js"],"names":["InitialiseFacebook","appId","window","fbAsyncInit","SubmitLogin","credentials","$","ajax","url","type","data","error","alert","success","angular","element","scope","gotoHomepage","FB","init","status","cookie","xfbml","Event","subscribe","response","uid","authResponse","userID","accessToken","d","js","id","ref","getElementsByTagName","getElementById","createElement","async","src","parentNode","insertBefore","document","googleSignIn","gapi","load","auth2","then","isSignedIn","get","currentUser","confirm","signin2","render","onsuccess","signOut","onSignIn","googleUser","profile","getBasicProfile","console","log","getId","getName","getImageUrl","getEmail","getAuthResponse","id_token","isUserRegistered","onSignInFailure","getAuthInstance","Email","Id","method","AccesKey","AccountType","location","href","dicenotationvalidator","commandStr","validationresult","res","known_types","no","split","dr0","dr1","ret","set","constant","result","exec","count","parseInt","indexOf","push","undefined","length","dicerollwithcommand","command","children","remove","append","$t","value","da","style","display","diceinitializer","dice_initialize","rolediceagain","diceselectcommandtrace_temp","localvar","customarray","dicecommandaftertrace","dicecommandaftertracestr","dice","val","i","j","dice1","dice2","test","diceselectcommandtrace","customdicearray","customset","customdiceset","paranthesisCommand","tempcustomdicearray","customarraynotation","trim","customarrayno","customarraydicecommand","customarraycount","includes","customarraynowithfunc","iscommandvalid","commandtype","startsWith","commandcheck","diceSpecialOperatorStr","diceSpecialOperatorCmd","substring","diceSpecialOperatorValue","charAt","isNumeric","diceresultafterroll","notation","totalresult","diceNotationIndex","diceType","diceResult","eachDiceResultSum","innerHTML","showdicerollResult","diceafterrolltrace","resultwithdiceroll","dicerollresultbytype","dicetype","customarraytype","customarraynowithfuncavail","dicefinalresultwithcommand","k","pop","tempdicerollresultbytype","sort","resultAfterDiceRoll","calculateDiceCommandResult","tempresultwithdicerollwithparanthesis","tempresultwithdicerollinsideparanthesis","tempresultaftercalculationinsideparanthesis","calculateCommandResult","operand1","operand2","operator","fresult","resultAfterEachOperator","resultBeforeEachOperator","operatorCount","resultBeforeEachOperatorAsChar","tempresult","operand2Array","operand2Num","operand2Func","Math","floor","ceil","n","isNaN","parseFloat","isFinite","dicerollwithoutcommand","DiceCommandRoll","diceCommandClear","diceselectcommand","parsecustomdice_notation","dicecommandsearch","dicename","currentselecteddicenotation","currentselecteddiceno","dicecommandexpression","dicecommandsplitresult","currentselecteddicecommand","currentselecteddicetype","currentselecteddiceadded","newcustomarrayvalue","stringifycustomdice_notation","nn","dict","customrolediceagain","dicerollcomplete","container","before_roll","vectors","callback","notation_getter","parse_notation","after_roll","join","reduce","s","a","rollresult","localStorage","setItem","lastrunresult","modaPOPUP","canvas","width","height","ev","use_true_random","box","dice_box","w","h","animate_selector","bind","innerWidth","innerHeight","reinit","bind_mouse","params","get_url_params","roll","raise_event","draw_selector","this","bind_customthrow","Array","prototype","findIndex","Object","defineProperty","predicate","TypeError","o","len","thisArg","arguments","kValue","call","r","GridStackUI","Utils","getNode","el","getNodeData","clamp","num","min","max","randomInteger","random","obj2Styles","obj","str","p","hasOwnProperty","styles2Obj","match","regex","isNullOrWhiteSpace","v","tileTypes","note","name","counter","attribute","inventory","equipment","isEmpty","fillArray","dest","converter","item","forEach","rpgsmith","module","app","filter","$sce","text","trustAsHtml","config","uiSelectConfig","theme","searchEnabled","skipFocusser","$animateProvider","classNameFilter","$localStorageProvider","setKeyPrefix","$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider","interceptors","html5Mode","hashPrefix","otherwise","state","cache","authenticate","templateUrl","controller","resolve","previousState","$state","current","abstract","template","views","topNav@profile","main@profile","menuSelected","onEnter","navService","setHeader","action","isNew","CopyOrUpdate","IsAddRuleSet","ContentId","RuleSetId","contentType","index","$qProvider","errorOnUnhandledRejections","run","$rootScope","$http","authService","$on","transitionTo","defaults","headers","common","attr","$transitions","onBefore","transition","addResolvable","token","resolveFn","onStart","authentication","authenticated","go","$templateCache","$interpolate","startSym","startSymbol","endSym","endSymbol","put","$scope","$window","$log","toaster","dialogs","rulesetDataShareService","$localStorage","profileimagesrc","mode","registersuccess","useremail","ready","keydown","event","keyCode","preventDefault","LoginData","getloginData","LocalStorageLoginData","JSON","parse","getItem","rememberMe","username","password","stringify","passwordKeyPress","$event","which","rememberKeyPress","showTerms","newCharacterData","file","RulesetID","create","characterData","setMode","profileImageUpload","input","files","reader","FileReader","onload","e","target","profileimage","readAsDataURL","gotoLoginPage","gotoLogin","Cancel","StatusCode","logindata","PayLoad","Exlogin","firstLoginController","gotoCharacters","request","responseText","isFBUserRegistered","css","email","fadeOut","login","setloginData","catch","confirmPassword","reg","RegExp","register","ErrorMessage","ForgotPassword","$location","characterService","$browser","rulesetService","menuItems","menuItemIndex","resetModel","activeMenu","noop","gohome","hasNav","toggleNav","newstyles","ProfileImage","background-size","background-repeat","background-color","getThumbNail","CharacterRulesetCount","GetHeaderContentsCounts","HeaderContents","SetDisplayCharacterRulesetCount","ShowToUser","ProfileImageUpload","AccountSettings","newpassword","confirmpassword","oldpassword","loadResetPage","search","userid","history","back","Update","Name","updateprofile","cancel","ReSetPassword","EditData","onloadFun","ResetProfilePassword","PasswordHash","isUndefined","resetpass","Password","ConfirmPassword","UserId","pass","Resetpassword","signoutGoogle","disconnect","signout","logout","savedData","savedspell","savedability","savedcorestat","setRulesetItems","setRulesetSpells","setRulesetAbilities","setcorestat","clear","directive","$compile","restrict","onDroppableDrop","onDroppableOver","onDroppableOut","link","attrs","ngModel","droppable","tolerance","over","ui","out","drop","$root","removeClass","add","addClass","$parse","model","fileModel","modelSetter","assign","$apply","evt","gridstack","options","verticalMargin","noUpdate","enableMove","enable","enableResize","removeItem","removeWidget","addItem","makeWidget","$timeout","onChange","onDragStart","onDragStop","onResizeStart","onResizeStop","gridstackHandler","gsLockTiles","api","_","debounce","cellWidth","columns","$evalAsync","setGridWidth","on","items","$watch","require","gsItem","gridstackItem","gsItemId","gsItemX","gsItemY","gsItemWidth","gsItemHeight","gsItemAutoPosition","gsItemMinHeight","gsItemMaxHeight","gsItemMinWidth","gsItemMaxWidth","Number","tileService","getTemplate","useoredit","replace","html","contents","EditNoteTile","info","Tablist","fullscope","IsSync","UpdateDate","Date","now","Styles","backgroundColor","setTilelst","fromDirectiveFn","ShowContent","RemoveTile","Value","Note","size","btn","deleteTile","TileId","EditCounterTile","setValue","Counter","ShowCounterValue","Increment","Min","Max","step","Step","Decrement","Reset","DefaultValue","copy","Attribute","AttributeContent","CoreStatValues","getLayoutData","CorestatValues","TypeId","CoreStatValue","Text","Choices","AttributeValue","YesOrNo","OnOrOff","ValueAndSubValue","subvalue","CurrentAndMaxValue","CurrentValue","MaxValue","Weight","units","selectedUnit","Image","image","Height","Volume","DefaultDice","TextArea","ShowAttributeContent","EditAttributeTile","layoutdata","corestatvalues","SelectedCorestatValue","IsItemVisible","IsSpellVisible","IsAbilityVisible","LinkTileItems","LinkTileSpells","LinkTileAbilities","Items","Spells","Abilities","Link","SelectedPropertyValue","SetContentType","ShowItemsDropdown","ShowSpellsDropdown","ShowAbilitiesDropdown","ShowAllContent","IsItem","IsSpell","IsAbility","SelectedProperty","ItemProperties","SpellProperties","AbilityProperties","Content","dlg","EditLinkTile","ExecuteTileItems","ExecuteTileSpells","ExecuteTileAbilities","Execute","EditExecuteTile","CommandImageUpload","Command","ImagePath","defaultDiceSelect","CommandRun","EditCommandTile","c","portrait","Imagetile","Imagepath","showImage","EditImageTile","splice","menuClick","menus","hasMenus","menu","isArray","onItemClick","disabled","parseAsHtml","ngBindHtmlCompile","tile","$document","$q","handleKeyDown","cleanup","handleBodyClick","selecting","_callback","onClose","beginSelect","beforeSelect","endSelect","dataContext","key","character","counters","find","displayValue","$stateful","coreStats","code","factory","CoreStat","onPropertyChanged","args","typeInitializer","formatValue","mask","format","updateValue","propertyName","increment","decrement","reset","defaultValue","Tile","trimProblems","parseStyle","__styleComputed","tmp","fromJson","extend","classes","styles","content","updateStyle","keys","toJson","getEntity","typeId","notes","entityId","__entity","__randomShake","enumerable","configurable","service","responseError","$broadcast","resetAuthentication","authorizationData","ExternalGoogle","provider","returnUrl","post","err","deferred","reject","GetServiceUrl","LocationUrl","ExternalLoginViewModel","Url","dataType","xml","remember","RememberMe","defer","promise","Service","_controller","GetCharacters","saveCharacter","CopyCharacter","EditCharacter","Deletecharacter","UserID","GetCorestats","CharacterId","AddCorestatValues","_characterViewModel","GetLayouts","GetNewCharacterInventory","CreateCharacterInventoryItems","_characterInventoryItems","CreateCharacterInventorySpells","_characterInventorySpells","CreateCharacterInventoryAbility","_characterInventoryAbility","GetCharacterContent","EditCharacterContent","charactercontentvalues","CopyCharacterContent","_characterContent","DeleteCharacterContent","CharacterItemId","DeleteCharacterSpellContent","CharacterSpellId","DeleteCharacterAbilityContent","CharacterAbilityId","UpdateItemEquipContent","CharacterItemsValues","UpdateSpellMemorizeContent","CharacterSpellValues","UpdateAbilityEnabledContent","_CharacterabilityValues","GetCharacterItemContent","GetCharacterSpellContent","GetCharacterAbilityContent","CreateItemInventorytile","CreateSpellInventorytile","CreateAbilityInventorytile","uploadFileToUrl","characterProfileId","fileName","fd","FormData","transformRequest","identity","Content-Type","layout","loginData","setRulesetData","rulesetData","getRulesetData","setCharacterLayoutsData","characterlayoutsData","getCharacterLayoutsData","setLayoutData","layoutData","setLayoutItemInventoryData","layoutItemInventoryData","getLayoutItemInventoryData","setLayoutSpellInventoryData","layoutSpellInventoryData","getLayoutSpellInventoryData","setLayoutAbilityInventoryData","layoutAbilityInventoryData","getLayoutAbilityInventoryData","setLayoutRulesetItemInventoryData","layoutRuleSetItemInventoryData","getLayoutRulesetItemInventoryData","setLayoutRulesetSpellInventoryData","layoutRuleSetSpellInventoryData","getLayoutRulesetSpellInventoryData","setLayoutRulesetAbilityInventoryData","layoutRuleSetAbilityInventoryData","getLayoutRulesetAbilityInventoryData","setLayoutItemInventoryMetaData","ItemInventoryMetadata","getLayoutItemInventoryMetaData","setLayoutSpellInventoryMetaData","SpellInventoryMetadata","getLayoutSpellInventoryMetaData","setLayoutAbilityInventoryMetaData","AbilityInventoryMetadata","getLayoutAbilityInventoryMetaData","setLinkTileData","LinkTiledata","getLinkTileData","setRulesetsData","rulesetsdata","getRulesetsData","setRpgtypeData","rpgtypes","getRpgtypeData","Tilelst","getTilelst","setTileStyles","TileStyles","getTileStyles","rulesetItems","getRulesetItems","rulesetSpells","getRulesetSpells","rulesetAbilities","getRulesetAbilities","setruleset","savedruleset","getruleset","getcorestat","setcorestatvalue","layoutRuleSetCorestats","getcorestatvalue","setlayoutmetadata","savedlayout","getlayoutmetadata","setnewlayout","newtile","getnewlayout","setcharacterRulesetitems","characteritems","getcharacterRulesetitems","setSelectedRulesetitems","selectedrulesetitems","getSelectedRulesetitems","setInventory","Inventorymetadata","getInventory","setItemProperties","getItemProperties","setRulesetcontent","Rulesetcontent","getRulesetcontent","setRulesetspellcontent","Rulesetspellcontent","getRulesetspellcontent","getDisplayCharacterRulesetCount","setImageandName","ImageDataandName","getImageandName","topNav","LayoutViewModel","update","copyLayout","GetNewLayout","loadLayout","ID","LayoutId","GetDice","characterId","SaveDice","DiceModel","deleteLayout","GetDefaultDice","GetCharacterLayouts","navs","getNavKey","setLastCharacterId","lastCharacterId","setLastLayoutId","layoutId","layoutsAll","lastLayouts","layouts","dt","pageId","setLastTabId","getLastCharacterId","getLastLayoutId","getLastLayout","getLastPageId","tabs","lastLayout","tab","sorted","b","found","shift","gotoRegisterSuccess","NewRuleSet","ExistingRuleSet","gotoLayouts","gotoLayout","header","updateBody","nav1","nav2","$emit","registerNav","opened","getCommonHamburger","more","icon","setspell","setability","concat","getCommonCharacterNav","b64toBlob","b64Data","sliceSize","byteCharacters","atob","byteArrays","offset","slice","byteNumbers","charCodeAt","byteArray","Uint8Array","Blob","GetRuleSets","GetNewRuleset","GetNewRulesetByRuleSetId","saveRuleSet","ruleset","clientImages","_ruleset","Rulesetproperty","ruleSetProperty","block","realData","blob","splitFileExt","fileExt","currentDate","File","spell","ability","ruleSetImage","formData","ruleSetViewModel","updateRuleSet","copyRuleSet","GetTypes","DeleteRuleSet","RuleSetID","GetCoreStatById","CoreStatID","GetRuleSetItemsForItemInventory","GetRuleSetSpellsForSpellInventory","GetRuleSetAbilitiesForAbilityInventory","GetRuleSetForLinkTile","ExportRuleset","rulesetId","RuleSetName","GetAllRuleSets","CopyRulesetByRulesetId","RulesetId","GetRuleSetGeneralSettings","GetGeneralSettingsMetadata","CreateGeneralSettings","_rulesetProperty","RulesetName","UpdateGeneralSettings","_updateGeneralSettings","GetRulesetCorestats","GetCorestatsMetadata","CreateCorestats","_rulesetCorestats","UpdateCorestats","_updateCorestats","CopyCorestats","_copyCorestats","DeleteCorestats","deletecorestats","GetRulesetItems","RUlesetId","GetItemsMetadata","CreateItems","_rulesetItems","UpdateItems","_updateItems","CopyItems","_copyItems","DeleteItems","deleteitem","GetRulesetSpells","GetSpellsMetadata","CreateSpells","_rulesetSpells","UpdateSpells","_updateSpells","CopySpells","_copySpells","DeleteSpells","deletespell","GetRulesetAbilities","GetAbilitiesMetadata","CreateAbilities","_rulesetAbilities","UpdateAbilities","_updateAbilities","CopyAbilities","_copyAbilities","DeleteAbilities","deleteability","GetTilesMetadataForRuleset","SaveRulesetTiles","_rulesetContent","GetTabs","AddTab","NewTab","UpdateTab","tabmodel","deleteTab","GetTileTypes","AddTile","NewTile","UpdateTile","GetAllTileTypesRelatedCharacter","CharacterProfileID","tinymce","PluginManager","editor","getCurrentColor","getContentAreaContainer","mapColors","colorMap","colors","settings","textcolor_map","color","renderColorPicker","getColorCellHtml","title","isNoColor","translate","last","x","y","ctrl","_id","origin","rows","cols","color_picker_callback","applyFormat","undoManager","transact","removeFormat","onPanelClick","selectColor","buttonCtrl","hidePanel","setDivColor","div","background","setAttribute","parent","DOM","getParent","customColorCells","tableElm","panel","getEl","map","childNodes","elm","firstChild","getAttribute","lastId","resetColor","onButtonClick","self","_color","updateStyles","previewEl","forecolor","forecolor_rows","textcolor_rows","backcolor","backcolor_rows","forecolor_cols","textcolor_cols","backcolor_cols","buttons","tooltip","addButton","role","ariaRemember","onclick","onpostrender","control","$el","makeValues","arr","createColorPickAction","colorPickerCallback","fire","border","borderRadius","boxShadow","ed","dst","getParam","borderWidth","windowManager","open","body","label","values","borderStyle","onaction","borderColor","onsubmit","shadow","radius","focus","innerNode","node","dom","select","selectNode","selection","lock","yesNo","getBody","beforeCommand","afterCommand","collapse","valign","valignButtons","f","formatter","toggle","nodeChanged","_old_apply","apply","vars","unregister","inline","font-weight","font-style","text-decoration","setTimeout","formatChanged","active","$uibModalInstance","Upload","showimagebtns","pageHeading","pageButton","disableNameControl","disableAllControls","dismiss","OpenFile","click","characterImageUpload","save","Portrait","addcharacter","close","RuleSets","manageRuleSets","isEdit","Tab","TabHeading","State","ButtonText","btntext","hitEnter","equals","SaveCorestat","CoreStatProperties","choosetile","Tiles","OperationTypeMode","CoreStatMode","CoreStatsInGrid","CoreStatsNameInGrid","choices","tabName","tabname","buttontext","IsButtonDisabled","IsenableBtn","ChoiceName","DisableField","Types","weight","Units","CoreStatOnChange","ShowChoices","ShowCalculation","ShowValueandSubvalue","ShowCurrentMaxValue","AddValueSubvalue","valueName","Addcurrentmax","CurrentMaxvalue","ExistCoreStatOnChange","tempVar","Formula","CreateFormula","addChoice","RemoveChoice","choice","idx","TypeName","Calculation","formulae","characters","SaveCorestatValues","AssociatedSpells","associatedspells","Selected","SaveAssociatedSpells","exampleArray","RulesetItems","SaveAssociatedRulesetItems","RulesetSpells","SaveAssociatedRulesetSpells","RulesetAbilities","SaveAssociatedRulesetAbilities","AssociatedAbilities","associatedabilities","SaveAssociatedAbilities","Properties","IsBtnDisabled","Content_ItemProperties","ShowAssociatedSpells","ShowAssociatedAbilities","ItemImageUpload","OpenAssociatedSpells","OpenAssociatedAbilities","Create","toLowerCase","createItemResult","SelectedChoiceName","selectedchoice","ItemcloseDialog","SpellMode","Content_SpellProperties","AbilityMode","Content_AbilityProperties","$filter","temp","sorter","copyitem","DisablecopyFields","DisableNameField","ValSub","CurrentMaxVal","ItemMode","SelectAssociatedSpells","SelectAssociatedAbilities","DropItem","Action","CharacterSpellValueId","CharacterAbilityValueId","EditItem","pageName","isBtnShow","IsBtnShow","DuplicateItem","Fullscope","RemainingItemData","RemainingItemProperties","CharacterSpellsValues","FullSpellscope","RemainingSpellData","RemainingSpellProperties","CharacterAbilitiesValues","FullAbilityScope","RemainingAbilityData","RemainingAbilityProperties","CopyItem","ShowAllItemProperties","eval","ShowAllSpellProperties","ShowAllAbilityProperties","Removeitem","Num","AssocSpells","AssocAbilities","AssociatedSpellsChanged","AssociatedAbilitiesChanged","CharacterContent","CharacterItem","CharacterSpell","CharacterAbility","CharacterSpells","CharacterAbilities","CharacterSpellsProperties","CharacterAbilitiesProperties","InventoryItems","NewInventory","CharacterItems","CharacterProfileId","CharacterItemsProperties","InventorySpells","InventoryAbility","uniqId","round","getTime","NoteTile","LinkExecuteTileContent","RuleSetContentForLinkExecuteTile","Modes","TileBorder","TileTitleBackground","SaveTile","EditClientId","SaveCounterTile","SaveAttributeTile","CorestatValue","CoreStatValueId","depthvalue","SaveLinkTile","Title","SelectedPropertyValueImage","RuleSetTileContents","SaveExecuteTile","CommandLastResult","SaveCommandTile","commandLastResult","SaveImageTile","layoutService","TileTypeName","Subvalue","ValueSubValue","CurrentMax","Currentvalue","Maxvalue","Numbers","SaveCounterUpdatedValue","SaveAttributeCorestatValue","DiceRoll","TileBorders","SaveTileBorder","SaveTileBackgrounds","titletextcolor","titlebackgroundcolor","bodytextcolor","bodybackgroundColor","rulesetFileUpload","uploadFile","ruleSetId","Result","Dicelist","Dice","Lastresult","LastResult","Corestats","ShowNonNumericCorestats","rendered","DiceVisible","DiceList","DefaultDiceSelect","DiceSaveCommand","dicesave","LastRunResult","ShowCommand","AddNumericCorestats","NumericCorestats","ShowCorestatValue","CurrentMaxValue","corestattype","CorestatName","currenttext","maxtext","subvaltext","valtext","number","showcurrentmax","showValueSubvalue","subval","corestatype","diceresult","Tracing","GeneralSettings","imageLoaded","Disabled","DisableName","RulesetData","TotalRuleSetCount","OpenManageRuleset","openManageRuleset","OpenBingSearch","ManageRuleset","updategeneralsettings","_rulesetID","CopyRuleset","$interval","ShowAllRulesetContent","Response","ExportRuleSet","$transition","dataService","menuHamburger","menuCharacter","corestats","campaign","showBtn","Imagesrc","characterAdd","characterSubmitForm","valid","CharacterRuleSetOnChange","Button","newCharacter","GetRulesets","getStyles","background-image","GetRuleset","varRoot","tilePickerApi","messageId","timeout","addNewRuleSet","Heading","createcharacter","copyCharacter","copyCharacterData","editCharacter","editCharacterData","editedCharacterIndex","selectCharacter","showContextMenu","cardActionsHover","parents","hasClass","hideContextMenu","characterDelete","deletedCharacterIndex","AllTilesData","commands","Commands","Counters","executes","Executes","tabService","setClientObjectId","Layouts","ClientObjectId","initialClientObjectId","TabList","TileList","ClientScopeChange","isLayoutSavingInProgress","NewLayout","RulesetViewModel","selectedLayoutName","selectedPageName","TabName","AddNewtab","Scope","LayoutMetaData","Buttontext","SyncDate","onTabSelected","layoutAdd","FirstTabArray","TabId","TabOrder","IsDefault","layoutLoad","tilesEditing","EditTab","DeleteTab","deletedTabID","requiredlayoutindex","requiredtabIndexId","selectedPageIndex","SaveLayout","EditTiles","editTile","TileLocationId","savedLayout","layoutRename","renamedLayoutID","layoutCopy","dataTile","EntityId","AttributeId","CommandId","CounterId","ExecuteId","LinkId","NoteId","router","stateService","layoutDelete","deleteLayoutId","requiredLayoutIndexId","tileDragging","useOrEditMode","tileDeleteId","ManageTiles","ManageTilesCompleted","ShowTiles","TileTypes","TileType","TileTypeId","SelectedTab","tabSet","Width","X","Y","Mode","stackOptions","cellHeight","minWidth","pixelWidth","alwaysShowResizeHandle","navigator","userAgent","resizable","handles","draggable","refreshPositions","handle","CopyTab","getTileClass","getAutoPosition","_autoPosition","tileSelect","tileEdit","onDeleteDrop","requiredtabindex","requiredtileIndexId","clientobjectId","helper","dataset","gsId","Layout","TabTiles","deletedTileID","onDeleteOver","onDeleteOut","ToggleMenu","actions","button","wrapper","button_text","toggleClass","trigger","stopPropagation","hideConteextMenu","ShowItems","NewItemInventory","CharacterInventoryMetaData","ShowItem","ShowSpells","NewSpellInventory","CharacterInventoryMetaSpellData","ShowSpell","ShowAbilities","NewAbilityInventory","CharacterInventoryAbilityMetaData","ShowAbility","GridViewTrigger","gridViewTrigger","ListViewTrigger","listViewTrigger","rulesetitemcontent","rulesetspellcontent","rulesetabilitycontent","ItemPropertyLst","Index","spellPropertyLst","abilityPropertyLst","ShowDice","AddCorestatvalues","CorestatValuesHeading","CorestatValuesIcon","CorestatValuesBtnText","ShowTilesforInventory","Attributecorestats","isDefined","es","SaveInventoryTiles","tilecontent","InventoryAbilities","ItemInventory","BackToLayout","ImportRuleSetCharecterleavel","SpellInventory","AbilityInventory","widgets","addWidget","newWidget","moveWidget","onItemAdded","onItemRemoved","AddRulesetItems","rulesets","SaveRulesetItem","AddRulesetSpell","spells","SaveRulesetSpell","AddRulesetAbility","abilities","SaveRulesetAbility","CreateCharacterItem","CreateCharacterSpell","CreateCharacterAbility","SelectedItems","SelectedSpells","SelectedAbilities","addName","checkSelected","BackInventory","BackItem","BackSpell","BackAbility","BackItemProperties","BackSpellProperties","BackAbilityProperties","EditItems","Removeitems","onDeleteDropCharacterTiles","ClientObjectTileId","deletedTileIndex","onDeleteOverCharacterItem","onDeleteOutCharacterItem","showCloseButton","tapToDismiss","createLayout","saveChanges","selectLayout","newLayout","createToastId","links","Links","Notes","$element","UpdateRuleSet","RuleSetMetaData","ImportRquired","IsAddDisabled","iscorestatsadded","isitemsadded","isspellsadded","isabilitiesadded","ItemsCount","SpellsCount","AbilitiesCount","ActionIcon","spellslist","limit","ImportRuleSet","Rid","payload","editRuleSet","deleteRuleSet","deletedRuleSetIndex","exportRuleSet","ImportRuleset","encodeURI","download","setTab","newTab","isSet","tabNum","BackCharacters","addNewCoreStat","Description","isInDatabaseCoreStat","createitems","volume","NewItem","createspells","createabilities","showallCorestats","showallitems","ShowallSpells","ShowallAbilities","Rulesetadd","absUrl","lists","list","Corestatlist","editCoreStat","coreStat","deleteCoreStat","DeleteCoreStat","deleteCorestats","corestatindex","ShowChoice","AddChoices","AddChoice","CopyCorestat","CorestatList","EditCorestat","RemoveCorestat","BackCoreStat","grid","Itemlist","showlist","showgrid","CreateItem","currency","ItemList","createdRulesetItems","updatedRulesetItems","deleteItemList","deletedRulesetItems","deletedRulesetItemIndexs","CreateSpell","newspell","SpellList","createdRulesetSpells","CopySpell","NewSpell","EditSpell","updatedRulesetSpells","RemoveSpell","deletedRulesetSpells","deletedRulesetSpellIndexs","CreateAbility","NewsAbility","AbilityList","createdRulesetAbilities","CopyAbility","NewAbility","EditAbility","updatedRulesetAbilities","RemoveAbility","deletedRulesetAbilities","deletedRulesetAbilityIndexs","ShowAllSpellsContent","ShowAllAbilityContent","RulesetContent","BackContent","ItemPropertyForTile","ItemProperty","SaveTilesForRuleset","RulesetTiles","onDeleteDropCharacterItem","RuleSetItems","RuleSetSpells","RuleSetAbilities","Item","ContentTypeId","RemainingTiles","Spell","SpellPropertyLst","Ability","AbilityPropertyLst","BingSearch","RulesetGeneralSettings","GeneralSettingsMetadata","editsettings","EditGeneralSettings","editedRuleSetIndex","CopyRuleSet","GetAllTabs","LayoutTabs","_menuOptionView","tabAdd","tabRename","tabDelete","tabCopy","tabReorder","updateTabs","doRecalculate","scrollTabIntoView","getActiveTab","tabsSort","order","createTab","currentIdx","IsMandatory","templateUrl2","templateUrl3","templateUrl4","templateUrl5","templateUrl6","templateUrl12","templateUrl13","templateUrl14","FormulaVal","FormlaForCalculate","ArrayList","Str","templateUrl13_withvalidation","templateUrl16","templateUrl16_withvalidation","IsAction","UpdateEquip","CharacterItemValueId"],"mappings":"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","file":"app.min.js","sourcesContent":["function InitialiseFacebook(appId) {\r\n\r\n    window.fbAsyncInit = function () {\r\n        FB.init({\r\n            appId: appId,\r\n            status: true,\r\n            cookie: true,\r\n            xfbml: true\r\n        });\r\n\r\n        FB.Event.subscribe('auth.login', function (response) {\r\n            \r\n            var credentials = { uid: response.authResponse.userID, accessToken: response.authResponse.accessToken };\r\n            SubmitLogin(credentials);\r\n        });\r\n\r\n        //FB.getLoginStatus(function (response) {\r\n        //    \r\n        //    if (response.status === 'connected') {\r\n        //        alert(\"user is logged into fb\");\r\n        //    }\r\n        //    else if (response.status === 'not_authorized') { alert(\"user is not authorised\"); }\r\n        //    else { alert(\"user is not conntected to facebook\"); }\r\n\r\n        //});\r\n\r\n        function SubmitLogin(credentials) {\r\n            \r\n            $.ajax({\r\n                url: \"/account/facebooklogin\",\r\n                type: \"POST\",\r\n                data: credentials,\r\n                error: function () {\r\n                    alert(\"error logging in to your facebook account.\");\r\n                },\r\n                success: function () {\r\n                    angular.element('#profileImage').scope().gotoHomepage();\r\n                }\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    (function (d) {\r\n        var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];\r\n        if (d.getElementById(id)) {\r\n            return;\r\n        }\r\n        js = d.createElement('script');\r\n        js.id = id;\r\n        js.async = true;\r\n        js.src = \"//connect.facebook.net/en_US/all.js\";\r\n        ref.parentNode.insertBefore(js, ref);\r\n    }(document));\r\n\r\n}","function googleSignIn() {\r\n    \r\n    gapi.load('auth2,signin2', function () {\r\n        var auth2 = gapi.auth2.init();\r\n        auth2.then(function () {\r\n            // Current values\r\n            var isSignedIn = auth2.isSignedIn.get();\r\n            var currentUser = auth2.currentUser.get();\r\n\r\n            if (!isSignedIn) {\r\n                // Rendering g-signin2 button.\r\n                gapi.signin2.render('signInGoogle', {\r\n                    'onsuccess': 'onSignIn'\r\n                });\r\n            }\r\n            else {\r\n                if (confirm(\"Continue with Goole Account\") == true) {\r\n                    gapi.signin2.render('signInGoogle', {\r\n                        'onsuccess': 'onSignIn'\r\n                    });\r\n                } else {\r\n                    signOut();\r\n\r\n                }\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction onSignIn(googleUser) {\r\n    \r\n    var profile = googleUser.getBasicProfile();\r\n    console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\r\n    console.log('Name: ' + profile.getName());\r\n    console.log('Image URL: ' + profile.getImageUrl());\r\n    console.log('Email: ' + profile.getEmail()); // This is null if\r\n    console.log('Access' + googleUser.getAuthResponse().id_token);\r\n    isUserRegistered(profile.getEmail(), profile.getId(), googleUser.getAuthResponse().id_token);\r\n}\r\n\r\nfunction onSignInFailure() {\r\n    // Handle sign-in errors\r\n    alert('failure');\r\n}\r\n\r\nfunction signOut() {\r\n    var auth2 = gapi.auth2.getAuthInstance();\r\n    auth2.signOut().then(function () {\r\n        gapi.signin2.render('signInGoogle', {\r\n            'onsuccess': 'onSignIn'\r\n        });\r\n    });\r\n}\r\n\r\nfunction isUserRegistered(Email, Id, accessToken) {\r\n    $.ajax({\r\n        url: '/Account/GoogleLogin',\r\n        method: 'GET',\r\n        data: {\r\n            Email: Email,\r\n            AccesKey: Id,\r\n            AccountType: 'Google'\r\n        },\r\n        success: function (response) {\r\n            if (response != null) {\r\n                angular.element('#profileImage').scope().gotoHomepage();\r\n            }\r\n            else {\r\n                window.location.href = \"/views/home/login.html\"\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n","\"use strict\";\r\n\r\nvar customarray = [];\r\n\r\nvar diceinitializer;\r\n\r\nfunction dicenotationvalidator(commandStr) {\r\n    debugger;\r\n    var known_types = ['d4', 'd6', 'd8', 'd10', 'd12', 'd20', 'd100'];\r\n    var validationresult;\r\n    var no = commandStr.split('@');\r\n    var dr0 = /\\s*(\\d*)([a-z]+)(\\d+)(\\s*\\+\\s*(\\d+)){0,1}\\s*(\\+|$)/gi;\r\n    var dr1 = /(\\b)*(\\d+)(\\b)*/gi;\r\n    var ret = { set: [], constant: 0, result: [], error: false }, res;\r\n    while (res = dr0.exec(no[0])) {\r\n        var command = res[2];\r\n        if (command != 'd') { ret.error = true; continue; }\r\n        var count = parseInt(res[1]);\r\n        if (res[1] == '') count = 1;\r\n        var type = 'd' + res[3];\r\n        if (known_types.indexOf(type) == -1) { ret.error = true; continue; }\r\n        while (count--) ret.set.push(type);\r\n        if (res[5]) ret.constant += parseInt(res[5]);\r\n    }\r\n    while (res = dr1.exec(no[1])) {\r\n        ret.result.push(parseInt(res[2]));\r\n    }\r\n\r\n    if (ret == undefined || ret == null) {\r\n        validationresult = false;\r\n    }\r\n    else {\r\n        if (ret.set.length != 0) {\r\n            validationresult = true;\r\n        }\r\n\r\n    }\r\n\r\n    return validationresult;\r\n}\r\n\r\n\r\n\r\nfunction dicerollwithcommand(command) {\r\n\r\n    debugger;\r\n\r\n    //if (!dicenotationvalidator(command)) {\r\n    //    alert(\"Invalid Command\");\r\n    //}\r\n\r\n    $('#canvas').children().remove();\r\n    $('#canvas').append('<canvas width=\"1365\" height=\"345\"></canvas>');\r\n\r\n    $t.id('set').value = command\r\n\r\n\r\n    var da = $t.id('diceareaforroll');\r\n\r\n    //dice_initialize(da);   //mode=1 is the select mode.\r\n\r\n    //var savedattackoptions = $t.id('savedattackoptions');\r\n    //savedattackoptions.style.display = 'block';\r\n\r\n    var roll = $t.id('diceRollTrigger');\r\n    roll.style.display = 'inline-block';\r\n\r\n    var addmod = $t.id('addmod');\r\n    addmod.style.display = 'inline-block';\r\n\r\n    var diceareaforselection = $t.id('diceareaforselection');\r\n    diceareaforselection.style.display = 'none';\r\n\r\n    var showdicerollresult = $t.id('showdicerollresult');\r\n    showdicerollresult.style.display = 'none';\r\n\r\n    var diceareaforroll = $t.id('diceareaforroll');\r\n    diceareaforroll.style.display = 'block';\r\n\r\n    var defaultDiceSelect = $t.id('defaultDiceSelect');\r\n    defaultDiceSelect.style.display = 'none';\r\n\r\n    if (diceinitializer == undefined || diceinitializer == null) {\r\n        diceinitializer = new dice_initialize(da);\r\n        diceinitializer.rolediceagain();\r\n    }\r\n    else {\r\n        diceinitializer = new dice_initialize(da);\r\n        diceinitializer.rolediceagain();\r\n    }\r\n    //box.start_throw(notation_getter,before_roll,after_roll);  // Need to check the code for the roll.\r\n\r\n}\r\n\r\nfunction diceselectcommandtrace_temp() {\r\n    debugger;\r\n    var localvar = \"\";\r\n    customarray = [];\r\n    var finalvar = \"\";\r\n    var dicecommandaftertrace = [];\r\n    var dicecommandaftertracestr = \"\";\r\n\r\n    var dice = $(\"#customset\").val();\r\n\r\n    for (var i = 0; i < dice.length; i++) {\r\n        if (dice[i] != \"+\" && dice[i] != \"/\" && dice[i] != \"-\" && dice[i] != \"*\") {\r\n            localvar = localvar + dice[i];\r\n            if (i == dice.length - 1) {\r\n                customarray.push(localvar);\r\n            }\r\n        }\r\n        else if (dice[i] == \"+\" || dice[i] == \"/\" || dice[i] == \"-\" && dice[i] != \"*\") {\r\n            customarray.push(localvar);\r\n            customarray.push(dice[i]);\r\n            localvar = \"\";\r\n        }\r\n    }\r\n\r\n    for (var j = 0; j < customarray.length; j++) {\r\n        var dice1 = /\\s*(\\d*)([a-z]+)(\\d+)(\\s*\\+\\s*(\\d+)){0,1}\\s*(\\+|$)/gi;\r\n        var dice2 = /(\\b)*(\\d+)(\\b)*/gi;\r\n\r\n        if (dice1.test(customarray[j]) == true && dice2.test(customarray[j]) == true) {\r\n            dicecommandaftertrace.push(customarray[j]);\r\n            dicecommandaftertrace.push(\"+\");\r\n            dicecommandaftertracestr = dicecommandaftertracestr + customarray[j];\r\n            dicecommandaftertracestr = dicecommandaftertracestr + \"+\";\r\n        }\r\n    }\r\n\r\n    return dicecommandaftertracestr;\r\n\r\n}\r\n\r\nfunction diceselectcommandtrace() {\r\n    debugger;\r\n    var localvar = \"\";\r\n    customarray = [];\r\n    var customdicearray = [];\r\n    var finalvar = \"\";\r\n    var dicecommandaftertrace = [];\r\n    var dicecommandaftertracestr = \"\";\r\n    var known_types = ['d4', 'd6', 'd8', 'd10', 'd12', 'd20', 'd100'];\r\n\r\n    var customset = $t.id('customset');\r\n\r\n    var customdiceset = customset.value;\r\n\r\n    var paranthesisCommand = 1;\r\n\r\n    var tempcustomdicearray = [];\r\n\r\n    for (var i = 0; i < customdiceset.length; i++) {\r\n\r\n        if (customdiceset[i] == \"(\") {\r\n            paranthesisCommand = 2;\r\n            continue;\r\n        }\r\n\r\n        if (customdiceset[i] == \")\") {\r\n            tempcustomdicearray.push(localvar);\r\n            paranthesisCommand = 3;\r\n        }\r\n\r\n        if (paranthesisCommand == 1) {\r\n            if (customdiceset[i] != \"+\" && customdiceset[i] != \"/\" && customdiceset[i] != \"-\" && customdiceset[i] != \"*\") {\r\n                localvar = localvar + customdiceset[i];\r\n                if (i == customdiceset.length - 1) {\r\n                    customdicearray.push(localvar);\r\n                }\r\n            }\r\n            else if (customdiceset[i] == \"+\" || customdiceset[i] == \"/\" || customdiceset[i] == \"-\" || customdiceset[i] == \"*\") {\r\n                customdicearray.push(localvar);\r\n                customdicearray.push(customdiceset[i]);\r\n                localvar = \"\";\r\n            }\r\n        }\r\n        else if (paranthesisCommand == 2) {\r\n            if (customdiceset[i] != \"+\" && customdiceset[i] != \"/\" && customdiceset[i] != \"-\" && customdiceset[i] != \"*\") {\r\n                localvar = localvar + customdiceset[i];\r\n                if (i == customdiceset.length - 1) {\r\n                    tempcustomdicearray.push(localvar);\r\n                }\r\n            }\r\n            else if (customdiceset[i] == \"+\" || customdiceset[i] == \"/\" || customdiceset[i] == \"-\" || customdiceset[i] == \"*\") {\r\n                tempcustomdicearray.push(localvar);\r\n                tempcustomdicearray.push(customdiceset[i]);\r\n                localvar = \"\";\r\n            }\r\n        }\r\n        else if (paranthesisCommand == 3) {\r\n            if (tempcustomdicearray.length > 1) {\r\n                customdicearray.push(\"(\");\r\n                for (var j = 0; j < tempcustomdicearray.length; j++) {\r\n                    customdicearray.push(tempcustomdicearray[j]);\r\n                }\r\n                customdicearray.push(\")\");\r\n            }\r\n            else {\r\n                customdicearray.push(\"(\" + tempcustomdicearray[0] + \")\");\r\n            }\r\n            paranthesisCommand = 1;\r\n        }\r\n    }\r\n\r\n    var currentselecteddiceadded = false;\r\n\r\n    for (var j = 0; j < customdicearray.length; j++) {\r\n        var customarraynotation = customdicearray[j].trim();\r\n        var customarrayno = customarraynotation.split('@');\r\n        var customarraydicecommand = /\\s*(\\d*)([a-z]+)(\\d+)(\\s*\\+\\s*(\\d+)){0,1}\\s*(\\+|$)/gi;\r\n        var customarraycount = 0;\r\n        var customarraytype = \"\";\r\n        var newcustomarrayvalue = \"\";\r\n\r\n        var res = [];\r\n        if (!customarrayno[0].includes(' ')) {\r\n            res = customarraydicecommand.exec(customarrayno[0]);\r\n        }\r\n\r\n        var customarraynowithfunc = [];\r\n\r\n        var iscommandvalid = true;\r\n\r\n        var command = '';\r\n\r\n        var commandtype = '';\r\n\r\n        var customarraynowithfuncavail = false;\r\n\r\n        if (res == null || res == \"\" || res == undefined) {\r\n            customarraynowithfuncavail = false;\r\n            customarraynowithfunc = customarrayno[0].split(' ');\r\n            if (customarraynowithfunc.length == 2) {\r\n                res = customarraydicecommand.exec(customarraynowithfunc[0]);\r\n                if (customarraynowithfunc[1] == \"RD\" || customarraynowithfunc[1] == \"RU\") {\r\n                    iscommandvalid = true;\r\n                }\r\n                else if (customarraynowithfunc[1].startsWith(\"KL\") || customarraynowithfunc[1].startsWith(\"KH\") || customarraynowithfunc[1].startsWith(\"DL\") || customarraynowithfunc[1].startsWith(\"DH\")) {\r\n                    var commandcheck = customarraynowithfunc[1]\r\n                    diceSpecialOperatorStr = commandcheck.trim();\r\n                    diceSpecialOperatorCmd = diceSpecialOperatorStr.substring(0, 2);\r\n                    diceSpecialOperatorValue = diceSpecialOperatorStr.charAt(2);\r\n                    if (isNumeric(diceSpecialOperatorValue)) {\r\n                        diceSpecialOperatorValue = parseInt(diceSpecialOperatorValue);\r\n                        iscommandvalid = true;\r\n                    }\r\n                    else {\r\n                        iscommandvalid = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (res != null && res != undefined) {\r\n            if (res.length > 0) {\r\n                command = res[2];\r\n                commandtype = res[2] + res[3];\r\n            }\r\n        }\r\n\r\n        if (command == 'd' && known_types.indexOf(commandtype) > -1 && iscommandvalid == true) {\r\n            if (res[1] == '') {\r\n                customarraycount = 1;\r\n            }\r\n            else {\r\n                customarraycount = parseInt(res[1]);\r\n            }\r\n            dicecommandaftertrace.push(customarraycount + command + res[3]);\r\n        }\r\n\r\n    }\r\n\r\n    customarray = customdicearray;\r\n\r\n    for (var j = 0; j < dicecommandaftertrace.length; j++) {\r\n        dicecommandaftertracestr = dicecommandaftertracestr + dicecommandaftertrace[j];\r\n        dicecommandaftertracestr = dicecommandaftertracestr + \"+\";\r\n    }\r\n    debugger;\r\n    return dicecommandaftertracestr;\r\n\r\n}\r\n\r\nfunction diceresultafterroll(notation, result, totalresult) {\r\n\r\n    var known_types = ['d4', 'd6', 'd8', 'd10', 'd12', 'd20', 'd100'];\r\n\r\n    for (i = 0; i < known_types.length; i++) {\r\n        var diceNotationIndex = -1;\r\n        var diceType = known_types[i]\r\n        var diceResult = $t.id('showdicerollresult_' + diceType);\r\n\r\n        var eachDiceResultSum = 0;\r\n\r\n        for (j = 0; j < notation.set.length; j++) {\r\n            if (diceType == notation.set[j]) {\r\n                diceNotationIndex = j;\r\n            }\r\n            else {\r\n                diceNotationIndex = -1;\r\n            }\r\n            if (diceNotationIndex > -1) {\r\n                eachDiceResultSum = eachDiceResultSum + result[diceNotationIndex];\r\n            }\r\n        }\r\n\r\n        if (diceResult.innerHTML != null && diceResult.innerHTML != undefined && diceResult.innerHTML != \"\") {\r\n            diceResult.innerHTML = eachDiceResultSum;\r\n        }\r\n\r\n    }\r\n\r\n    var diceSumResult = $t.id('showdicerollresult_Sum');\r\n    diceSumResult.innerHTML = totalresult;\r\n\r\n    var showdicerollResult = $t.id('canvas');\r\n    showdicerollResult.style.display = 'none';\r\n\r\n    var showdicerollResult = $t.id('showdicerollresult');\r\n    showdicerollResult.style.display = 'block';\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction diceafterrolltrace(notation, result) {\r\n    debugger;\r\n\r\n    var known_types = ['d4', 'd6', 'd8', 'd10', 'd12', 'd20', 'd100'];\r\n    var fresult = 0;\r\n    var diceCurrentIndex = 0;\r\n    var resultwithdiceroll = [];\r\n\r\n    var dicerollresultbytype = {};\r\n\r\n    customdicearray = customarray;\r\n\r\n    if (result.length <= 0) {\r\n        alert('error in result');\r\n        return;\r\n    }\r\n\r\n    for (var i = 0; i < notation.set.length; i++) {\r\n        var dicetype = notation.set[i];\r\n\r\n        if (dicerollresultbytype[dicetype] == undefined) {\r\n            dicerollresultbytype[dicetype] = [];\r\n        }\r\n\r\n        dicerollresultbytype[dicetype].push(result[i]);\r\n    }\r\n\r\n\r\n    for (var j = 0; j < customdicearray.length; j++) {\r\n\r\n        var customarraynotation = customdicearray[j].trim();\r\n        var customarrayno = customarraynotation.split('@');\r\n        var customarraydicecommand = /\\s*(\\d*)([a-z]+)(\\d+)(\\s*\\+\\s*(\\d+)){0,1}\\s*(\\+|$)/gi;\r\n        var customarraycount = 0;\r\n        var customarraytype = \"\";\r\n        var newcustomarrayvalue = \"\";\r\n\r\n        var diceSpecialOperatorStr = \"\";\r\n        var diceSpecialOperatorCmd = \"\";\r\n        var diceSpecialOperatorValue = 0;\r\n\r\n        var res = [];\r\n        if (!customarrayno[0].includes(' ')) {\r\n            res = customarraydicecommand.exec(customarrayno[0]);\r\n        }\r\n\r\n        var customarraynowithfunc = [];\r\n\r\n        var iscommandvalid = true;\r\n\r\n        var command = '';\r\n\r\n        var commandtype = '';\r\n\r\n        if (res == null || res == \"\" || res == undefined) {\r\n            customarraynowithfuncavail = false;\r\n            customarraynowithfunc = customarrayno[0].split(' ');\r\n            if (customarraynowithfunc.length == 2) {\r\n                res = customarraydicecommand.exec(customarraynowithfunc[0]);\r\n                //command = res[2];\r\n                if (customarraynowithfunc[1] == \"RD\" || customarraynowithfunc[1] == \"RU\") {\r\n                    iscommandvalid = true;\r\n                }\r\n                else if (customarraynowithfunc[1].startsWith(\"KL\") || customarraynowithfunc[1].startsWith(\"KH\") || customarraynowithfunc[1].startsWith(\"DL\") || customarraynowithfunc[1].startsWith(\"DH\")) {\r\n                    var commandcheck = customarraynowithfunc[1]\r\n                    diceSpecialOperatorStr = commandcheck.trim();\r\n                    diceSpecialOperatorCmd = diceSpecialOperatorStr.substring(0, 2);\r\n                    diceSpecialOperatorValue = diceSpecialOperatorStr.charAt(2);\r\n                    if (isNumeric(diceSpecialOperatorValue)) {\r\n                        diceSpecialOperatorValue = parseInt(diceSpecialOperatorValue);\r\n                        iscommandvalid = true;\r\n                    }\r\n                    else {\r\n                        iscommandvalid = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (res != null && res != undefined) {\r\n            if (res.length > 0) {\r\n                command = res[2];\r\n                commandtype = res[2] + res[3];\r\n            }\r\n        }\r\n\r\n        if (command == 'd' && known_types.indexOf(commandtype) > -1 && iscommandvalid == true) {\r\n\r\n            var dicefinalresultwithcommand = 0;\r\n\r\n            if (res[1] == '') {\r\n                customarraycount = 1;\r\n            }\r\n            else {\r\n                customarraycount = parseInt(res[1]);\r\n            }\r\n            customarraytype = 'd' + res[3];\r\n\r\n            var diceresultarraywithcommand = dicerollresultbytype[customarraytype]\r\n\r\n            if (customarraynowithfunc.length == 0) {\r\n                for (var k = 0; k < customarraycount; k++) {\r\n                    dicefinalresultwithcommand = dicefinalresultwithcommand + dicerollresultbytype[customarraytype].pop();\r\n                }\r\n            }\r\n            else if (customarraynowithfunc.length == 2) {\r\n                if (customarraynowithfunc[1].includes(\"KL\") || customarraynowithfunc[1].includes(\"KH\") || customarraynowithfunc[1].includes(\"DL\") || customarraynowithfunc[1].includes(\"DH\")) {\r\n                    var tempdicerollresultbytype = [];\r\n                    for (var k = 0; k < customarraycount; k++) {\r\n                        tempdicerollresultbytype.push(dicerollresultbytype[customarraytype].pop());\r\n                    }\r\n                    tempdicerollresultbytype.sort();\r\n                    for (var k = 0; k < customarraycount; k++) {\r\n                        debugger;\r\n                        if (diceSpecialOperatorCmd == \"KL\") {\r\n                            if (k < diceSpecialOperatorValue) {\r\n                                dicefinalresultwithcommand = dicefinalresultwithcommand + tempdicerollresultbytype.pop();\r\n                            }\r\n                            else {\r\n                                tempdicerollresultbytype.pop();\r\n                            }\r\n                        }\r\n                        else if (diceSpecialOperatorCmd == \"KH\") {\r\n                            if (k >= tempdicerollresultbytype.length - diceSpecialOperatorValue) {\r\n                                dicefinalresultwithcommand = dicefinalresultwithcommand + tempdicerollresultbytype.pop();\r\n                            }\r\n                            else {\r\n                                tempdicerollresultbytype.pop();\r\n                            }\r\n                        }\r\n                        else if (diceSpecialOperatorCmd == \"DL\") {\r\n                            if (k >= tempdicerollresultbytype.length - diceSpecialOperatorValue) {\r\n                                tempdicerollresultbytype.pop();\r\n                            }\r\n                            else {\r\n                                dicefinalresultwithcommand = dicefinalresultwithcommand + tempdicerollresultbytype.pop();\r\n                            }\r\n                        }\r\n                        else if (diceSpecialOperatorCmd == \"DH\") {\r\n                            if (k >= tempdicerollresultbytype.length - diceSpecialOperatorValue) {\r\n                                dicefinalresultwithcommand = dicefinalresultwithcommand + tempdicerollresultbytype.pop();\r\n                            }\r\n                            else {\r\n                                tempdicerollresultbytype.pop();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (customarraynowithfunc[1] == \"RD\" || customarraynowithfunc[1] == \"RU\") {\r\n                    for (var k = 0; k < customarraycount; k++) {\r\n                        dicefinalresultwithcommand = dicefinalresultwithcommand + dicerollresultbytype[customarraytype].pop();\r\n                    }\r\n                    dicefinalresultwithcommand = dicefinalresultwithcommand + ' ' + customarraynowithfunc[1];\r\n                }\r\n            }\r\n\r\n            resultwithdiceroll.push(dicefinalresultwithcommand);\r\n        }\r\n        else {\r\n            resultwithdiceroll.push(customarraynotation);\r\n        }\r\n\r\n    }\r\n\r\n\r\n   \r\n    debugger;\r\n    var resultAfterDiceRoll = calculateDiceCommandResult(resultwithdiceroll);\r\n    //localStorage.setItem(\"resultAfterDiceRoll\", resultAfterDiceRoll);\r\n\r\n    diceresultafterroll(notation, result, resultAfterDiceRoll);\r\n\r\n    return resultAfterDiceRoll;\r\n}\r\n\r\nfunction calculateDiceCommandResult(resultwithdiceroll) {\r\n\r\n    var fresult = 0;\r\n\r\n    var tempresultwithdicerollwithparanthesis = [];\r\n\r\n    var tempresultwithdicerollinsideparanthesis = [];\r\n\r\n    var paranthesisCommand = 1;\r\n\r\n    var paranthesisStartIndex = -1;\r\n\r\n    var tempresultaftercalculation = 0;\r\n\r\n    var tempresultaftercalculationinsideparanthesis = 0;\r\n\r\n    for (var i = 0; i < resultwithdiceroll.length; i++) {\r\n        if (resultwithdiceroll[i] == \"(\") {\r\n            paranthesisCommand = 2;\r\n            paranthesisStartIndex = i;\r\n            continue;\r\n        }\r\n        else if (resultwithdiceroll[i] == \")\" && i == resultwithdiceroll.length - 1) {\r\n            tempresultaftercalculationinsideparanthesis = calculateCommandResult(tempresultwithdicerollinsideparanthesis);\r\n            tempresultwithdicerollwithparanthesis.push(tempresultaftercalculationinsideparanthesis);\r\n            paranthesisCommand = 1;\r\n        }\r\n        else if (resultwithdiceroll[i] == \")\") {\r\n            paranthesisCommand = 3;\r\n            paranthesisStartIndex = i;\r\n        }\r\n        else {\r\n            if (paranthesisCommand == 1) {\r\n                tempresultwithdicerollwithparanthesis.push(resultwithdiceroll[i]);\r\n            }\r\n            else if (paranthesisCommand == 2) {\r\n                tempresultwithdicerollinsideparanthesis.push(resultwithdiceroll[i]);\r\n            }\r\n            else if (paranthesisCommand == 3) {\r\n                tempresultaftercalculationinsideparanthesis = calculateCommandResult(tempresultwithdicerollinsideparanthesis);\r\n                tempresultwithdicerollwithparanthesis.push(tempresultaftercalculationinsideparanthesis);\r\n                paranthesisCommand = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    fresult = calculateCommandResult(tempresultwithdicerollwithparanthesis);\r\n\r\n    return fresult;\r\n}\r\n\r\nfunction calculateCommandResult(resultwithdiceroll) {\r\n    debugger;\r\n\r\n    var resultwithdicerollAfterMultiply = [];\r\n    var operand1 = \"\";\r\n    var operand2 = \"\";\r\n    var operator = \"\";\r\n\r\n    var fresult = 0;\r\n\r\n    if (resultwithdiceroll.length == 1) {\r\n        fresult = resultwithdiceroll[0];\r\n    }\r\n    else {\r\n        //Caculating the array for multipliction.\r\n        var resultAfterEachOperator = [];\r\n        var resultBeforeEachOperator = resultwithdiceroll;\r\n        for (var operatorCount = 1; operatorCount <= 4; operatorCount++) {\r\n\r\n            operand1 = \"\";\r\n            operator = \"\";\r\n            operand2 = \"\";\r\n\r\n            for (var i = 0; i < resultBeforeEachOperator.length; i++) {\r\n\r\n                var resultBeforeEachOperatorAsChar = resultBeforeEachOperator[i];\r\n\r\n                if (!isNumeric(resultBeforeEachOperatorAsChar)) {\r\n                    resultBeforeEachOperatorAsChar = resultBeforeEachOperatorAsChar.trim();\r\n                }\r\n\r\n                if (isNumeric(resultBeforeEachOperatorAsChar)) {\r\n                    resultBeforeEachOperatorAsChar = parseInt(resultBeforeEachOperatorAsChar);\r\n                }\r\n\r\n                if (operand1 == \"\" && resultBeforeEachOperatorAsChar != '+' && resultBeforeEachOperatorAsChar != '-' && resultBeforeEachOperatorAsChar != '*' && resultBeforeEachOperatorAsChar != '/') {\r\n                    operand1 = resultBeforeEachOperatorAsChar;\r\n                    continue;\r\n                }\r\n                else if (operator == \"\" && resultBeforeEachOperatorAsChar.length == 1) {\r\n                    operator = resultBeforeEachOperatorAsChar;\r\n                    continue;\r\n                }\r\n                else if (operand2 == \"\") {\r\n                    operand2 = resultBeforeEachOperatorAsChar;\r\n                }\r\n\r\n                if (operator != \"\" && operand1 != \"\" && operand2 != \"\") {\r\n                    if (operator == \"*\" && operatorCount == 1) {\r\n                        var tempresult = operand1 * operand2;\r\n                        resultAfterEachOperator.pop();\r\n                        resultAfterEachOperator.push(tempresult);\r\n                    }\r\n                    else if (operator == \"/\" && operatorCount == 2) {\r\n                        var operand2Array = operand2.split(' ');\r\n                        var operand2Num = 0;\r\n                        var operand2Func = null;\r\n                        if (operand2Array.length > 1) {\r\n                            operand2Num = operand2Array[0];\r\n                            operand2Func = operand2Array[1];\r\n                        }\r\n                        else {\r\n                            operand2Num = operand2Array[0];\r\n                        }\r\n                        var tempresult = operand1 / operand2Num;\r\n                        if (operand2Func == \"RD\") {\r\n                            resultAfterEachOperator.pop();\r\n                            resultAfterEachOperator.push(Math.floor(tempresult));\r\n                        }\r\n                        else if (operand2Func == \"RU\") {\r\n                            resultAfterEachOperator.pop();\r\n                            resultAfterEachOperator.push(Math.ceil(tempresult));\r\n                        }\r\n                        else {\r\n                            resultAfterEachOperator.push(tempresult);\r\n                            operand1 = tempresult;\r\n\r\n                        }\r\n                    }\r\n                    else if (operator == \"-\" && operatorCount == 3) {\r\n                        var tempresult = operand1 - operand2;\r\n                        resultAfterEachOperator.pop();\r\n                        resultAfterEachOperator.push(tempresult);\r\n                        operand1 = tempresult;\r\n\r\n                    }\r\n                    else if (operator == \"+\" && operatorCount == 4) {\r\n                        var tempresult = 0;\r\n                        if (isNumeric(operand1) && isNumeric(operand2)) {\r\n                            tempresult = operand1 + operand2;\r\n                        }\r\n                        else {\r\n                            tempresult = operand1 + operand2;\r\n                        }\r\n                        resultAfterEachOperator.pop();\r\n                        resultAfterEachOperator.push(tempresult);\r\n                        operand1 = tempresult;\r\n                    }\r\n                    else {\r\n                        if (resultAfterEachOperator.length > 0) {\r\n                            resultAfterEachOperator.push(operator);\r\n                            resultAfterEachOperator.push(operand2);\r\n                        }\r\n                        else {\r\n                            resultAfterEachOperator.push(operand1);\r\n                            resultAfterEachOperator.push(operator);\r\n                            resultAfterEachOperator.push(operand2);\r\n                        }\r\n                        operand1 = operand2;\r\n                    }\r\n                    operator = \"\";\r\n                    operand2 = \"\";\r\n                }\r\n            }\r\n            resultBeforeEachOperator = resultAfterEachOperator;\r\n            resultAfterEachOperator = [];\r\n            if (resultBeforeEachOperator.length == 1) {\r\n                break;\r\n            }\r\n        }\r\n        if (resultBeforeEachOperator.length == 1) {\r\n            fresult = resultBeforeEachOperator[0];\r\n        }\r\n    }\r\n\r\n    return fresult;\r\n}\r\n\r\nfunction isNumeric(n) {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\n\r\n//This function is used to select the dice command and also roll the dice.\r\nfunction dicerollwithoutcommand() {\r\n\r\n    debugger;\r\n\r\n    var defaultDiceSelect = $t.id('defaultDiceSelect');\r\n    defaultDiceSelect.style.display = 'none';\r\n\r\n    var roll = $t.id('diceRollTrigger');\r\n    roll.style.display = 'block';\r\n\r\n    var addmod = $t.id('addmod');\r\n    addmod.style.display = 'block';\r\n\r\n}\r\n\r\nfunction DiceCommandRoll() {\r\n    debugger;\r\n    $('#canvas').children().remove();\r\n    $('#canvas').append('<canvas width=\"1365\" height=\"345\"></canvas>');\r\n\r\n    var showdicerollResult = $t.id('canvas');\r\n    showdicerollResult.style.display = 'block';\r\n\r\n    var diceareaforselection = $t.id('diceareaforselection');\r\n    diceareaforselection.style.display = 'none';\r\n\r\n    var showdicerollresult = $t.id('showdicerollresult');\r\n    showdicerollresult.style.display = 'none';\r\n\r\n    var defaultDiceSelect = $t.id('defaultDiceSelect');\r\n    defaultDiceSelect.style.display = 'none';\r\n\r\n    var diceareaforroll = $t.id('diceareaforroll');\r\n    diceareaforroll.style.display = 'block';\r\n\r\n    var savedattackoptions = $t.id('savedattackoptions');\r\n    savedattackoptions.style.display = 'block';\r\n\r\n    var addmod = $t.id('addmod');\r\n    addmod.style.display = 'block';\r\n\r\n    var lastDiceRollResult = $t.id('lastDiceRollResult');\r\n    lastDiceRollResult.style.display = 'block';\r\n\r\n    var customset = $t.id('customset');\r\n\r\n    var customsetatroll = $t.id('customsetatroll');\r\n    customsetatroll.value = customset.value;\r\n\r\n    var da = $t.id('diceareaforroll');\r\n   \r\n    diceinitializer = new dice_initialize(da);\r\n    diceinitializer.rolediceagain();\r\n}\r\n\r\n//This function is used to clear the select dice command.\r\nfunction diceCommandClear() {\r\n    debugger;\r\n    var customset = $t.id('customset');\r\n    customset.value = \"\";\r\n}\r\n\r\n//This function is used to select the dice command only\r\nfunction diceselectcommand() {\r\n    debugger;\r\n\r\n    var selectedCommand = \"\";\r\n\r\n    //Here hide the dice roll screen.\r\n\r\n    var savedattackoptions = $t.id('savedattackoptions');\r\n    savedattackoptions.style.display = 'none';\r\n\r\n    var addmod = $t.id('addmod');\r\n    addmod.style.display = 'none';\r\n\r\n    var diceRollTrigger = $t.id('diceRollTrigger');\r\n    diceRollTrigger.style.display = 'none';\r\n\r\n    var dicesavecommand = $t.id('dicesavecommand');\r\n    dicesavecommand.style.display = 'none';\r\n\r\n    var lastDiceRollResult = $t.id('lastDiceRollResult');\r\n    lastDiceRollResult.style.display = 'none';\r\n\r\n    var defaultDiceSelect = $t.id('defaultDiceSelect');\r\n    defaultDiceSelect.style.display = 'block';\r\n\r\n    return selectedCommand;\r\n\r\n}\r\n\r\nfunction parsecustomdice_notation(notation) {\r\n    debugger;\r\n    var known_types = ['d4', 'd6', 'd8', 'd10', 'd12', 'd20', 'd100'];\r\n\r\n    var no = notation.split('@');\r\n    var dr0 = /\\s*(\\d*)([a-z]+)(\\d+)(\\s*\\+\\s*(\\d+)){0,1}\\s*(\\+|$)/gi;\r\n    var dr1 = /(\\b)*(\\d+)(\\b)*/gi;\r\n    var ret = { set: [], constant: 0, result: [], error: false }, res;\r\n    while (res = dr0.exec(no[0])) {\r\n        var command = res[2];\r\n        if (command != 'd') { ret.error = true; continue; }\r\n        var count = parseInt(res[1]);\r\n        if (res[1] == '') count = 1;\r\n        var type = 'd' + res[3];\r\n        if (known_types.indexOf(type) == -1) { ret.error = true; continue; }\r\n        while (count--) ret.set.push(type);\r\n        if (res[5]) ret.constant += parseInt(res[5]);\r\n    }\r\n    while (res = dr1.exec(no[1])) {\r\n        ret.result.push(parseInt(res[2]));\r\n    }\r\n    return ret;\r\n}\r\n\r\n//Used to get the dice command in select mode.\r\nfunction dicecommandsearch(dicename) {\r\n    debugger;\r\n    if (dicename == undefined) {\r\n        return;\r\n    }\r\n\r\n    var localvar = \"\";\r\n\r\n    var dicecommandaftertracestr = \"\";\r\n\r\n    var customset = $t.id('customset');\r\n\r\n    var customdiceset = customset.value;\r\n\r\n    var customdicearray = [];\r\n\r\n    var currentselecteddicenotation = dicename;\r\n    var currentselecteddiceno = currentselecteddicenotation.split('@');\r\n    var dicecommandexpression = /\\s*(\\d*)([a-z]+)(\\d+)(\\s*\\+\\s*(\\d+)){0,1}\\s*(\\+|$)/gi;\r\n    var dicecommandsplitresult = dicecommandexpression.exec(currentselecteddiceno[0]);\r\n    var currentselecteddicecommand = dicecommandsplitresult[2];\r\n    var currentselecteddicecount = 0;\r\n    var currentselecteddicetype = \"\";\r\n\r\n    if (currentselecteddicecommand == 'd') {\r\n        if (dicecommandsplitresult[1] == '') {\r\n            currentselecteddicecount = 1;\r\n        }\r\n        else {\r\n            currentselecteddicecount = parseInt(dicecommandsplitresult[1]);\r\n        }\r\n        currentselecteddicetype = 'd' + dicecommandsplitresult[3];\r\n    }\r\n\r\n    for (var i = 0; i < customdiceset.length; i++) {\r\n        if (customdiceset[i] != \"+\" && customdiceset[i] != \"/\" && customdiceset[i] != \"-\" && customdiceset[i] != \"*\") {\r\n            localvar = localvar + customdiceset[i];\r\n            if (i == customdiceset.length - 1) {\r\n                customdicearray.push(localvar);\r\n            }\r\n        }\r\n        else if (customdiceset[i] == \"+\" || customdiceset[i] == \"/\" || customdiceset[i] == \"-\" || customdiceset[i] != \"*\") {\r\n            customdicearray.push(localvar);\r\n            customdicearray.push(customdiceset[i]);\r\n            localvar = \"\";\r\n        }\r\n    }\r\n\r\n    var currentselecteddiceadded = false;\r\n\r\n    for (var j = 0; j < customdicearray.length; j++) {\r\n        var customarraynotation = customdicearray[j].trim();\r\n        var customarrayno = customarraynotation.split('@');\r\n        var customarraydicecommand = /\\s*(\\d*)([a-z]+)(\\d+)(\\s*\\+\\s*(\\d+)){0,1}\\s*(\\+|$)/gi;\r\n        var customarraycount = 0;\r\n        var customarraytype = \"\";\r\n        var newcustomarrayvalue = \"\";\r\n\r\n        var res = [];\r\n        if (!customarrayno[0].includes(' ')) {\r\n            res = customarraydicecommand.exec(customarrayno[0]);\r\n        }\r\n\r\n        var customarraynowithfunc = [];\r\n\r\n        var customarraynowithfuncavail = false;\r\n\r\n        if (res == null || res == \"\" || res == undefined) {\r\n            customarraynowithfunc = customarrayno[0].split(' ');\r\n            if (customarraynowithfunc.length == 2) {\r\n                res = customarraydicecommand.exec(customarraynowithfunc[0]);\r\n                customarraynowithfuncavail = true;\r\n            }\r\n            else {\r\n                continue;\r\n            }\r\n        }\r\n\r\n        var command = res[2];\r\n        if (command == 'd') {\r\n            if (res[1] == '') {\r\n                customarraycount = 1;\r\n            }\r\n            else {\r\n                customarraycount = parseInt(res[1]);\r\n            }\r\n            customarraytype = 'd' + res[3];\r\n        }\r\n\r\n        if (customarraytype == currentselecteddicetype) {\r\n\r\n            customarraycount = customarraycount + 1;\r\n            newcustomarrayvalue = customarraycount + customarraytype;\r\n            if (customarraynowithfuncavail == true) {\r\n                customdicearray[j] = newcustomarrayvalue + ' ' + customarraynowithfunc[1];\r\n            }\r\n            else {\r\n                customdicearray[j] = newcustomarrayvalue\r\n            }\r\n\r\n            currentselecteddiceadded = true;\r\n        }\r\n    }\r\n\r\n    if (currentselecteddiceadded == false) {\r\n        if (customdicearray.length > 0) {\r\n            customdicearray.push('+');\r\n            customdicearray.push(dicename);\r\n        }\r\n        else {\r\n            customdicearray.push(dicename);\r\n        }\r\n    }\r\n\r\n    if (customdicearray.length > 0) {\r\n        for (var j = 0; j < customdicearray.length; j++) {\r\n            dicecommandaftertracestr = dicecommandaftertracestr.trim() + ' ' + customdicearray[j].trim();\r\n        }\r\n    }\r\n\r\n    customset.value = dicecommandaftertracestr.trim();\r\n\r\n}\r\n\r\nfunction stringifycustomdice_notation(nn) {\r\n    var dict = {}, notation = '';\r\n    for (var i in nn.set)\r\n        if (!dict[nn.set[i]]) dict[nn.set[i]] = 1; else ++dict[nn.set[i]];\r\n    for (var i in dict) {\r\n        if (notation.length) notation += ' + ';\r\n        notation += (dict[i] > 1 ? dict[i] : '') + i;\r\n    }\r\n    if (nn.constant) notation += ' + ' + nn.constant;\r\n    return notation;\r\n}\r\n\r\nfunction customrolediceagain() {\r\n    debugger;\r\n\r\n    var showdicerollResult = $t.id('canvas');\r\n    showdicerollResult.style.display = 'block';\r\n\r\n    var showdicerollResult = $t.id('showdicerollresult');\r\n    showdicerollResult.style.display = 'none';\r\n\r\n    diceinitializer.rolediceagain();\r\n}\r\n\r\nfunction dicerollcomplete() {\r\n    debugger;\r\n    var diceareaforroll = $t.id('diceareaforroll');\r\n    diceareaforroll.style.display = 'none';\r\n    var diceareaforselection = $t.id('diceareaforselection');\r\n    diceareaforselection.style.display = 'block';\r\n}","\"use strict\";\r\n\r\nfunction dice_initialize(container) {\r\n    debugger;\r\n    //$t.remove($t.id('loading_text'));\r\n    var modaPOPUP = $t.id('myModal');\r\n    var canvas = $t.id('canvas');\r\n    // canvas.style.width = window.innerWidth - 1 + 'px';\r\n    // canvas.style.height = window.innerHeight - 1 + 'px';\r\n    // canvas.style.width\t = modaPOPUP.innerWidth - 1 + 'px';\r\n    // canvas.style.height = modaPOPUP.innerHeight - 1 + 'px';\r\n    canvas.style.width = 570 - 1 + 'px';\r\n    canvas.style.height = 500 - 1 + 'px';\r\n    //var label = $t.id('label');\r\n    var rollresult = $t.id('rollresult');\r\n    var set = $t.id('set');\r\n    var customset = $t.id('customset');\r\n    //var selector_div = $t.id('selector_div');\r\n    //var info_div = $t.id('info_div');\r\n    var result_div = $t.id('sethelp');    //[Customr Code]  RavTeja.\r\n\r\n    var lastrunresult = $t.id('lastrunresult');\r\n\r\n    on_set_change();\r\n\r\n\r\n    $t.dice.use_true_random = false;\r\n\r\n    function on_set_change(ev) { set.style.width = set.value.length + 3 + 'ex'; }\r\n    //$t.bind(set, 'keyup', on_set_change);\r\n    //$t.bind(set, 'mousedown', function (ev) { ev.stopPropagation(); });\r\n    //$t.bind(set, 'mouseup', function (ev) { ev.stopPropagation(); });\r\n    //$t.bind(set, 'focus', function (ev) { $t.set(container, { class: '' }); });\r\n    //$t.bind(set, 'blur', function (ev) { $t.set(container, { class: 'noselect' }); });\r\n\r\n    //$t.bind($t.id('clear'), ['mouseup', 'touchend'], function (ev) {\r\n    //    ev.stopPropagation();\r\n    //    set.value = '0';\r\n    //    on_set_change();\r\n\r\n    //    //[Customer Code]  RavTeja.\r\n    //    result_div.innerHTML = 'choose your dice set by clicking the dices or by direct input of notation,<br/>tap and drag on free space of screen or hit throw button to roll';\r\n    //});\r\n\r\n    var box = new $t.dice.dice_box(canvas, { w: 500, h: 300 });\r\n    box.animate_selector = false;\r\n\r\n    $t.bind(window, 'resize', function () {\r\n        canvas.style.width = modaPOPUP.innerWidth - 1 + 'px';\r\n        canvas.style.height = modaPOPUP.innerHeight - 1 + 'px';\r\n        //canvas.style.width = window.innerWidth - 1 + 'px';\r\n        //canvas.style.height = window.innerHeight - 1 + 'px';\r\n        box.reinit(canvas, { w: 500, h: 300 });\r\n    });\r\n\r\n    function show_selector() {\r\n        //info_div.style.display = 'none';\r\n        //selector_div.style.display = 'block';\r\n        box.draw_selector();\r\n    }\r\n\r\n\r\n    function before_roll(vectors, notation, callback) {\r\n        debugger;\r\n        //info_div.style.display = 'block';\r\n        //selector_div.style.display = 'none';\r\n        // do here rpc call or whatever to get your own result of throw.\r\n        // then callback with array of your result, example:\r\n        // callback([2, 2, 2, 2]); // for 4d6 where all dice values are 2.\r\n        callback();\r\n    }\r\n\r\n    function notation_getter() {\r\n        set.value = diceselectcommandtrace();    //[Customr Code]  RavTeja.\r\n        return $t.dice.parse_notation(set.value);\r\n    }\r\n\r\n    function after_roll(notation, result) {\r\n        var res = result.join(' ');\r\n        if (notation.constant) res += ' +' + notation.constant;\r\n        if (result.length > 1) res += ' = ' +\r\n            (result.reduce(function (s, a) { return s + a; }) + notation.constant);\r\n\r\n\r\n        res = diceafterrolltrace(notation, result);\r\n\r\n        debugger;\r\n\r\n        rollresult.value = res;\r\n        localStorage.setItem(\"rollresult\", rollresult.value);\r\n        //info_div.style.display = 'inline-block';\r\n        lastrunresult.value = res;\r\n        //result_div.innerHTML = res;    //[Customr Code]  RavTeja.\r\n    }\r\n\r\n    box.bind_mouse(container, notation_getter, before_roll, after_roll);\r\n\r\n    //box.bind_throw($t.id('throw'), notation_getter, before_roll, after_roll);\r\n\r\n\r\n\r\n    //$t.bind(container, ['mouseup'], function (ev) {\r\n    //    debugger;\r\n    //    ev.stopPropagation();\r\n    //    if (selector_div.style.display == 'none') {\r\n    //        if (!box.rolling) show_selector();\r\n    //        box.rolling = false;\r\n    //        return;\r\n    //    }\r\n    //    var name = box.search_dice_by_mouse(ev);\r\n    //    if (name != undefined) {      //[Customr Code]  RavTeja.\r\n    //        customset.value = customset.value + ' + ' + name\r\n    //    }\r\n    //    if (name != undefined) {\r\n    //        var notation = $t.dice.parse_notation(set.value);\r\n    //        notation.set.push(name);\r\n    //        //set.value = $t.dice.stringify_notation(notation);     //[Customr Code]  RavTeja.\r\n    //        on_set_change();\r\n    //    }\r\n    //});\r\n\r\n    var params = $t.get_url_params();\r\n    if (params.notation) {\r\n        set.value = params.notation;\r\n    }\r\n    if (params.roll) {\r\n        $t.raise_event($t.id('throw'), 'mouseup');\r\n    }\r\n    else {\r\n        show_selector();\r\n    }\r\n\r\n\r\n   // box.bind_customthrow(notation_getter, before_roll, after_roll);\r\n\r\n    this.rolediceagain = function () {\r\n        box.bind_customthrow(notation_getter, before_roll, after_roll);\r\n    }\r\n}\r\n","(function () {\r\n    'use strict';\r\n\r\n    // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\r\n    if (!Array.prototype.findIndex) {\r\n        Object.defineProperty(Array.prototype, 'findIndex', {\r\n            value: function (predicate) {\r\n                // 1. Let O be ? ToObject(this value).\r\n                if (this == null) {\r\n                    throw new TypeError('\"this\" is null or not defined');\r\n                }\r\n\r\n                var o = Object(this);\r\n\r\n                // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n                var len = o.length >>> 0;\r\n\r\n                // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n                if (typeof predicate !== 'function') {\r\n                    throw new TypeError('predicate must be a function');\r\n                }\r\n\r\n                // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n                var thisArg = arguments[1];\r\n\r\n                // 5. Let k be 0.\r\n                var k = 0;\r\n\r\n                // 6. Repeat, while k < len\r\n                while (k < len) {\r\n                    // a. Let Pk be ! ToString(k).\r\n                    // b. Let kValue be ? Get(O, Pk).\r\n                    // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n                    // d. If testResult is true, return k.\r\n                    var kValue = o[k];\r\n                    if (predicate.call(thisArg, kValue, k, o)) {\r\n                        return k;\r\n                    }\r\n                    // e. Increase k by 1.\r\n                    k++;\r\n                }\r\n\r\n                // 7. Return -1.\r\n                return -1;\r\n            }\r\n        });\r\n    }\r\n})();","(function (r) {\r\n    'use strict';\r\n\r\n    GridStackUI.Utils.getNode = function (el) {\r\n        return el.data('_gridstack_node');\r\n    };\r\n\r\n    GridStackUI.Utils.getNodeData = function (el) {\r\n        return el.data('_item_data');\r\n    };\r\n\r\n    Math.clamp = function (num, min, max) {\r\n        if (num <= min) return min;\r\n        if (max <= num) return max;\r\n        return num;\r\n    };\r\n\r\n    Math.randomInteger = function (min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    };\r\n\r\n    r.obj2Styles = function(obj) {\r\n\r\n        if (obj) {\r\n\r\n            var str = '';\r\n\r\n            for (var p in obj) {\r\n                if (obj.hasOwnProperty(p)) {\r\n                    str += '; '\r\n                    str += p;\r\n                    str += ': ';\r\n                    str += obj[p]\r\n                }\r\n            }\r\n\r\n            if (str.length > 1)\r\n                return str.substring(2);\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    r.styles2Obj = function(str) {\r\n\r\n        var regex = /([\\w-]*)\\s*:\\s*([^;]*)/g;\r\n        var match, obj = {};\r\n\r\n        while (match = regex.exec(str))\r\n            obj[match[1]] = match[2].trim();\r\n\r\n        return obj;\r\n    };\r\n\r\n    r.isNullOrWhiteSpace = function (v) {\r\n        return v == null || (/^\\s*$/).test(v);\r\n    }\r\n\r\n    r.tileTypes = {\r\n        note: { id: 1, name: \"Note\" },\r\n        counter: { id: 2, name: \"Counter\" },\r\n        attribute: { id: 3, name: \"Attribute\" },\r\n        command: { id: 3, name: \"Command\" },\r\n        inventory: { id: 4, name: \"Inventory\" },\r\n        equipment: { id: 5, name: \"Equipment\" }\r\n    };\r\n\r\n    //r.isUndefinedOrNull = function (val) {\r\n    //    return angular.isUndefined(val) || val === null;\r\n    //};\r\n\r\n    r.isEmpty = function (value) {\r\n        // The == is by design.\r\n        return (value == null) || value.length === 0;\r\n    };\r\n\r\n    r.fillArray = function (src, dest, converter) {\r\n\r\n        if (typeof converter !== 'function')\r\n            converter = function (item) { return item; }\r\n\r\n        if (dest) {\r\n            dest.length = 0;\r\n            if (src)\r\n                src.forEach(function (item) { dest.push(converter(item)); });\r\n        }\r\n    };\r\n\r\n})(window.rpgsmith = window.rpgsmith || {});","(function () {\r\n    'use strict';\r\n\r\n\r\n\r\n    angular.module('rpgsmith-dialogs', [\r\n        'ui.bootstrap', 'dialogs.main'\r\n    ]);\r\n\r\n    angular.module('rpgsmith-services', [\r\n        'ngStorage'\r\n    ]);\r\n\r\n    angular.module('rpgsmith-filters', [\r\n        'rpgsmith-services'\r\n    ]);\r\n\r\n    angular.module('rpgsmith-directives', []);\r\n    angular.module('rpgsmith-controllers', [\r\n        'rpgsmith-directives',\r\n        'rpgsmith-services'\r\n    ]);\r\n    angular.module('rpgsmith-templates', []);\r\n\r\n    var app = angular.module('rpgsmith', [\r\n        'dialogs.main', 'ngMessages',\r\n        'angularSpectrumColorpicker',\r\n        'ngAnimate', 'ngTouch', 'ngSanitize', 'ngStorage', 'ngImgCrop', 'ngFileUpload',\r\n        'pageslide-directive',\r\n        'rpgsmith-directives', 'rpgsmith-dialogs', 'rpgsmith-filters',\r\n        'rpgsmith-controllers', 'rpgsmith-services', 'rpgsmith-templates',\r\n        'toaster',\r\n        'ui.router', 'ui.sortable', 'ui.tab.scroll', 'ui.select', 'ui.tinymce', 'colorpicker','ngStorage'\r\n    ]);\r\n\r\n\r\n    app.filter('trusted', ['$sce', function ($sce) {\r\n        return function (text) {\r\n            return $sce.trustAsHtml(text);\r\n        }\r\n    }]);\r\n\r\n    app.config(['uiSelectConfig', function (uiSelectConfig) {\r\n        uiSelectConfig.theme = 'bootstrap';\r\n        uiSelectConfig.searchEnabled = false;\r\n        uiSelectConfig.skipFocusser = true;\r\n    }]);\r\n\r\n    app.config(['$animateProvider', function ($animateProvider) {\r\n        $animateProvider.classNameFilter(/^(?:(?!ng-animate-disabled).)*$/);\r\n    }]);\r\n\r\n    app.config(['$localStorageProvider', function ($localStorageProvider) {\r\n        $localStorageProvider.setKeyPrefix('RPGSmith');\r\n    }]);\r\n\r\n    app.config(['$stateProvider', '$urlRouterProvider', '$locationProvider', '$httpProvider',\r\n        function ($stateProvider, $urlRouterProvider, $locationProvider, $httpProvider) {\r\n            $httpProvider.interceptors.push('authInterceptor');\r\n            $locationProvider.html5Mode(true).hashPrefix('!');\r\n            //  $locationProvider.hashPrefix('');\r\n            $urlRouterProvider.otherwise(\"/characters\");\r\n            $stateProvider\r\n                .state('login', {\r\n                    url: '/login',\r\n                    cache: false,\r\n                    authenticate: false,\r\n                    templateUrl: '/views/home/login.html',\r\n                    controller: 'loginController',\r\n                    resolve: {\r\n                        previousState: ['$state', function ($state) {\r\n                            var current = {\r\n                                name: $state.current.name,\r\n                                params: $state.params,\r\n                                url: $state.href($state.current.name, $state.params)\r\n                            }\r\n                            return current;\r\n                        }]\r\n                    }\r\n                })\r\n                .state('profile', {\r\n                    abstract: true,\r\n                    authenticate: false,\r\n                    template: '<div ui-view=\"topNav\"></div><div ui-view=\"main\"></div>'\r\n                })\r\n                .state('profile.characters', {\r\n                    authenticate: true,\r\n                    url: '/characters',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/characters.html',\r\n                            controller: 'charactersPageController'\r\n                        }\r\n                    },\r\n                    params: {\r\n                        menuSelected: 'Characters'\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.addnewcharacterdialog', {\r\n                    authenticate: true,\r\n                    url: '/characters/addnewcharacterdialog',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/dialogs/edit-character.html',\r\n                            controller: 'charactersPageController'\r\n                        }\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.addnewcorestatdialog', {\r\n                    authenticate: true,\r\n                    url: '/RuleSet/addnewcorestatdialog',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/dialogs/addnewcorestat.html',\r\n                            controller: 'ruleSetPageController'\r\n                        }\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.addnewcharacter', {\r\n                    authenticate: true,\r\n                    url: '/addnewcharacter',\r\n                    views: {\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/character-addnew.html',\r\n                            controller: 'charactersPageController'\r\n                        }\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.character', {\r\n                    abstract: true,\r\n                    authenticate: true,\r\n                    url: '^/characterlayout'\r\n                })\r\n                .state('profile.character.notes', {\r\n                    authenticate: true,\r\n                    url: '/notes',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/character-notes.html',\r\n                            controller: 'notesPageController',\r\n                        }\r\n                    }\r\n                })\r\n                .state('profile.AddNewRuleSet', {\r\n                    authenticate: true,\r\n                    url: '/RuleSets',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/RuleSet.html',\r\n                            controller: 'ruleSetPageController'\r\n                        }\r\n                    },\r\n                    params: {\r\n                        menuSelected: 'Rulesets',\r\n                        action: 1\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.NewRuleSet', {\r\n                    authenticate: true,\r\n                    url: '/RuleSet?RuleSetId',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav_addnewruleset.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/ruleset-addnew.html',\r\n                            controller: 'ruleSetPageController'\r\n                        }\r\n                    },\r\n                    params: {\r\n                        action: 2,\r\n                        isNew: 0,\r\n                        // RuleSetId: 0,\r\n                        CopyOrUpdate: 0,\r\n                        IsAddRuleSet: 0\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.ExistingRuleSet', {\r\n                    authenticate: true,\r\n                    url: '/characters/ExistingRuleSet',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/dialogs/ExistingRuleset.html',\r\n                            controller: 'charactersPageController'\r\n                        }\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.character.counters', {\r\n                    authenticate: true,\r\n                    url: '/counters',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/character-counters.html',\r\n                            controller: 'countersPageController',\r\n                        }\r\n                    }\r\n                })\r\n                .state('profile.character.attributes', {\r\n                    authenticate: true,\r\n                    url: '/stats',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/character-attributes.html',\r\n                            controller: 'attributesPageController',\r\n                        }\r\n                    }\r\n                })\r\n                .state('profile.character.links', {\r\n                    authenticate: true,\r\n                    url: '/links',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/character-links.html',\r\n                            controller: 'linksPageController',\r\n                        }\r\n                    }\r\n                })\r\n                .state('profile.character.executes', {\r\n                    authenticate: true,\r\n                    url: '/executes',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/character-executes.html',\r\n                            controller: 'executesPageController',\r\n                        }\r\n                    }\r\n                })\r\n                .state('profile.character.commands', {\r\n                    authenticate: true,\r\n                    url: '/commands',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/character-commands.html',\r\n                            controller: 'commandsPageController',\r\n                        }\r\n                    }\r\n                })\r\n                .state('profile.character.layouts', {\r\n                    authenticate: true,\r\n                    url: '/layouts',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/character-layouts.html',\r\n                            controller: 'layoutsPageController',\r\n                        }\r\n                    }\r\n                })\r\n                .state('profile.character.layout', {\r\n                    authenticate: true,\r\n                    url: '?characterId',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/character-layout.html',\r\n                            controller: 'layoutPageController'\r\n                        }\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }],\r\n                    params: {\r\n                        //characterId:-1,\r\n                        action: 1,\r\n                        isNew: 1\r\n                    }\r\n                })\r\n                .state('profile.EditProfile', {\r\n                    authenticate: true,\r\n                    url: '/Editprofile',\r\n                    //  url: '/Editprofile/',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav_addnewruleset.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/editprofile.html',\r\n                            controller: 'topNavController'\r\n                        }\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                    //params: {\r\n                    //    userid: {\r\n                    //        dynamic: true\r\n                    //    }\r\n\r\n                    //},\r\n\r\n                   \r\n                })\r\n                .state('profile.ResetPassword', {\r\n                    authenticate: false,\r\n                    url: '/ResetPassword',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav_addnewruleset.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/resetpassword.html',\r\n                            controller: 'topNavController'\r\n                        }\r\n                    },\r\n                    //params: {\r\n                    //    userid: {\r\n                    //        dynamic: true\r\n                    //    }\r\n\r\n                    //},\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.Items', {\r\n                    authenticate: true,\r\n                    url: '/Items?RuleSetId',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/ruleset_itemproperties.html',\r\n                            controller: 'ruleSetPageController'\r\n                        }\r\n                    },\r\n                    params: {\r\n                        action: 4,\r\n                        // RuleSetId: 0,\r\n                        ContentId: 1\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.Spells', {\r\n                    authenticate: true,\r\n                    url: '/Spells?RuleSetId',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/ruleset-spells.html',\r\n                            controller: 'ruleSetPageController'\r\n                        }\r\n                    },\r\n                    params: {\r\n                        action: 4,\r\n                        // RuleSetId: 0,\r\n                        ContentId: 2\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.Abilities', {\r\n                    authenticate: true,\r\n                    url: '/Abilities?RuleSetId',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/ruleset-abilities.html',\r\n                            controller: 'ruleSetPageController'\r\n                        }\r\n                    },\r\n                    params: {\r\n                        action: 4,\r\n                        //  RuleSetId: 0,\r\n                        ContentId: 3\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.Corestats', {\r\n                    authenticate: true,\r\n                    url: '/Corestats?RuleSetId',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/ruleset-corestats.html',\r\n                            controller: 'ruleSetPageController'\r\n                        }\r\n                    },\r\n                    params: {\r\n                        action: 3,\r\n\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.RulesetItemDetails', {\r\n                    authenticate: true,\r\n                    url: '/RulesetItemDetails',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/rulesetitemcontent.html',\r\n                            controller: 'ruleSetPageController'\r\n                        }\r\n                    },\r\n                    params: {\r\n                        action: 5,\r\n                        RuleSetId:0,\r\n                        contentType: 1,\r\n                        index: -1\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.RulesetSpellDetails', {\r\n                    authenticate: true,\r\n                    url: '/RulesetSpellDetails',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/rulesetspellcontent.html',\r\n                            controller: 'ruleSetPageController'\r\n                        }\r\n                    },\r\n                    params: {\r\n                        action: 5,\r\n                        RuleSetId: 0,\r\n                        contentType: 2,\r\n                        index: -1\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.RulesetAbilityDetails', {\r\n                    authenticate: true,\r\n                    url: '/RulesetAbilityDetails',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/rulesetabilitycontent.html',\r\n                            controller: 'ruleSetPageController'\r\n                        }\r\n                    },\r\n                    params: {\r\n                        action: 5,\r\n                        RuleSetId: 0,\r\n                        contentType: 3,\r\n                        index: -1\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.ItemInventory', {\r\n                    authenticate: true,\r\n                    url: '/ItemInventory?characterId&contentType',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/iteminventory.html',\r\n                            controller: 'layoutPageController'\r\n                        }\r\n                    },\r\n                    params: {\r\n                        // characterId:-1,\r\n                        action: 2,\r\n                        isNew: 0,\r\n                       // contentType: 1\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.SpellInventory', {\r\n                    authenticate: true,\r\n                    url: '/SpellInventory?characterId&contentType',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/spellinventory.html',\r\n                            controller: 'layoutPageController'\r\n                        }\r\n                    },\r\n                    params: {\r\n                        //  characterId: -1,\r\n                        action: 2,\r\n                        //contentType: 1\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.AbilityInventory', {\r\n                    authenticate: true,\r\n                    url: '/AbilityInventory?characterId&contentType',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/attributeinventory.html',\r\n                            controller: 'layoutPageController'\r\n                        }\r\n                    },\r\n                    params: {\r\n                        // characterId: -1,\r\n                        action: 2,\r\n                       // contentType: 3\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.CharacterRulesetItems', {\r\n                    authenticate: true,\r\n                    url: '/CharacterRulesetItems?characterId',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/CharacterRulesetItems.html',\r\n                            controller: 'layoutPageController'\r\n                        }\r\n                    },\r\n                    params: {\r\n                        // characterId: -1,\r\n                        action: 3,\r\n                        isNew: 0,\r\n                        contentType: 1\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.CharacterRulesetSpells', {\r\n                    authenticate: true,\r\n                    url: '/CharacterRulesetSpells?characterId',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/CharacterRulesetSpells.html',\r\n                            controller: 'layoutPageController'\r\n                        }\r\n                    },\r\n                    params: {\r\n                        //characterId: -1,\r\n                        action: 3,\r\n                        contentType: 1\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.CharacterRulesetAbilities', {\r\n                    authenticate: true,\r\n                    url: '/CharacterRulesetAbilities?characterId',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/CharacterRulesetAbilities.html',\r\n                            controller: 'layoutPageController'\r\n                        }\r\n                    },\r\n                    params: {\r\n                        // characterId: -1,\r\n                        action: 3,\r\n                        isNew: 0,\r\n                        contentType: 1\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.CharacterItemsDetails', {\r\n                    authenticate: true,\r\n                    url: '/CharacterItemsDetails?characterId',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/characteritemcontent.html',\r\n                            controller: 'layoutPageController'\r\n                        }\r\n\r\n                    },\r\n                    params: {\r\n                        // characterId: -1,\r\n                        action: 4,\r\n                        contentType: 1,\r\n                        index: -1,\r\n\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.CharacterSpellDetails', {\r\n                    authenticate: true,\r\n                    url: '/CharacterSpellDetails?characterId',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/characterspellcontent.html',\r\n                            controller: 'layoutPageController'\r\n                        }\r\n\r\n                    },\r\n                    params: {\r\n                        //characterId: -1,\r\n                        action: 4,\r\n                        contentType: 2,\r\n                        index: -1,\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.CharacterAbilityDetails', {\r\n                    authenticate: true,\r\n                    url: '/CharacterAbilityDetails?characterId',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/home/characterabilitycontent.html',\r\n                            controller: 'layoutPageController'\r\n                        }\r\n\r\n                    },\r\n                    params: {\r\n                        // characterId: -1,\r\n                        action: 4,\r\n                        contentType: 3,\r\n                        index: -1,\r\n                    },\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                })\r\n                .state('profile.AccountSettings', {\r\n                    url: '/AccountSettings',\r\n                    views: {\r\n                        'topNav@profile': {\r\n                            templateUrl: '/views/shared/home-topNav.html',\r\n                            controller: 'topNavController'\r\n                        },\r\n                        'main@profile': {\r\n                            templateUrl: '/views/shared/AccountSettings.html',\r\n                            controller: 'topNavController',\r\n                        }\r\n                    },\r\n                    params: {\r\n                        menuSelected: 'AccountSettings',\r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\t.state('RegisterSuccess', {\r\n\t\t\t\t\tauthenticate: false,\r\n\t\t\t\t\turl: '/RegisterSuccess',\r\n\t\t\t\t\tviews: {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t'main@profile': {\r\n\t\t\t\t\t\t\ttemplateUrl: '/views/EmailTemplates/RegisterSuccess.html',\r\n\t\t\t\t\t\t\tcontroller: 'registerController'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n                .state('RegisterConfirmationEmailMessage', {\r\n                    authenticate: true,\r\n                    url: '/RegisterConfirmationEmail',\r\n                    //  url: '/Editprofile/',\r\n                    views: {\r\n                        'main@profile': {\r\n                            templateUrl: '/views/EmailTemplates/RegisterEmailConfirmation.html',\r\n                            controller: 'topNavController'\r\n                        }\r\n                    },\r\n                    //params: {\r\n                    //    userid: {\r\n                    //        dynamic: true\r\n                    //    }\r\n\r\n                    //},\r\n\r\n                    onEnter: ['navService', function (navService) {\r\n                        navService.setHeader(null);\r\n                    }]\r\n                });\r\n        }]);\r\n\r\n    app.config(['$qProvider', function ($qProvider) {\r\n        $qProvider.errorOnUnhandledRejections(false);\r\n    }]);\r\n\r\n    \r\n    //app.run(function ($rootScope, $route, $location) {\r\n    //    //Bind the `$locationChangeSuccess` event on the rootScope, so that we dont need to \r\n    //    //bind in induvidual controllers.\r\n    //    debugger;\r\n    //    $rootScope.$on('$locationChangeSuccess', function () {\r\n    //        $rootScope.actualLocation = $location.path();\r\n    //    });\r\n\r\n    //    $rootScope.$watch(function () { return $location.path() }, function (newLocation, oldLocation) {\r\n    //        if ($rootScope.actualLocation === newLocation) {\r\n    //            alert('Why did you use history back?');\r\n    //        }\r\n    //    });\r\n    //});\r\n\r\n    app.run(['$rootScope', '$http', '$state', 'authService', 'navService',\r\n        function ($rootScope, $http, $state, authService, navService) {\r\n            authService.init();\r\n            $rootScope.$on('httpUnauthorized', function () {\r\n                $state.transitionTo('login');\r\n            });\r\n            $http.defaults.headers.common['X-XSRF-TOKEN'] = angular.element('input[name=\"__RequestVerificationToken\"]').attr('value');\r\n        }]);\r\n\r\n    app.run(['$transitions', 'authService', '$state', function ($transitions, authService, $state) {\r\n\r\n        $transitions.onBefore({}, function (transition) {\r\n            transition.addResolvable({\r\n                token: '$transition',\r\n                resolveFn: function () {\r\n                    return transition;\r\n                }\r\n            })\r\n        });\r\n\r\n        $transitions.onStart({}, function (transition) {\r\n            if (!authService.authentication.authenticated) {\r\n                $state.go(\"login\");\r\n            }\r\n\r\n        });\r\n    }]);\r\n\r\n    app.run(['$templateCache', '$interpolate', function ($templateCache, $interpolate) {\r\n        var startSym = $interpolate.startSymbol();\r\n        var endSym = $interpolate.endSymbol();\r\n        $templateCache.put('/dialogs/error.html', '<div class=\"modal-header dialog-header-error\"><h4 class=\"modal-title text-danger\"><span class=\"' + startSym + 'icon' + endSym + '\"></span> <span ng-bind-html=\"header\"></span></h4></div><div class=\"modal-body text-danger\" ng-bind-html=\"msg\"></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"close()\">' + startSym + '\"DIALOGS_CLOSE\" | translate' + endSym + '</button></div>');\r\n        $templateCache.put('/dialogs/wait.html', '<div class=\"modal-header dialog-header-wait\"><h4 class=\"modal-title\"><span class=\"' + startSym + 'icon' + endSym + '\"></span> ' + startSym + 'header' + endSym + '</h4></div><div class=\"modal-body\"><p ng-bind-html=\"msg\"></p><div class=\"progress progress-striped active\"><div class=\"progress-bar progress-bar-info\" ng-style=\"getProgress()\"></div><span class=\"sr-only\">' + startSym + 'progress' + endSym + '' + startSym + '\"DIALOGS_PERCENT_COMPLETE\" | translate' + endSym + '</span></div></div>');\r\n        $templateCache.put('/dialogs/notify.html', '<div class=\"modal-header dialog-header-notify\"><h4 class=\"modal-title text-info\"><span class=\"' + startSym + 'icon' + endSym + '\"></span> ' + startSym + 'header' + endSym + '</h4></div><div class=\"modal-body text-info\" ng-bind-html=\"msg\"></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-primary\" ng-click=\"close()\">' + startSym + '\"DIALOGS_OK\" | translate' + endSym + '</button></div>');\r\n        $templateCache.put('/dialogs/confirm.html', '<div class=\"modal-header dialog-header-confirm\"><h4 class=\"modal-title\"><span class=\"' + startSym + 'icon' + endSym + '\"></span> ' + startSym + 'header' + endSym + '</h4></div><div class=\"modal-body\" ng-bind-html=\"msg\"></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"yes()\">' + startSym + '\"DIALOGS_YES\" | translate' + endSym + '</button><button type=\"button\" class=\"btn btn-primary\" ng-click=\"no()\">' + startSym + '\"DIALOGS_NO\" | translate' + endSym + '</button></div>');\r\n    }]);\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-controllers');\r\n\r\n    app.controller('loginController', ['$scope', '$window', '$log', '$state', 'authService', 'navService', 'previousState', '$rootScope', 'toaster', 'dialogs', 'rulesetDataShareService', '$localStorage',\r\n        function ($scope, $window, $log, $state, authService, navService, previousState, $rootScope, toaster, dialogs, rulesetDataShareService, $localStorage) {\r\n\r\n            $scope.profileimagesrc = \"http://www.advacto.com/images/user.jpg\";\r\n\r\n            $scope.mode = 1;\r\n\r\n\t\t\t$scope.registersuccess = false;\r\n\t\t\t$scope.useremail = \"\";\r\n\t\t\t$scope.name = \"\";\r\n\t\t\tangular.element(document).ready(function () {\r\n\t\t\t\tangular.element(window).keydown(function () {\r\n\t\t\t\t\tif (event.keyCode == 13) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n            var LoginData = rulesetDataShareService.getloginData();\r\n            if (!authService.authentication.authenticated) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\t\r\n                $scope.data = {};\r\n                if (LoginData.rememberMe == true) {\r\n                    $scope.data.username = LoginData.username;\r\n                    $scope.data.password = LoginData.password;\r\n                    $scope.data.rememberMe = LoginData.rememberMe;\r\n                }\r\n                var LocalStorageLoginData = JSON.parse(localStorage.getItem(\"LoginData\"));\r\n                if (LocalStorageLoginData != null) {\r\n                    if (LocalStorageLoginData.rememberMe) {\r\n                        $scope.data.username = LocalStorageLoginData.username;\r\n                        $scope.data.password = LocalStorageLoginData.password;\r\n                        $scope.data.rememberMe = LocalStorageLoginData.rememberMe;\r\n                    }\r\n                    else {\r\n                        localStorage.setItem(\"LoginData\", JSON.stringify(LoginData));\r\n                        $scope.data.username == \"\";\r\n                        $scope.data.password == \"\";\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                var LocalStorageLoginData = JSON.parse(localStorage.getItem(\"LoginData\"));\r\n                if (LocalStorageLoginData != null) {\r\n                    $scope.data = {};\r\n                    if (LocalStorageLoginData.rememberMe) {\r\n                        $scope.data.username = LocalStorageLoginData.username;\r\n                        $scope.data.password = LocalStorageLoginData.password;\r\n                        $scope.data.rememberMe = LocalStorageLoginData.rememberMe;\r\n                    }\r\n                    else {\r\n                        localStorage.setItem(\"LoginData\", JSON.stringify(LoginData));\r\n                        $scope.data.username == \"\";\r\n                        $scope.data.password == \"\";\r\n                    }\r\n                }\r\n\t\t\t}\r\n\r\n            $scope.passwordKeyPress = function ($event) {\r\n                if ($scope.mode === 1 && $event.which === 13)\r\n                    $scope.action();\r\n            };\r\n\r\n            $scope.rememberKeyPress = function ($event) {\r\n                $scope.data.rememberMe = !$scope.data.rememberMe;\r\n            };\r\n\r\n\t\t\t$scope.showTerms = function () {\r\n\t\t\t\tvar newCharacterData = {\r\n\t\t\t\t\tid: 0,\r\n\t\t\t\t\tname: \"\",\r\n\t\t\t\t\tfile: null,\r\n\t\t\t\t\tRulesetID: 0\r\n\t\t\t\t}\r\n\t\t\t\tvar dlg = dialogs.create('/views/dialogs/termsAndServices.html', 'dialogAddNewCharacter',\r\n\t\t\t\t\t{ mode: 1, characterData: newCharacterData  }\r\n\t\t\t\t);\r\n\r\n\t\t\t\tdlg.result.then(function (res) {\r\n\t\t\t\t\tif (res != 'cancel') {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//toaster.pop('success', 'Character Created Successfully');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n            $scope.setMode = function (mode) {\r\n                $scope.mode = mode;\r\n            };\r\n\r\n            $scope.profileImageUpload = function (input) {\r\n                if (input.files && input.files[0]) {\r\n                    var reader = new FileReader();\r\n\r\n                    reader.onload = function (e) {\r\n                        $('#profileImage')\r\n                            .attr('src', e.target.result)\r\n                            .width(120)\r\n                            .height(120);\r\n                        $scope.data.profileimage = e.target.result;\r\n                    };\r\n                    reader.readAsDataURL(input.files[0]);\r\n                }\r\n            }\r\n\r\n            $scope.gotoLoginPage = function () {\r\n\r\n                navService.gotoLogin(true);\r\n            }\r\n            $scope.Cancel = function () {\r\n                $scope.mode = 1;\r\n            }\r\n            $scope.isUserRegistered = function (Email, Id, accessToken) {\r\n                $.ajax({\r\n                    url: 'api/Account/GoogleLogin',\r\n                    method: 'GET',\r\n                    data: {\r\n                        Email: Email,\r\n                        AccesKey: Id,\r\n                        AccountType: 'Google'\r\n                    },\r\n                    success: function (data) {\r\n                        if (data.StatusCode == 200) {\r\n                            $scope.logindata = data.PayLoad;\r\n                            authService.Exlogin();\r\n                            $localStorage.firstLoginController = $scope.logindata; \r\n                            navService.gotoCharacters(true);\r\n                        }\r\n                        else {\r\n                            if (data.StatusCode == 400)\r\n                            {\r\n                                window.location.href = \"/views/home/login.html\";\r\n                            }\r\n                        }\r\n                    },\r\n                    error: function (request, status, error) {\r\n                        alert(request.responseText);\r\n                    }\r\n                });\r\n            }\r\n\r\n            $scope.isFBUserRegistered = function (credentials) {\r\n                $.ajax({\r\n                    url: \"api/account/facebooklogin\",\r\n                    type: \"POST\",\r\n                    data: credentials,\r\n                    success: function (data) {\r\n                        if (data.StatusCode == 200) {\r\n                            $rootScope.logindata = data.PayLoad;\r\n                            authService.Exlogin();\r\n                            navService.gotoCharacters(true);\r\n                        }\r\n                        else {\r\n                            if (data.StatusCode == 400) {\r\n                                window.location.href = \"/views/home/login.html\";\r\n                            }\r\n                        }\r\n                 \r\n                    },\r\n                    error: function (request, status, error) {\r\n                        console.log(request.responseText);\r\n                    }\r\n                });\r\n            }\r\n\r\n           \r\n\r\n            $scope.action = function () {\r\n\t\t\t\t$(\"#loading\").css(\"display\", \"block\");\r\n\t\t\t\tswitch ($scope.mode) {\r\n                    case 1:\r\n\t\t\t\t\t\tif ( (!$scope.data.email || $scope.data.email == \"\") && $scope.data.password == \"\") {\r\n                            toaster.pop('error', \"Please enter Email And Password\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        else if (($scope.data.email != \"\") && ($scope.data.password == \"\" || $scope.data.password == null)) {\r\n\t\t\t\t\t\t\ttoaster.pop('error', \"Please enter Email And Password\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        else if (($scope.data.email == \"\" || $scope.data.email == null) && ($scope.data.password != \"\")) {\r\n                            toaster.pop('error', \"Please enter Email\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        authService\r\n                            .login($scope.data.email, $scope.data.password, $scope.data.rememberMe)\r\n                            .then(function (data) {\r\n                                if (data.data.StatusCode == 200) {\r\n                                    $scope.logindata = data.data.PayLoad;\r\n                                    $scope.logindata.rememberMe = $scope.data.rememberMe;\r\n                                    navService.gotoCharacters(true);\r\n                                    $localStorage.firstLoginController = $scope.logindata; \r\n                                    rulesetDataShareService.setloginData($scope.data);\r\n                                    localStorage.setItem(\"LoginData\", JSON.stringify($scope.data));\r\n                                    //rulesetDataShareService.setImageandName($scope.logindata);\r\n                                }\r\n                                else {\r\n                                    if (data.data.StatusCode == 400) {\r\n                                        if (data.data.PayLoad == \"Invalid Email /password\") {\r\n                                            toaster.pop('error', data.data.PayLoad);\r\n                                            $(\"#loading\").fadeOut(\"slow\");\r\n                                        }\r\n                                        else\r\n                                        {\r\n                                            toaster.pop('error', \"Please Enter valid UserId and password\");\r\n                                            $(\"#loading\").fadeOut(\"slow\");\r\n                                        }\r\n                                    }\r\n                                }\r\n                            })\r\n                            .catch(function () {\r\n                                alert('TODO: login failed');\r\n                            });\r\n                        break;\r\n                    case 2:\r\n                        if (($scope.data.username == null || $scope.data.username == \"\") && ($scope.data.email == null || $scope.data.email == \"\" || $scope.data.email == undefined) && ($scope.data.password == null || $scope.data.password == \"\") && ($scope.data.confirmPassword == null || $scope.data.confirmPassword == \"\")) {\r\n                            toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        if (($scope.data.username == null || $scope.data.username == \"\") && ($scope.data.email == null || $scope.data.email == \"\") && ($scope.data.password != null || $scope.data.password != \"\") && ($scope.data.confirmPassword != null || $scope.data.confirmPassword != \"\")) {\r\n                            if ($scope.data.email == undefined) {\r\n\r\n                            }\r\n                            else {\r\n                                toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                break;\r\n                            }\r\n\r\n                        }\r\n                        if (($scope.data.username == null || $scope.data.username == \"\") && ($scope.data.email != null || $scope.data.email != \"\" || $scope.data.email != undefined) && ($scope.data.password == null || $scope.data.password == \"\") && ($scope.data.confirmPassword != null || $scope.data.confirmPassword != \"\")) {\r\n                            toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        if (($scope.data.username == null || $scope.data.username == \"\") && ($scope.data.email != null || $scope.data.email != \"\" || $scope.data.email != undefined) && ($scope.data.password != null || $scope.data.password != \"\") && ($scope.data.confirmPassword == null || $scope.data.confirmPassword == \"\")) {\r\n                            toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        if (($scope.data.username != null || $scope.data.username != \"\") && ($scope.data.email == null || $scope.data.email == \"\") && ($scope.data.password == null || $scope.data.password == \"\") && ($scope.data.confirmPassword != null || $scope.data.confirmPassword != \"\")) {\r\n                            if ($scope.data.email == undefined) {\r\n\r\n                            }\r\n                            else {\r\n                                toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (($scope.data.username != null || $scope.data.username != \"\") && ($scope.data.email == null || $scope.data.email == \"\") && ($scope.data.password != null || $scope.data.password != \"\") && ($scope.data.confirmPassword == null || $scope.data.confirmPassword == \"\")) {\r\n                            if ($scope.data.email == undefined) {\r\n\r\n                            }\r\n                            else {\r\n                                toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (($scope.data.username != null || $scope.data.username != \"\") && ($scope.data.email != null || $scope.data.email != \"\" || $scope.data.email != undefined) && ($scope.data.password == null || $scope.data.password == \"\") && ($scope.data.confirmPassword == null || $scope.data.confirmPassword == \"\")) {\r\n                            toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        if (($scope.data.username == null || $scope.data.username == \"\") && ($scope.data.email == null || $scope.data.email == \"\") && ($scope.data.password == null || $scope.data.password == \"\") && ($scope.data.confirmPassword != null || $scope.data.confirmPassword != \"\")) {\r\n                            if ($scope.data.email == undefined) {\r\n\r\n                            }\r\n                            else {\r\n                                toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (($scope.data.username == null || $scope.data.username == \"\") && ($scope.data.email != null || $scope.data.email != \"\" || $scope.data.email != undefined) && ($scope.data.password == null || $scope.data.password == \"\") && ($scope.data.confirmPassword == null || $scope.data.confirmPassword == \"\")) {\r\n                            toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        if (($scope.data.username == null || $scope.data.username == \"\") && ($scope.data.email == null || $scope.data.email == \"\") && ($scope.data.password != null || $scope.data.password != \"\") && ($scope.data.confirmPassword == null || $scope.data.confirmPassword == \"\")) {\r\n                            if ($scope.data.email == undefined) {\r\n\r\n                            }\r\n                            else {\r\n                                toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (($scope.data.username == null || $scope.data.username == \"\") && ($scope.data.email != null || $scope.data.email != \"\" || $scope.data.email != undefined) && ($scope.data.password == null || $scope.data.password == \"\") && ($scope.data.confirmPassword == null || $scope.data.confirmPassword == \"\")) {\r\n                            toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        if (($scope.data.username != null || $scope.data.username != \"\") && ($scope.data.email == null || $scope.data.email == \"\") && ($scope.data.password == null || $scope.data.password == \"\") && ($scope.data.confirmPassword == null || $scope.data.confirmPassword == \"\")) {\r\n                            if ($scope.data.email == undefined) {\r\n\r\n                            }\r\n                            else {\r\n                                toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                break;\r\n                            }\r\n                        }\r\n                        if ($scope.data.username == null || $scope.data.username == \"\") {\r\n                            toaster.pop('error', \"Please Fill User Name\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        if ($scope.data.email == null || $scope.data.email == \"\") {\r\n                            toaster.pop('error', \"Please Fill Email Address\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        else {\r\n                            var reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n                            if (reg.test($scope.data.email) == false) {\r\n                                toaster.pop('error', \"Please Enter Valid Email Address\");\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                break;\r\n                            }\r\n                        }\r\n                        if ($scope.data.password == null || $scope.data.password == \"\")\r\n                        {\r\n                            toaster.pop('error', \"Please Fill Password\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        else {\r\n\t\t\t\t\t\t\tvar regex = new RegExp(\"^(?=.{8,})\");\r\n                            if (!regex.test($scope.data.password)) {\r\n                                toaster.pop('error', \"Password should be atleast 8 characters\");\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                break;\r\n                            }\r\n                        }\r\n                        if ($scope.data.confirmPassword == null || $scope.data.confirmPassword == \"\") {\r\n                            toaster.pop('error', \"Please Fill Confirm Password\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        else if ($scope.data.password != $scope.data.confirmPassword) {\r\n                            toaster.pop('error', \"Confirm Password Should Be same As Password\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        else if ($scope.data.password === $scope.data.confirmPassword) {\r\n                            authService\r\n                                .register($scope.data.username, $scope.data.email, $scope.data.password, $scope.data.confirmPassword, $scope.data.profileimage)\r\n                                .then(\r\n                                function (data) {\r\n\t\t\t\t\t\t\t\t\tif (data.data.StatusCode == 200) {\r\n\t\t\t\t\t\t\t\t\t\t$scope.useremail = $scope.data.email;\r\n\t\t\t\t\t\t\t\t\t\t$scope.name = $scope.data.username;\r\n                                        toaster.pop('success', \"Registered Successfully.Activation link has been sent to the registered email.\");\r\n                                        $scope.data.username = \"\";\r\n                                        $scope.data.email = \"\";\r\n                                        $scope.data.password = \"\";\r\n                                        $scope.data.confirmPassword = \"\";\r\n                                        $scope.data.profileimage = \"\";\r\n                                        $scope.data.profileimagesrc = \"\";\r\n                                        $rootScope.logindata = data.data.PayLoad;\r\n\t\t\t\t\t\t\t\t\t\t$(\"#loading\").fadeOut(\"slow\");\r\n\t\t\t\t\t\t\t\t\t\t$scope.registersuccess = true;\r\n                                    }\r\n                                    else {\r\n                                        if (data.data.StatusCode == 400) {\r\n                                            $scope.error = data.data.ErrorMessage;\r\n                                            toaster.pop('error', $scope.error);\r\n                                            $(\"#loading\").fadeOut(\"slow\");\r\n                                            //alert($scope.error);\r\n                                        }\r\n                                    }\r\n                                });\r\n                        }\r\n                        else {\r\n                            toaster.pop('error', \"Passwords do not match\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                        }\r\n                        break;\r\n                    case 3:\r\n                        var reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n                        if (reg.test($scope.data.email) == false) {\r\n                            toaster.pop('error', \"Please enter valid Email Address.\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                        }\r\n                        else\r\n                        {\r\n                            authService.ForgotPassword($scope.data.email);\r\n                            toaster.pop('success', \"We have sent a  link to your \" + $scope.data.email + \". Please Reset your Password.\");\r\n                            $scope.data.email = \"\";\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n\r\n                        }\r\n                        break;\r\n                    case 6:\r\n                        navService.gotoCharacters(true);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    ]);\r\n\r\n\r\n})();\r\n\r\n\r\n ","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-controllers');\r\n\r\n    app.controller('registerController', ['$scope',\r\n        function ($scope) {\r\n\r\n           \r\n\t\t}\r\n    ]);\r\n\r\n\r\n})();\r\n\r\n\r\n ","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-controllers');\r\n\r\n    app.controller('resetpwdController', ['$scope', '$window', '$log', '$state', 'authService', 'navService', 'previousState', '$rootScope', 'toaster', 'rulesetDataShareService', '$localStorage',\r\n        function ($scope, $window, $log, $state, authService, navService, previousState, $rootScope, toaster, rulesetDataShareService, $localStorage) {\r\n\r\n            $scope.profileimagesrc = \"http://www.advacto.com/images/user.jpg\";\r\n\r\n            $scope.mode = 1;\r\n\r\n            \r\n\r\n            var LoginData = rulesetDataShareService.getloginData();\r\n            if (!authService.authentication.authenticated) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\t\r\n                $scope.data = {};\r\n                if (LoginData.rememberMe == true) {\r\n                    $scope.data.username = LoginData.username;\r\n                    $scope.data.password = LoginData.password;\r\n                    $scope.data.rememberMe = LoginData.rememberMe;\r\n                }\r\n                var LocalStorageLoginData = JSON.parse(localStorage.getItem(\"LoginData\"));\r\n                if (LocalStorageLoginData != null) {\r\n                    if (LocalStorageLoginData.rememberMe) {\r\n                        $scope.data.username = LocalStorageLoginData.username;\r\n                        $scope.data.password = LocalStorageLoginData.password;\r\n                        $scope.data.rememberMe = LocalStorageLoginData.rememberMe;\r\n                    }\r\n                    else {\r\n                        localStorage.setItem(\"LoginData\", JSON.stringify(LoginData));\r\n                        $scope.data.username == \"\";\r\n                        $scope.data.password == \"\";\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                var LocalStorageLoginData = JSON.parse(localStorage.getItem(\"LoginData\"));\r\n                if (LocalStorageLoginData != null) {\r\n                    $scope.data = {};\r\n                    if (LocalStorageLoginData.rememberMe) {\r\n                        $scope.data.username = LocalStorageLoginData.username;\r\n                        $scope.data.password = LocalStorageLoginData.password;\r\n                        $scope.data.rememberMe = LocalStorageLoginData.rememberMe;\r\n                    }\r\n                    else {\r\n                        localStorage.setItem(\"LoginData\", JSON.stringify(LoginData));\r\n                        $scope.data.username == \"\";\r\n                        $scope.data.password == \"\";\r\n                    }\r\n                }\r\n\t\t\t}\r\n\r\n            $scope.passwordKeyPress = function ($event) {\r\n                if ($scope.mode === 1 && $event.which === 13)\r\n                    $scope.action();\r\n            };\r\n\r\n            $scope.rememberKeyPress = function ($event) {\r\n                $scope.data.rememberMe = !$scope.data.rememberMe;\r\n            };\r\n\r\n            $scope.setMode = function (mode) {\r\n                $scope.mode = mode;\r\n            };\r\n\r\n            $scope.profileImageUpload = function (input) {\r\n                if (input.files && input.files[0]) {\r\n                    var reader = new FileReader();\r\n\r\n                    reader.onload = function (e) {\r\n                        $('#profileImage')\r\n                            .attr('src', e.target.result)\r\n                            .width(120)\r\n                            .height(120);\r\n                        $scope.data.profileimage = e.target.result;\r\n                    };\r\n                    reader.readAsDataURL(input.files[0]);\r\n                }\r\n            }\r\n\r\n            $scope.gotoLoginPage = function () {\r\n\r\n                navService.gotoLogin(true);\r\n            }\r\n            $scope.Cancel = function () {\r\n                $scope.mode = 1;\r\n            }\r\n            $scope.isUserRegistered = function (Email, Id, accessToken) {\r\n                $.ajax({\r\n                    url: 'api/Account/GoogleLogin',\r\n                    method: 'GET',\r\n                    data: {\r\n                        Email: Email,\r\n                        AccesKey: Id,\r\n                        AccountType: 'Google'\r\n                    },\r\n                    success: function (data) {\r\n                        if (data.StatusCode == 200) {\r\n                            $scope.logindata = data.PayLoad;\r\n                            authService.Exlogin();\r\n                            $localStorage.firstLoginController = $scope.logindata; \r\n                            navService.gotoCharacters(true);\r\n                        }\r\n                        else {\r\n                            if (data.StatusCode == 400)\r\n                            {\r\n                                window.location.href = \"/views/home/login.html\";\r\n                            }\r\n                        }\r\n                    },\r\n                    error: function (request, status, error) {\r\n                        alert(request.responseText);\r\n                    }\r\n                });\r\n            }\r\n\r\n            $scope.isFBUserRegistered = function (credentials) {\r\n                $.ajax({\r\n                    url: \"api/account/facebooklogin\",\r\n                    type: \"POST\",\r\n                    data: credentials,\r\n                    success: function (data) {\r\n                        if (data.StatusCode == 200) {\r\n                            $rootScope.logindata = data.PayLoad;\r\n                            authService.Exlogin();\r\n                            navService.gotoCharacters(true);\r\n                        }\r\n                        else {\r\n                            if (data.StatusCode == 400) {\r\n                                window.location.href = \"/views/home/login.html\";\r\n                            }\r\n                        }\r\n                 \r\n                    },\r\n                    error: function (request, status, error) {\r\n                        alert(request.responseText);\r\n                    }\r\n                });\r\n            }\r\n\r\n           \r\n\r\n            $scope.action = function () {\r\n                $(\"#loading\").css(\"display\", \"block\");\r\n                switch ($scope.mode) {\r\n                    case 1:\r\n                        if ($scope.data.username == \"\" && $scope.data.password == \"\") {\r\n                            toaster.pop('error', \"Please Enter UserId And Password\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        else if (($scope.data.username != \"\") && ($scope.data.password == \"\" || $scope.data.password == null)) {\r\n                            toaster.pop('error', \"Please Enter Password\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        else if (($scope.data.username == \"\" || $scope.data.username == null) && ($scope.data.password != \"\")) {\r\n                            toaster.pop('error', \"Please Enter UserId\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        authService\r\n                            .login($scope.data.username, $scope.data.password, $scope.data.rememberMe)\r\n                            .then(function (data) {\r\n                                if (data.data.StatusCode == 200) {\r\n                                    $scope.logindata = data.data.PayLoad;\r\n                                    $scope.logindata.rememberMe = $scope.data.rememberMe;\r\n                                    navService.gotoCharacters(true);\r\n                                    $localStorage.firstLoginController = $scope.logindata; \r\n                                    rulesetDataShareService.setloginData($scope.data);\r\n                                    localStorage.setItem(\"LoginData\", JSON.stringify($scope.data));\r\n                                    //rulesetDataShareService.setImageandName($scope.logindata);\r\n                                }\r\n                                else {\r\n                                    if (data.data.StatusCode == 400) {\r\n                                        if (data.data.PayLoad == \"Invalid Email /password\") {\r\n                                            toaster.pop('error', data.data.PayLoad);\r\n                                            $(\"#loading\").fadeOut(\"slow\");\r\n                                        }\r\n                                        else\r\n                                        {\r\n                                            toaster.pop('error', \"Please Enter valid UserId and password\");\r\n                                            $(\"#loading\").fadeOut(\"slow\");\r\n                                        }\r\n                                    }\r\n                                }\r\n                            })\r\n                            .catch(function () {\r\n                                alert('TODO: login failed');\r\n                            });\r\n                        break;\r\n                    case 2:\r\n                        if (($scope.data.username == null || $scope.data.username == \"\") && ($scope.data.email == null || $scope.data.email == \"\" || $scope.data.email == undefined) && ($scope.data.password == null || $scope.data.password == \"\") && ($scope.data.confirmPassword == null || $scope.data.confirmPassword == \"\")) {\r\n                            toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        if (($scope.data.username == null || $scope.data.username == \"\") && ($scope.data.email == null || $scope.data.email == \"\") && ($scope.data.password != null || $scope.data.password != \"\") && ($scope.data.confirmPassword != null || $scope.data.confirmPassword != \"\")) {\r\n                            if ($scope.data.email == undefined) {\r\n\r\n                            }\r\n                            else {\r\n                                toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                break;\r\n                            }\r\n\r\n                        }\r\n                        if (($scope.data.username == null || $scope.data.username == \"\") && ($scope.data.email != null || $scope.data.email != \"\" || $scope.data.email != undefined) && ($scope.data.password == null || $scope.data.password == \"\") && ($scope.data.confirmPassword != null || $scope.data.confirmPassword != \"\")) {\r\n                            toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        if (($scope.data.username == null || $scope.data.username == \"\") && ($scope.data.email != null || $scope.data.email != \"\" || $scope.data.email != undefined) && ($scope.data.password != null || $scope.data.password != \"\") && ($scope.data.confirmPassword == null || $scope.data.confirmPassword == \"\")) {\r\n                            toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        if (($scope.data.username != null || $scope.data.username != \"\") && ($scope.data.email == null || $scope.data.email == \"\") && ($scope.data.password == null || $scope.data.password == \"\") && ($scope.data.confirmPassword != null || $scope.data.confirmPassword != \"\")) {\r\n                            if ($scope.data.email == undefined) {\r\n\r\n                            }\r\n                            else {\r\n                                toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (($scope.data.username != null || $scope.data.username != \"\") && ($scope.data.email == null || $scope.data.email == \"\") && ($scope.data.password != null || $scope.data.password != \"\") && ($scope.data.confirmPassword == null || $scope.data.confirmPassword == \"\")) {\r\n                            if ($scope.data.email == undefined) {\r\n\r\n                            }\r\n                            else {\r\n                                toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (($scope.data.username != null || $scope.data.username != \"\") && ($scope.data.email != null || $scope.data.email != \"\" || $scope.data.email != undefined) && ($scope.data.password == null || $scope.data.password == \"\") && ($scope.data.confirmPassword == null || $scope.data.confirmPassword == \"\")) {\r\n                            toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        if (($scope.data.username == null || $scope.data.username == \"\") && ($scope.data.email == null || $scope.data.email == \"\") && ($scope.data.password == null || $scope.data.password == \"\") && ($scope.data.confirmPassword != null || $scope.data.confirmPassword != \"\")) {\r\n                            if ($scope.data.email == undefined) {\r\n\r\n                            }\r\n                            else {\r\n                                toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (($scope.data.username == null || $scope.data.username == \"\") && ($scope.data.email != null || $scope.data.email != \"\" || $scope.data.email != undefined) && ($scope.data.password == null || $scope.data.password == \"\") && ($scope.data.confirmPassword == null || $scope.data.confirmPassword == \"\")) {\r\n                            toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        if (($scope.data.username == null || $scope.data.username == \"\") && ($scope.data.email == null || $scope.data.email == \"\") && ($scope.data.password != null || $scope.data.password != \"\") && ($scope.data.confirmPassword == null || $scope.data.confirmPassword == \"\")) {\r\n                            if ($scope.data.email == undefined) {\r\n\r\n                            }\r\n                            else {\r\n                                toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (($scope.data.username == null || $scope.data.username == \"\") && ($scope.data.email != null || $scope.data.email != \"\" || $scope.data.email != undefined) && ($scope.data.password == null || $scope.data.password == \"\") && ($scope.data.confirmPassword == null || $scope.data.confirmPassword == \"\")) {\r\n                            toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        if (($scope.data.username != null || $scope.data.username != \"\") && ($scope.data.email == null || $scope.data.email == \"\") && ($scope.data.password == null || $scope.data.password == \"\") && ($scope.data.confirmPassword == null || $scope.data.confirmPassword == \"\")) {\r\n                            if ($scope.data.email == undefined) {\r\n\r\n                            }\r\n                            else {\r\n                                toaster.pop('error', \"Please Fill All (*) Fields in Register Page\");\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                break;\r\n                            }\r\n                        }\r\n                        if ($scope.data.username == null || $scope.data.username == \"\") {\r\n                            toaster.pop('error', \"Please Fill User Name\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        if ($scope.data.email == null || $scope.data.email == \"\") {\r\n                            toaster.pop('error', \"Please Fill Email Address\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        else {\r\n                            var reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n                            if (reg.test($scope.data.email) == false) {\r\n                                toaster.pop('error', \"Please Enter Valid Email Address\");\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                break;\r\n                            }\r\n                        }\r\n                        if ($scope.data.password == null || $scope.data.password == \"\")\r\n                        {\r\n                            toaster.pop('error', \"Please Fill Password\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        else {\r\n                            var regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,12}$/;\r\n                            if (!regex.test($scope.data.password)) {\r\n                                toaster.pop('error', \"Password Should Be Atleast 8 characters And 1 Uppercase,1 SpecialChar,1 Lowercase,1 Number\");\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                break;\r\n                            }\r\n                        }\r\n                        if ($scope.data.confirmPassword == null || $scope.data.confirmPassword == \"\") {\r\n                            toaster.pop('error', \"Please Fill Confirm Password\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        else if ($scope.data.password != $scope.data.confirmPassword) {\r\n                            toaster.pop('error', \"Confirm Password Should Be same As Password\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            break;\r\n                        }\r\n                        else if ($scope.data.password === $scope.data.confirmPassword) {\r\n                            authService\r\n                                .register($scope.data.username, $scope.data.email, $scope.data.password, $scope.data.confirmPassword, $scope.data.profileimage)\r\n                                .then(\r\n                                function (data) {\r\n                                    if (data.data.StatusCode == 200) {\r\n                                        toaster.pop('success', \"Registered Successfully.Activation link has been sent to Registered Email.\");\r\n                                        $scope.data.username = \"\";\r\n                                        $scope.data.email = \"\";\r\n                                        $scope.data.password = \"\";\r\n                                        $scope.data.confirmPassword = \"\";\r\n                                        $scope.data.profileimage = \"\";\r\n                                        $scope.data.profileimagesrc = \"\";\r\n                                        $rootScope.logindata = data.data.PayLoad;\r\n                                        $(\"#loading\").fadeOut(\"slow\");\r\n                                       /// $state.go('login');\r\n                                        //navService.gotoCharacters(true);\r\n                                    }\r\n                                    else {\r\n                                        if (data.data.StatusCode == 400) {\r\n                                            $scope.error = data.data.ErrorMessage;\r\n                                            toaster.pop('error', $scope.error);\r\n                                            $(\"#loading\").fadeOut(\"slow\");\r\n                                            //alert($scope.error);\r\n                                        }\r\n                                    }\r\n                                });\r\n                        }\r\n                        else {\r\n                            toaster.pop('error', \"Passwords do not match\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                        }\r\n                        break;\r\n                    case 3:\r\n                        var reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n                        if (reg.test($scope.data.email) == false) {\r\n                            toaster.pop('error', \"Please enter valid Email Address.\");\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                        }\r\n                        else\r\n                        {\r\n                            authService.ForgotPassword($scope.data.email);\r\n                            toaster.pop('success', \"We have sent a  link to your \" + $scope.data.email + \". Please Reset your Password.\");\r\n                            $scope.data.email = \"\";\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n\r\n                        }\r\n                        break;\r\n                    case 6:\r\n                        navService.gotoCharacters(true);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    ]);\r\n\r\n\r\n})();\r\n\r\n\r\n ","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-controllers');\r\n\r\n    app.controller('topNavController', ['$scope','$location', 'navService', '$rootScope', '$state', 'authService', 'rulesetDataShareService', 'toaster', 'characterService', '$browser', 'rulesetService', '$localStorage','$window',\r\n        function ($scope,$location, navService, $rootScope, $state, authService, rulesetDataShareService, toaster, characterService, $browser, rulesetService, $localStorage, $window) {\r\n            debugger;\r\n            var menuItems = ['Characters', 'Rulesets', 'AccountSettings'];\r\n\r\n            var menuItemIndex = menuItems.indexOf($state.params.menuSelected);\r\n\t\t\t$scope.resetModel = {};\r\n            if (menuItemIndex > -1) {\r\n                $scope.activeMenu = menuItems[menuItemIndex];\r\n            }\r\n            //$scope.data = $rootScope.logindata;\r\n            $scope.navService = navService;\r\n            $scope.data = $localStorage.firstLoginController;\r\n            $(\"#loading\").fadeOut(\"slow\");\r\n\r\n            //$scope.data = rulesetDataShareService.getImageandName();\r\n\t\t\t\r\n            $scope.noop = function () {\r\n                angular.noop();\r\n            };\r\n            $scope.gohome = function () {\r\n                return navService.gotoCharacters();\r\n            }\r\n            $scope.hasNav = function (name) {\r\n                return navService.hasNav(name);\r\n            }\r\n            $scope.toggleNav = function (name) {\r\n                navService.toggleNav(name);\r\n            };\r\n\r\n            $scope.newstyles = function (data) {\r\n                if (data.ProfileImage) {\r\n                    return {\r\n                        'background-size': '100% 100%',\r\n                        'background-repeat': 'no-repeat',\r\n                        'width': '120px',\r\n                        'height': '120px'\r\n                    }\r\n                }\r\n                return {\r\n                    'background-color': 'transparent'\r\n                }\r\n\r\n            };\r\n\r\n            $scope.getThumbNail = function () {\r\n                if ($scope.data.ProfileImage)\r\n                    return $scope.data.ProfileImage;\r\n                return null;\r\n            }\r\n            $scope.CharacterRulesetCount = function ()\r\n            {\r\n                characterService.GetHeaderContentsCounts().then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        $scope.HeaderContents = data.data.PayLoad;\r\n                        rulesetDataShareService.SetDisplayCharacterRulesetCount($scope.HeaderContents);\r\n                    }\r\n                    else {\r\n                        if (data.data.StatusCode == 400) {\r\n                            if (data.data.ShowToUser == true) {\r\n                                alert(data.data.ErrorMessage);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            $scope.ProfileImageUpload = function (input) {\r\n                if (input.files && input.files[0]) {\r\n                    var reader = new FileReader();\r\n                    reader.onload = function (e) {\r\n                        $('#profileImage')\r\n                            .attr('src', e.target.result)\r\n                            .width(120)\r\n                            .height(120);\r\n                        $scope.data.ProfileImage = e.target.result;\r\n                    };\r\n                    reader.readAsDataURL(input.files[0]);\r\n                }\r\n            }\r\n\r\n            $scope.AccountSettings = function () {\r\n                  $(\"#loading\").css(\"display\", \"block\");\r\n                $scope.resetModel = {};\r\n                $scope.resetModel.newpassword = \"\";\r\n                $scope.resetModel.confirmpassword = \"\";\r\n                $scope.resetModel.oldpassword = \"\";\r\n                $state.go(\"profile.AccountSettings\");\r\n                $(\"#loading\").fadeOut(\"slow\");\r\n            }\r\n\r\n\t\t\t$scope.loadResetPage = function () {\r\n\t\t\t\tconsole.log(\"Search Params: \",$location.search().userid);\r\n\t\t\t\t$(\"#loading\").css(\"display\", \"block\");\r\n\t\t\t\t$scope.resetModel = {};\r\n\t\t\t\t$scope.resetModel.newpassword = \"\";\r\n\t\t\t\t$scope.resetModel.confirmpassword = \"\";\r\n\t\t\t\tauthService.authentication.authenticated = true;;\r\n\t\t\t\t$(\"#loading\").fadeOut(\"slow\");\r\n\t\t\t}\r\n\r\n\r\n            $scope.Cancel = function () {\r\n                //$(\"#loading\").css(\"display\", \"block\");\r\n                $window.history.back();\r\n              //  $state.go(\"profile.characters\");\r\n                //$(\"#loading\").fadeOut(\"slow\");\r\n            }\r\n\r\n            $scope.Update = function () {\r\n                var profile =\r\n                    {\r\n                        username: $scope.data.Name,\r\n                        Email: $scope.data.Email,\r\n                        ProfileImage: $scope.data.ProfileImage\r\n                    };\r\n                var data = authService.updateprofile(profile);\r\n                data.then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        toaster.pop('success', \"Details Updated Successfully\");\r\n                    }\r\n                    else {\r\n                        if (data.data.StatusCode == 400) {\r\n                            if (data.data.ShowToUser == true) {\r\n                                toaster.pop('success', data.data.ErrorMessage);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            $scope.cancel = function () {\r\n               // $(\"#loading\").css(\"display\", \"block\");\r\n                $state.go(\"profile.AccountSettings\");\r\n               // $(\"#loading\").fadeOut(\"slow\");\r\n            }\r\n\r\n            $scope.ReSetPassword = function () {\r\n                $state.go(\"profile.ResetPassword\");\r\n            }\r\n            $scope.EditData = function () {\r\n                $state.go(\"profile.EditProfile\");\r\n            }\r\n            $scope.onloadFun = function () {\r\n                $(\"#loading\").fadeOut(\"slow\");\r\n            }\r\n            $scope.ResetProfilePassword = function (resetModel) {\r\n                //$(\"#loading\").css(\"display\", \"block\");\r\n\t\t\t\tconsole.log(\"ResetModel:\", resetModel);\r\n\t\t\t\tconsole.log(\"PasswordHash:\", $scope.data.PasswordHash);\r\n\t\t\t\t\r\n\t\t\t\t//var regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,12}$/;\r\n\t\t\t\t//CHanged requirements to any 8 characters\r\n\t\t\t\tvar regex = new RegExp(\"^(?=.{8,})\");\r\n                if (resetModel.oldpassword == \"\" ||resetModel.oldpassword == null || angular.isUndefined(resetModel.oldpassword) == true)\r\n                {\r\n                    toaster.pop('Warning', \"Please Enter Old Password\");\r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                }\r\n               else if (resetModel.oldpassword != $scope.data.PasswordHash) {\r\n                    toaster.pop('Warning', \"Old Password is not same.\");\r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                }\r\n                else if (resetModel.newpassword == $scope.data.PasswordHash) {\r\n                    toaster.pop('Warning', \"New Password Should not Be Same as Old Password\");\r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                }\r\n                else if (resetModel.oldpassword != \"\" && resetModel.newpassword == undefined && resetModel.confirmpassword == undefined) {\r\n                    toaster.pop('Warning', \"Please Enter New Password\");\r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                }\r\n                else if (!regex.test(resetModel.newpassword)) {\r\n                    toaster.pop('Warning', \"New Password should be atleast 8 characters long\");\r\n                    $(\"#loading\").fadeOut(\"slowest\");\r\n                }\r\n                else if (resetModel.newpassword != resetModel.confirmpassword) {\r\n                    toaster.pop('Warning', \"Confirm Password Should Be same As Password\");\r\n                    $(\"#loading\").fadeOut(\"slower\");\r\n                }\r\n                else {\r\n\r\n                    var resetpass = {\r\n                        Password: resetModel.newpassword,\r\n\t\t\t\t\t\tConfirmPassword: resetModel.confirmpassword,\r\n\t\t\t\t\t\tUserId: $location.search().userid\r\n                    };\r\n                    var pass = authService.Resetpassword(resetpass)\r\n                    pass.then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            toaster.pop('success', \"Password Updated Successfully\");\r\n                            $scope.resetModel = {}\r\n                            $scope.resetModel.newpassword = \"\";\r\n                            $scope.resetModel.confirmpassword = \"\";\r\n                            $scope.resetModel.oldpassword = \"\";\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                        }\r\n                        else {\r\n                            if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                    alert(data.data.ErrorMessage);\r\n                                    $(\"#loading\").fadeOut(\"slow\");\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\t\t\t}\r\n\r\n\t\t\t$scope.signoutGoogle = function () {\r\n\t\t\t\tif (gapi == null || gapi.auth2 == null || gapi.auth2.getAuthInstance() == null)\r\n\t\t\t\t\treturn;\r\n\t\t\t\t\r\n\t\t\t\tgapi.auth2.getAuthInstance().disconnect();\r\n\t\t\t\t\r\n\t\t\t\tgoogleUser = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t\r\n            $scope.signout = function () {\r\n\t\t\t\t$(\"#loading\").css(\"display\", \"block\");\r\n\t\t\t\t//Clear any google logins\r\n\t\t\t\t$scope.signoutGoogle();\r\n                var logout = authService.logout();\r\n                logout.then(function (data) {\r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                    if (data.data.StatusCode == 200) {\r\n                        var savedData = {};\r\n                        var savedspell = {};\r\n                        var savedability = {};\r\n                        var savedcorestat = {};\r\n                        rulesetDataShareService.setRulesetItems(savedData)\r\n                        rulesetDataShareService.setRulesetSpells(savedspell)\r\n                        rulesetDataShareService.setRulesetAbilities(savedability)\r\n                        rulesetDataShareService.setcorestat(savedcorestat)\r\n                        localStorage.clear();\r\n                        authService.authentication.authenticated = false;\r\n                        $state.go('login');\r\n                    }\r\n                    else {\r\n                        if (data.data.StatusCode == 400) {\r\n                            if (data.data.ShowToUser == true) {\r\n                                alert(data.data.ErrorMessage);\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    'use strict';\r\n    \r\n    var app = angular.module('rpgsmith-directives');\r\n\r\n    app.directive('droppable', ['$compile', function ($compile) {\r\n        return {\r\n            restrict: 'A',\r\n            scope: {\r\n                onDroppableDrop: '&',\r\n                onDroppableOver: '&',\r\n                onDroppableOut: '&'\r\n            },\r\n            link: function (scope, element, attrs, controller, ngModel) {\r\n                element.droppable({\r\n                    //accept: '*',\r\n                    //greedy: true,\r\n                    tolerance: 'pointer',\r\n                    over: function (event, ui) {\r\n                        scope.onDroppableOver({ event: event, ui: ui });\r\n                    },\r\n                    out: function (event, ui) {\r\n                        scope.onDroppableOut({ event: event });\r\n                    },\r\n                    drop: function (event, ui) {\r\n                        scope.onDroppableDrop({ event: event, ui: ui });\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }]);\r\n\r\n    app.directive('rpgsmithBody', [function () {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element, attrs, controller, ngModel) {\r\n                scope.$root.$on('rpgsmithSetBodyClass', function (event, data) {\r\n                    if (data.remove)\r\n                        element.removeClass(data.remove);\r\n                    if (data.add)\r\n                        element.addClass(data.add);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-directives');\r\n\r\n\r\n    app.directive('fileModel', ['$parse', function($parse) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function(scope, element, attrs) {\r\n                var model = $parse(attrs.fileModel);\r\n                var modelSetter = model.assign;\r\n\r\n                element.bind('change', function() {\r\n                    scope.$apply(function() {\r\n                        debugger;\r\n                        modelSetter(scope, element[0].files[0]);\r\n                        debugger;\r\n                        evt.target.value = \"\";\r\n                        //evt.target.value = element[0].files[0];\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    }]);\r\n\r\n\r\n\r\n})();","(function () {\r\n    'use strict';\r\n    \r\n    var app = angular.module('rpgsmith-directives');\r\n    \r\n    app.controller('GridstackController', ['$scope', function ($scope) {\r\n\r\n        var gridstack = null;\r\n\r\n        this.init = function (element, options) {\r\n            gridstack = element.gridstack(options).data('gridstack');\r\n            return gridstack;\r\n        };\r\n\r\n        this.verticalMargin = function (value, noUpdate) {\r\n            if (gridstack) {\r\n                gridstack.verticalMargin(value, noUpdate);\r\n            }\r\n        };\r\n\r\n        this.enableMove = function (enable) {\r\n            if (gridstack)\r\n                gridstack.enableMove(enable, true);\r\n        };\r\n\r\n        this.enableResize = function (enable) {\r\n            if (gridstack)\r\n                gridstack.enableResize(enable, true);\r\n        };\r\n\r\n        this.removeItem = function (element) {\r\n            if (gridstack)\r\n                return gridstack.removeWidget(element, false);\r\n            return null;\r\n        };\r\n\r\n        this.addItem = function (element) {\r\n            if (gridstack) {\r\n\r\n                var el = gridstack.makeWidget(element);\r\n                el.attr('data-gs-auto-position', false);\r\n\r\n                return element;\r\n            }\r\n            return null;\r\n        };\r\n\r\n    }]);\r\n\r\n    app.directive('gridstack', ['$timeout', '$window', function ($timeout, $window) {\r\n\r\n        return {\r\n            restrict: 'A',\r\n            controller: 'GridstackController',\r\n            scope: {\r\n                options: '=',\r\n                onChange: '&',\r\n                onDragStart: '&',\r\n                onDragStop: '&',\r\n                onResizeStart: '&',\r\n                onResizeStop: '&',\r\n                gridstackHandler: '=?',\r\n                gsLockTiles: '=?'\r\n            },\r\n            link: function (scope, element, attrs, controller, ngModel) {\r\n\r\n                var gridstack = controller.init(element, scope.options);\r\n\r\n                scope.gridstackHandler = gridstack;\r\n                scope.options.api = gridstack;\r\n\r\n                angular.element($window).bind('resize', _.debounce(function () {\r\n\r\n                    var width = element.innerWidth();\r\n                    var cellWidth = gridstack.cellWidth();\r\n\r\n                    if (cellWidth > 0) {\r\n\r\n                        var columns = Math.floor(width / cellWidth);\r\n\r\n                        if (columns !== scope.options.width) {\r\n\r\n                            scope.$evalAsync(function () {\r\n                                console.log(columns);\r\n                                //scope.options.width = columns;\r\n                                gridstack.setGridWidth(columns, false);\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                }, 500));\r\n                \r\n\t\t\t\telement.on('change', function (e, items) {\r\n\t\t\t\t\tconsole.log(\"Change: \",e,items);\r\n                    \r\n                });\r\n\r\n                element.on('dragstart', function (e, ui) {\r\n                    scope.onDragStart({ event: e, ui: ui });\r\n                });\r\n\r\n                element.on('dragstop', function (e, ui) {\r\n                    scope.onDragStop({ event: e, ui: ui });\r\n                });\r\n\r\n                element.on('resizestart', function (e, ui) {\r\n                    scope.onResizeStart({ event: e, ui: ui });\r\n                });\r\n\r\n                element.on('resizestop', function (e, ui) {\r\n                    scope.onResizeStop({ event: e, ui: ui });\r\n                });\r\n\r\n                scope.$watch('gsLockTiles', function () {\r\n                    controller.enableMove(!scope.gsLockTiles);\r\n                    controller.enableResize(!scope.gsLockTiles);\r\n                });\r\n            }\r\n        };\r\n\r\n    }]);\r\n\r\n    app.directive('gridstackItem', ['$timeout', function ($timeout) {\r\n\r\n        return {\r\n            restrict: 'A',\r\n            controller: 'GridstackController',\r\n            require: '^gridstack',\r\n            scope: {\r\n\r\n                gsItem: '=?',\r\n                gridstackItem: '=',\r\n                \r\n                gsItemId: '=?',\r\n                gsItemX: '=?',\r\n                gsItemY: '=?',\r\n                gsItemWidth: '=?',\r\n                gsItemHeight: '=?',\r\n\r\n                gsItemAutoPosition: '=?',\r\n\r\n                gsItemMinHeight: '=?',\r\n                gsItemMaxHeight: '=?',\r\n                gsItemMinWidth: '=?',\r\n                gsItemMaxWidth: '=?'\r\n            },\r\n            link: function (scope, element, attrs, controller) {\r\n\r\n                var el = $(element);\r\n\r\n                element.data('_item_data', scope.gsItem);\r\n                \r\n                el.attr('data-gs-id', scope.gsItemId);\r\n\r\n                if (!scope.gsItemAutoPosition) {\r\n                    el.attr('data-gs-x', scope.gsItemX);\r\n                    el.attr('data-gs-y', scope.gsItemY);\r\n                }\r\n\r\n                el.attr('data-gs-width', scope.gsItemWidth);\r\n                el.attr('data-gs-height', scope.gsItemHeight);\r\n                \r\n                el.attr('data-gs-min-width', scope.gsItemMinWidth);\r\n                el.attr('data-gs-min-height', scope.gsItemMinHeight);\r\n                el.attr('data-gs-max-width', scope.gsItemMaxWidth);\r\n                el.attr('data-gs-max-height', scope.gsItemMaxHeight);\r\n\r\n                el.attr('data-gs-auto-position', scope.gsItemAutoPosition);\r\n                \r\n                var widget = controller.addItem(element);\r\n                var item = element.data('_gridstack_node');\r\n\r\n                // TODO\r\n                // https://github.com/kdietrich/gridstack-angular/pull/21\r\n                scope.$watch(function () { return el.attr('data-gs-id'); }, function (val) {\r\n                    scope.gsItemId = val;\r\n                });\r\n                \r\n                scope.$watch(function () { return el.attr('data-gs-x'); }, function (val) {\r\n                    scope.gsItemX = Number(val);\r\n                });\r\n\r\n                scope.$watch(function () { return el.attr('data-gs-y'); }, function (val) {\r\n                    scope.gsItemY = Number(val);\r\n                });\r\n\r\n                scope.$watch(function () { return el.attr('data-gs-width'); }, function (val) {\r\n                    scope.gsItemWidth = Number(val);\r\n                });\r\n\r\n                scope.$watch(function () { return el.attr('data-gs-height'); }, function (val) {\r\n                    scope.gsItemHeight = Number(val);\r\n                });\r\n\r\n                element.bind('$destroy', function () {\r\n                    var item = element.data('_gridstack_node');\r\n                    controller.removeItem(element);\r\n                });\r\n            }\r\n\r\n        };\r\n\r\n    }]);\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-directives');\r\n\r\n    app.directive('rpgsmithnotetype', ['$compile', 'dialogs', 'tileService', '$state', 'toaster', 'rulesetDataShareService', function ($compile, dialogs, tileService, $state, toaster, rulesetDataShareService) {\r\n\t\tvar templateUrlEdit = '<form><div class=\"form-row\"><div class=\"col-12 col-md-4\"><div class=\"form-group\"><label for=\"newNoteTitle\">Title</label><input type= \"text\" id=\"newNoteTitle\" class=\"form-control\" placeholder= \"Enter note title\" ng-model=\"info.Value.Note.Name\" ></div><div class=\"form-group\"> <ul class=\"input-color-items\"><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\" checked=\"checked\"><i class=\"icon input-color-2\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-4\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-6\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-8\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-10\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-12\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><i class=\"icon input-color-custom\" role=\"button\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#colorSelectionPopup\"></i></label></li></ul></div></div></div> <div class=\"form-row\"><div class=\"col\"><div class=\"form-group\"><label for=\"newNoteContents\">Contents*</label><textarea id=\"newNoteContents\" class=\"form-control\" placeholder=\"Enter note contents\" rows=\"8\" ng-model=\"info.Value.Note.Text\"></textarea></div></div></div></form > ';\r\n\r\n\t\tvar templateUrlUse = '<div class=\"NoteTile\" style=\"background-color: {{info.Styles.titlebackgroundcolor}};height: 50px;\"><span class=\"text_design\" ng-click=\"EditNoteTile()\" > <p style=\"color:{{info.Styles.titletextcolor}};height: 50px;\">{{ info.Value.Note.Name }}</p></span ></div ><div style=\"color:{{info.Styles.bodytextcolor}};height: 80%\" ng-bind-html=\"info.Value.Note.Text\" ng-click=\"ShowContent()\"></div>';\r\n\r\n\r\n        var getTemplate = function (useoredit) {\r\n            var template = '';\r\n\r\n            switch (useoredit) {\r\n                case 1:\r\n                    template = templateUrlEdit;\r\n                    break;\r\n                case 0:\r\n                    template = templateUrlUse;\r\n                    break;\r\n            }\r\n\r\n            return template;\r\n        };\r\n\r\n        var linker = function (scope, element, attrs) {\r\n            //var items = angular.copy(scope.info);\r\n            //var item = angular.copy(scope.fullscope);\r\n            element.html(getTemplate(scope.useoredit));\r\n\r\n            $compile(element.contents())(scope);\r\n            scope.EditNoteTile = function () {\r\n                var dlg = dialogs.create('/views/dialogs/tile-editor-1.html', 'NoteTile',\r\n                    { scope: scope.info, Tablist: scope.fullscope }\r\n                );\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        res.IsSync = false;\r\n                        res.UpdateDate = Date.now();\r\n                        if (res.Styles != null) {\r\n                            res.Styles.backgroundColor = $(\"#bckcolor\").val();\r\n                        }\r\n                        rulesetDataShareService.setTilelst(res);\r\n                        //rulesetDataShareService.setTileStyles(res);\r\n                        //var index = -1;\r\n                        //if (angular.isUndefined(scope.fullscope) == false) {\r\n                        //    for (var i = 0; i < scope.fullscope.length; i++) {\r\n                        //        if (scope.fullscope[i].TileId == res.TileId) {\r\n                        //            scope.fullscope.splice(i, 1);\r\n                        //            scope.fullscope.push(res);\r\n                        //        }\r\n                        //    }\r\n                        //}\r\n                        //res.Mode = \"Use\";\r\n                        //element.html(getTemplate(scope.useoredit));\r\n                        scope.info = res;\r\n\r\n                        scope.fromDirectiveFn(scope.info);\r\n                    }\r\n                });\r\n            }\r\n\r\n            scope.ShowContent = function () {\r\n                var dlg = dialogs.create('/views/dialogs/notetilecontent.html', 'ShowAllTileContent',\r\n                    { scope: scope.info }\r\n                );\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        scope.info = res;\r\n                    }\r\n                });\r\n            }\r\n\r\n            scope.RemoveTile = function () {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Delete',\r\n                    \"Are you sure you want to delete \" + scope.info.Value.Note.Name,\r\n                    { size: 'sm' }\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function (btn) {\r\n                        tileService.deleteTile(scope.info.TileId).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                //  scope.info = null;\r\n                                //  scope.info.splice(scope.info.TileId);\r\n                                $state.go('profile.character.layout');\r\n                                // $transition.router.stateService.go('profile.character.layout', { characterId: scope.info.Value.Note.CharacterProfileId, layoutId: 123 });\r\n                                toaster.pop('success', \"Tile deleted Successfully.\");\r\n                            }\r\n                            else {\r\n                                if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        alert(data.data.ErrorMessage);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            link: linker,\r\n            scope: {\r\n                info: '=',\r\n                //info: '&',\r\n                //info: false,\r\n                //fullscope: '=',\r\n                useoredit: '=',\r\n                fromDirectiveFn: '=method'\r\n            }\r\n        };\r\n\r\n    }]);\r\n\r\n    app.directive('rpgsmithcountertype', ['$compile', 'dialogs', 'tileService', 'toaster', 'rulesetDataShareService', function ($compile, dialogs, tileService, toaster, rulesetDataShareService) {\r\n        //var templateUrlEdit = '<div class=\"row\"><div class =\"form-group col-md-6\"><label class=\"control-label col-md-4\">Default Value</label><div class=\"col-md-8\"><input type=\"number\" placeholder=\"Default Value\" class=\"form-control col-md-8\" ng-model=\"info.Value.Counter.DefaultValue\" name=\"input\" ng-class=\"{red: form.input.$dirty && form.input.$error.required}\" ng-required=\"info\" value=\"0\" ></div></div><div class=\"form-group col-md-6\"><label class=\"control-label col-md-4\">Mask</label><div class=\"col-md-8\"><input type=\"text\" placeholder=\"Text\" class=\"form-control col-md-8\" ng-model=\"info.Value.Counter.Mask\" name=\"input\" ng-class=\"{red: form.input.$dirty && form.input.$error.required}\" ng-required=\"info\" value=\"\" ></div></div>' +\r\n        //    '<div class=\"form-group col-md-6\"><label class=\"control-label col-md-4\">Max</label><div class=\"col-md-8\"><input type=\"number\" placeholder=\"Max Value\" class=\"form-control col-md-8\" ng-model=\"info.Value.Counter.Max\" name=\"input\" ng-class=\"{red: form.input.$dirty && form.input.$error.required}\" ng-required=\"info\" value=\"\" ></div></div><div class=\"form-group col-md-6\"><label class=\"control-label col-md-4\">Min</label><div class=\"col-md-8\"><input type=\"number\" placeholder=\"Min Value\" class=\"form-control col-md-8\" ng-model=\"info.Value.Counter.Min\" name=\"input\" ng-class=\"{red: form.input.$dirty && form.input.$error.required}\" ng-required=\"info\" value=\"\" ></div></div><div class=\"form-group col-md-6\"><label class=\"control-label col-md-4\">Name</label><div class=\"col-md-8\"><input type=\"text\" placeholder=\"Name\" class=\"form-control col-md-8\" ng-model=\"info.Value.Counter.Name\" name=\"input\" ng-class=\"{red: form.input.$dirty && form.input.$error.required}\" ng-required=\"info\" value=\"\" ></div></div>' +\r\n        //    '<div class=\"form-group col-md-6\"><label class=\"control-label col-md-4\">Step</label><div class=\"col-md-8\"><input type=\"number\" placeholder=\"Step\" class=\"form-control col-md-8\" ng-model=\"info.Value.Counter.Step\" name=\"input\" ng-class=\"{red: form.input.$dirty && form.input.$error.required}\" ng-required=\"info\" value=\"\" ></div></div><div class=\"form-group col-md-6\"><label class=\"control-label col-md-4\">Value</label><div class=\"col-md-8\"><input type=\"number\" placeholder=\"Value\" class=\"form-control col-md-8\" ng-model=\"info.Value.Counter.Value\" name=\"input\" ng-class=\"{red: form.input.$dirty && form.input.$error.required}\" ng-required=\"info\" value=\"\" ></div></div></div>';\r\n\t\tvar templateUrlEdit = '<form><div class=\"form-row\"><div class=\"col-12 col-md-6\"><div class=\"form-group\"><label for=\"newCounterTitle\">Title</label><input type=\"text\" id=\"newCounterTitle\" class=\"form-control\" ng-model=\"info.Value.Counter.Name\" placeholder=\"Enter counter title\"></div></div><div class=\"col-12 col-md-6\"><div class=\"form-group\"><label for=\"newCounterDefaultValue\">Default Value*</label><input type=\"number\" id=\"newCounterDefaultValue\" class=\"form-control\" placeholder=\"Enter reset value\" ng-model=\"info.Value.Counter.Value\"></div></div></div><div class=\"form-row\"><div class=\"col-12 col-md-6\"><div class=\"form-group\"><label for=\"newCounterMinimumValue\">Minimum</label><input type=\"number\" id=\"newCounterMinimumValue\" class=\"form-control\" placeholder=\"Enter minimum value\" ng-model=\"info.Value.Counter.Min\"></div></div><div class=\"col-12 col-md-6\"><div class=\"form-group\"><label for=\"newCounterMaximumValue\">Maximum</label><input type=\"number\" id=\"newCounterMaximumValue\" class=\"form-control\" placeholder=\"Enter maximum value\" ng-model=\"info.Value.Counter.Max\"></div></div></div><div class=\"form-row\"><div class=\"col-12 col-md-6\"><div class=\"form-group\"><label for=\"newCounterStep\">Step</label><input type=\"number\" id=\"newCounterStep\" class=\"form-control\" placeholder=\"Enter step\" ng-model=\"info.Value.Counter.Step\"></div><div class=\"form-group\"><label for=\"colorList\">Color*</label><ul id=\"colorList\" class=\"input-color-items\"><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\" checked=\"checked\"><i class=\"icon input-color-2\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-4\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-6\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-8\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-10\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-12\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><i class=\"icon input-color-custom\" role=\"button\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#colorSelectionPopup\"></i></label></li></ul></div></div></div></form>';\r\n\r\n\r\n\t\tvar templateUrlUse = '<div class=\"NoteTile\" style=\"background-color: {{info.Styles.titlebackgroundcolor}}\"><span  ng-click=\"EditCounterTile()\" class=\"text_design\"><p style=\"color:{{info.Styles.titletextcolor}};height:50px\">{{info.Value.Counter.Name}}</p></span></div> <div class=\"text_align\" style=\"font-size: larger;vertical-align: middle;background-color: {{info.Styles.bodybackgroundColor}};width: 100%;height:90%\"><p ng-click=\"ShowCounterValue()\" style=\"color:{{info.Styles.bodytextcolor}};\">{{ info.Value.Counter.Value }}</p> </div>';\r\n\r\n        var getTemplate = function (useoredit) {\r\n            var template = '';\r\n\r\n            switch (useoredit) {\r\n                case 1:\r\n                    template = templateUrlEdit;\r\n                    break;\r\n                case 0:\r\n                    template = templateUrlUse;\r\n                    break;\r\n            }\r\n\r\n            return template;\r\n        };\r\n\r\n        var linker = function (scope, element, attrs) {\r\n            //var items = angular.copy(scope.info);\r\n\r\n            element.html(getTemplate(scope.useoredit));\r\n\r\n            $compile(element.contents())(scope);\r\n\r\n            scope.EditCounterTile = function () {\r\n                var dlg = dialogs.create('/views/dialogs/tile-editor-2.html', 'NoteTile',\r\n                    { scope: scope.info }\r\n                );\r\n                dlg.result.then(function (res) {\r\n                    //res.UpdateDate = Date.now();\r\n                    if (res != \"cancel\") {\r\n                        if (res.Styles != null) {\r\n                            res.Styles.backgroundColor = $(\"#bckcolor\").val();\r\n                        }\r\n                        rulesetDataShareService.setTilelst(res);\r\n                        scope.info = res;\r\n\r\n                    }\r\n                });\r\n            }\r\n            var setValue = function (val) {\r\n                scope.info.IsSync = false;\r\n                //scope.info.UpdateDate = Date.now();\r\n                scope.info.Value.Counter.Value = parseInt(val);\r\n            }\r\n            setValue(scope.info.Value.Counter.Value);\r\n            scope.ShowCounterValue = function () {\r\n                var dlg = dialogs.create('/views/dialogs/countertilecontent.html', 'ShowAllTileContent',\r\n                    { scope: scope.info }\r\n                );\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        scope.info = res;\r\n                    }\r\n                });\r\n            }\r\n            scope.Increment = function () {\r\n                var min = angular.isUndefined(scope.info.Value.Counter.Min) ? null : parseInt(scope.info.Value.Counter.Min);\r\n                var max = angular.isUndefined(scope.info.Value.Counter.Max) ? null : parseInt(scope.info.Value.Counter.Max);\r\n                var step = angular.isUndefined(scope.info.Value.Counter.Step) ? 0 : parseInt(scope.info.Value.Counter.Step);\r\n                if (max && (scope.info.Value.Counter.Value >= max || scope.info.Value.Counter.Value + step >= max)) {\r\n                    setValue(max);\r\n                    return false;\r\n                }\r\n                else if (step == 0) {\r\n                    scope.info.Value.Counter.Value = min;\r\n                    return false;\r\n                }\r\n                setValue(scope.info.Value.Counter.Value + step);\r\n            }\r\n            scope.Decrement = function () {\r\n                var min = angular.isUndefined(scope.info.Value.Counter.Min) ? null : parseInt(scope.info.Value.Counter.Min);\r\n                var max = angular.isUndefined(scope.info.Value.Counter.Max) ? null : parseInt(scope.info.Value.Counter.Max);\r\n                var step = angular.isUndefined(scope.info.Value.Counter.Step) ? 0 : parseInt(scope.info.Value.Counter.Step);\r\n                if (min && (scope.info.Value.Counter.Value <= min || scope.info.Value.Counter.Value - step <= min) || min === 0 && scope.info.Value.Counter.Value < 1) {\r\n                    setValue(min);\r\n                    return false;\r\n                }\r\n                setValue(scope.info.Value.Counter.Value - step);\r\n            };\r\n            scope.Reset = function () {\r\n                var min = angular.isUndefined(scope.info.Value.Counter.Min) ? null : parseInt(scope.info.Value.Counter.Min);\r\n                var max = angular.isUndefined(scope.info.Value.Counter.Max) ? null : parseInt(scope.info.Value.Counter.Max);\r\n                var step = angular.isUndefined(scope.info.Value.Counter.Step) ? 0 : parseInt(scope.info.Value.Counter.Step);\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Reset',\r\n                    'Are you sure you want to reset \"' + scope.info.Value.Counter.Name + '\" to \"' + scope.info.Value.Counter.DefaultValue + '\"?',\r\n                    { size: 'md' }\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function () {\r\n                        scope.info.IsSync = false;\r\n                        scope.info.UpdateDate = Date.now();\r\n                        scope.info.Value.Counter.Value = scope.info.Value.Counter.DefaultValue;\r\n                    });\r\n            }\r\n            scope.RemoveTile = function () {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Delete',\r\n                    \"Are you sure you want to delete \" + scope.info.Value.Counter.Name,\r\n                    { size: 'sm' }\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function (btn) {\r\n                        tileService.deleteTile(scope.info.TileId).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                //  scope.info.splice(scope.info.TileId);\r\n                                toaster.pop('success', \"Tile deleted Successfully.\");\r\n\r\n                            }\r\n                            else {\r\n                                if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        alert(data.data.ErrorMessage);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                );\r\n            }\r\n\r\n        };\r\n        //scope.changed = function () {\r\n        //    // If the user decides to delete the number, we will set it to 0.\r\n        //    if (!scope.info.Value.Counter.Value) setValue(0);\r\n\r\n        //    // Check if what's typed is numeric or if it has any letters.\r\n        //    if (/[0-9]/.test(scope.info.Value.Counter.Value)) {\r\n        //        setValue(scope.info.Value.Counter.Value);\r\n        //    }\r\n        //    else {\r\n        //        setValue(scope.min);\r\n        //    }\r\n\r\n        //    // If a minimum is set, let's make sure we're within the limit.\r\n        //    if (min && (scope.info.Value.Counter.Value <= min || scope.info.Value.Counter.Value - step <= min)) {\r\n        //        setValue(min);\r\n        //        return false;\r\n        //    }\r\n\r\n        //    // If a maximum is set, let's make sure we're within the limit.\r\n        //    if (max && (scope.info.Value.Counter.Value >= max || scope.info.Value.Counter.Value + step >= max)) {\r\n        //        setValue(max);\r\n        //        return false;\r\n        //    }\r\n\r\n        //    // Re-set the value as an integer.\r\n        //    setValue(scope.info.Value.Counter.Value);\r\n        //};\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            link: linker,\r\n            scope: {\r\n                info: '=',\r\n                useoredit: '='\r\n            }\r\n        }\r\n\r\n    }]);\r\n\r\n    app.directive('rpgsmithattributetype', ['$compile', 'dialogs', 'rulesetDataShareService', function ($compile, dialogs, rulesetDataShareService) {\r\n        //var templateUrlEdit = '<div class=\"row\"><div class =\"form-group col-md-6\"><label class=\"control-label col-md-4\">Title</label><div class=\"col-md-8\"><input type=\"text\" class=\"form-control col-md-8\" ng-model=\"info.Value.Attribute.Title\" value=\"\"/></div></div><div class =\"form-group col-md-6\"><label class=\"control-label col-md-4\">Corestat Value</label><div class=\"col-md-6\"><select class=\"form-control \" ng-options=\" item.Name as item.Name for item in info.CorestatValues\" ng-model=\"info.Value.Attribute.CorestatValue\" >' +\r\n        //    //var templateUrlEdit = '<div class=\"row\"><div class =\"form-group col-md-6\"><label class=\"control-label col-md-4\">Title</label><div class=\"col-md-8\"><input type=\"text\" class=\"form-control col-md-8\" ng-model=\"info.Value.Attribute.Title\" value=\"\"/></div></div><div class =\"form-group col-md-6\"><label class=\"control-label col-md-4\">Corestat Value</label><div class=\"col-md-6\"><select class=\"form-control \" ng-options=\"item for item in corestatnames\" ng-model=\"info.Value.Attribute.CorestatValue\" >' +\r\n        //    '<option value=\"\">--Select--</option></select></div></div></div>';\r\n\r\n\t\tvar templateUrlEdit = '<form><div class=\"form-row\"><div class=\"col-12 col-md-6\"><div class=\"form-group\"><label for=\"colorList\">Color*</label><ul id=\"colorList\" class=\"input-color-items\"><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\" checked=\"checked\"><i class=\"icon input-color-2\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-4\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-6\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-8\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-10\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-12\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><i class=\"icon input-color-custom\" role=\"button\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#colorSelectionPopup\"></i></label></li></ul></div><fieldset class=\"form-group input-switch input-switch-dual\"><legend></legend><ul class=\"input-switch-items\"><li class=\"form-check\"><label class=\"control-label col-md-4\">Title</label></li><li class=\"form-check\"><input type=\"text\" class=\"form-control col-md-8\" ng-model=\"info.Value.Attribute.Title\" value=\"\" /></li></ul></fieldset></div></div><div class=\"form-row\"><div class=\"col\"><fieldset class=\"form-group input-list input-list-wrap core-stats\"><legend>Core Stats*</legend><ul class=\"input-list-items\" ng-if=\"info.CorestatValues != null\"><li class=\"form-check\" ng-repeat=\"coreStatValue in info.CorestatValues\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newAttributeCoreStats\" value=\"{{coreStatValue.Name}}\" ng-model=\"$parent.info.Value.Attribute.CorestatValue\"><span><em>{{ coreStatValue.Name }}</em><i class=\"icon\"></i></span></label></li></ul><p class=\"text-center\" ng-if=\"info.CorestatValues == null\">No Corestats Available</p></fieldset></div></div></form>';\r\n        //var templateUrlEdit = '<form><div class=\"form-row\"><div class=\"col-12 col-md-6\"><fieldset class=\"form-group input-switch input-switch-dual\"><legend></legend><ul class=\"input-switch-items\"><li class=\"form-check\"><label class=\"control-label col-md-4\">Title</label></li><li class=\"form-check\"><input type=\"text\" class=\"form-control col-md-8\" ng-model=\"info.Value.Attribute.Title\" value=\"\" /></li></ul></fieldset></div></div><div class=\"form-row\"><div class=\"col\"><fieldset class=\"form-group input-list input-list-wrap core-stats\"><legend>Core Stats*</legend><ul class=\"input-list-items\"><li class=\"form-check\" ng-repeat=\"coreStatValue in info.CorestatValues\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newAttributeCoreStats\" value=\"{{coreStatValue.Name}}\" ng-model=\"info.Value.Attribute.SelectedCorestatValue\"><span><em>{{ coreStatValue.Name }}</em><i class=\"icon\"></i></span></label></li></ul></fieldset></div></div></form>';\r\n\r\n\t\tvar templateUrlUse = '<div class=\"NoteTile\" style=\"background-color: {{info.Styles.titlebackgroundcolor}}\"><span ng-click=\"EditAttributeTile()\" class=\"text_design\"><p style=\"color:{{info.Styles.titletextcolor}};\">{{info.Value.Attribute.Title}}</p></span></div><div class=\"text_align\"><p ng-click=\"ShowAttributeContent()\" style=\"color:{{info.Styles.bodytextcolor}};\">{{info.Value.Attribute.Name}}</p></div>';\r\n\r\n        var getTemplate = function (useoredit) {\r\n            var template = '';\r\n\r\n            switch (useoredit) {\r\n                case 1:\r\n                    template = templateUrlEdit;\r\n                    break;\r\n                case 0:\r\n                    template = templateUrlUse;\r\n                    break;\r\n            }\r\n\r\n            return template;\r\n        };\r\n\r\n        var linker = function (scope, element, attrs) {\r\n            debugger;\r\n            var items = angular.copy(scope.info);\r\n            element.html(getTemplate(scope.useoredit));\r\n\r\n            $compile(element.contents())(scope);\r\n\r\n            if (scope.useoredit == 0) {\r\n                if (items.Value.Attribute.AttributeContent == null || items.Value.Attribute.AttributeContent == \"\" || angular.isUndefined(items.Value.Attribute.AttributeContent) == true) {\r\n                    var CoreStatValues = rulesetDataShareService.getLayoutData();\r\n                    for (var i = 0; i < CoreStatValues.CorestatValues.length; i++) {\r\n                        var data = CoreStatValues.CorestatValues[i];\r\n                        if (scope.info.Value.Attribute.TypeId == data.TypeId) {\r\n                            items.Value.Attribute.AttributeContent = data;\r\n                        }\r\n                    }\r\n                }\r\n                if (items.Value.Attribute.AttributeContent.TypeId == 1) {\r\n                    scope.info.Value.Attribute.CoreStatValue = items.Value.Attribute.AttributeContent.Value;\r\n                    scope.info.Value.Attribute.TypeId = items.Value.Attribute.AttributeContent.TypeId;\r\n                    if (items.Value.Attribute.AttributeContent.Value.Text != null) {\r\n                        scope.info.Value.Attribute.CorestatValues = \"Text:\" + items.Value.Attribute.AttributeContent.Value.Text.value;\r\n                    }\r\n                    else {\r\n                        scope.info.Value.Attribute.CorestatValues = \"\";\r\n                    }\r\n                    scope.info.Value.Attribute.AttributeContent = items.Value.Attribute.AttributeContent;\r\n                }\r\n                else if (items.Value.Attribute.AttributeContent.TypeId == 2) {\r\n                    scope.info.Value.Attribute.CoreStatValue = items.Value.Attribute.AttributeContent.Value;\r\n                    //scope.info.Value.Attribute.TypeId = items.Value.Attribute.AttributeContent.TypeId;\r\n                    if (items.Value.Attribute.AttributeContent.Value.Choices != null) {\r\n                        scope.info.Value.Attribute.CorestatValues = \"Choices:\" + items.Value.Attribute.AttributeContent.Value.Choices;\r\n                    }\r\n                    else {\r\n                        scope.info.Value.Attribute.CorestatValues = \"\";\r\n                    }\r\n                    scope.info.Value.Attribute.AttributeContent.AttributeValue = \"Choices:\" + items.Value.Attribute.AttributeContent.Value.Choices;\r\n                }\r\n                else if (items.Value.Attribute.AttributeContent.TypeId == 3) {\r\n                    scope.info.Value.Attribute.CoreStatValue = items.Value.Attribute.AttributeContent.Value;\r\n                    scope.info.Value.Attribute.TypeId = items.Value.Attribute.AttributeContent.TypeId;\r\n                    if (items.Value.Attribute.AttributeContent.Value.YesOrNo != null) {\r\n                        scope.info.Value.Attribute.CorestatValues = \"On/Off:\" + items.Value.Attribute.AttributeContent.Value.YesOrNo.value;\r\n                    }\r\n                    else {\r\n                        scope.info.Value.Attribute.CorestatValues = \"\";\r\n                    }\r\n                    scope.info.Value.Attribute.AttributeContent = items.Value.Attribute.AttributeContent;\r\n                }\r\n                else if (items.Value.Attribute.AttributeContent.TypeId == 4) {\r\n                    scope.info.Value.Attribute.CoreStatValue = items.Value.Attribute.AttributeContent.Value;\r\n                    scope.info.Value.Attribute.TypeId = items.Value.Attribute.AttributeContent.TypeId;\r\n                    if (items.Value.Attribute.AttributeContent.Value.OnOrOff != null) {\r\n                        scope.info.Value.Attribute.CorestatValues = \"Yes/No:\" + items.Value.Attribute.AttributeContent.Value.OnOrOff.value;\r\n                    }\r\n                    else {\r\n                        scope.info.Value.Attribute.CorestatValues = \"\";\r\n                    }\r\n                    scope.info.Value.Attribute.AttributeContent = items.Value.Attribute.AttributeContent;\r\n                }\r\n                else if (items.Value.Attribute.AttributeContent.TypeId == 5) {\r\n                    scope.info.Value.Attribute.CoreStatValue = items.Value.Attribute.AttributeContent.Value;\r\n                    scope.info.Value.Attribute.TypeId = items.Value.Attribute.AttributeContent.TypeId;\r\n                    if (items.Value.Attribute.AttributeContent.Value.ValueAndSubValue != null) {\r\n                        scope.info.Value.Attribute.CorestatValues = \"Value:\" + items.Value.Attribute.AttributeContent.Value.ValueAndSubValue.value + \" \" + \"Sub Value:\" + items.Value.Attribute.AttributeContent.Value.ValueAndSubValue.subvalue;\r\n                    }\r\n                    else {\r\n                        scope.info.Value.Attribute.CorestatValues = \"\";\r\n                    }\r\n                    scope.info.Value.Attribute.AttributeContent = items.Value.Attribute.AttributeContent;\r\n                }\r\n                else if (items.Value.Attribute.AttributeContent.TypeId == 6) {\r\n                    scope.info.Value.Attribute.CoreStatValue = items.Value.Attribute.AttributeContent.Value;\r\n                    scope.info.Value.Attribute.TypeId = items.Value.Attribute.AttributeContent.TypeId;\r\n                    if (items.Value.Attribute.AttributeContent.Value.CurrentAndMaxValue != null) {\r\n                        scope.info.Value.Attribute.CorestatValues = \"Current Value:\" + items.Value.Attribute.AttributeContent.Value.CurrentAndMaxValue.CurrentValue + \" \" + \"Max Value:\" + items.Value.Attribute.AttributeContent.Value.CurrentAndMaxValue.MaxValue;\r\n                    }\r\n                    else {\r\n                        scope.info.Value.Attribute.CorestatValues = \"\";\r\n                    }\r\n                    scope.info.Value.Attribute.AttributeContent = items.Value.Attribute.AttributeContent;\r\n                }\r\n                else if (items.Value.Attribute.AttributeContent.TypeId == 7) {\r\n                    scope.info.Value.Attribute.CoreStatValue = items.Value.Attribute.AttributeContent.Value;\r\n                    scope.info.Value.Attribute.TypeId = items.Value.Attribute.AttributeContent.TypeId;\r\n                    if (items.Value.Attribute.AttributeContent.Value.Weight != null) {\r\n                        scope.info.Value.Attribute.CorestatValues = \"Weight:\" + items.Value.Attribute.AttributeContent.Value.Weight.value + items.Value.Attribute.AttributeContent.Weight.units.selectedUnit;\r\n                    }\r\n                    else {\r\n                        scope.info.Value.Attribute.CorestatValues = \"\";\r\n                    }\r\n                    scope.info.Value.Attribute.AttributeContent = items.Value.Attribute.AttributeContent;\r\n                }\r\n                else if (items.Value.Attribute.AttributeContent.TypeId == 8) {\r\n                    scope.info.Value.Attribute.CoreStatValue = items.Value.Attribute.AttributeContent.Value;\r\n                    scope.info.Value.Attribute.TypeId = items.Value.Attribute.AttributeContent.TypeId;\r\n                    if (items.Value.Attribute.AttributeContent.Value.Image != null) {\r\n                        scope.info.Value.Attribute.CorestatValues = items.Value.Attribute.AttributeContent.Value.Image.image;\r\n                    }\r\n                    else {\r\n                        scope.info.Value.Attribute.CorestatValues = \"\";\r\n                    }\r\n                    scope.info.Value.Attribute.AttributeContent = items.Value.Attribute.AttributeContent;\r\n                }\r\n                else if (items.Value.Attribute.AttributeContent.TypeId == 12) {\r\n                    scope.info.Value.Attribute.CoreStatValue = items.Value.Attribute.AttributeContent.Value;\r\n                    scope.info.Value.Attribute.TypeId = items.Value.Attribute.AttributeContent.TypeId;\r\n                    if (items.Value.Attribute.AttributeContent.Value.Height != null) {\r\n                        scope.info.Value.Attribute.CorestatValues = \"Height:\" + items.Value.Attribute.AttributeContent.Value.Height.value + items.Value.Attribute.AttributeContent.Height.units.selectedUnit;\r\n                    }\r\n                    else {\r\n                        scope.info.Value.Attribute.CorestatValues = \"\";\r\n                    }\r\n                    scope.info.Value.Attribute.AttributeContent = items.Value.Attribute.AttributeContent;\r\n                }\r\n                else if (items.Value.Attribute.AttributeContent.TypeId == 13) {\r\n                    scope.info.Value.Attribute.CoreStatValue = items.Value.Attribute.AttributeContent.Value;\r\n                    scope.info.Value.Attribute.TypeId = items.Value.Attribute.AttributeContent.TypeId;\r\n                    if (items.Value.Attribute.AttributeContent.Value.Volume != null) {\r\n                        scope.info.Value.Attribute.CorestatValues = \"Volume:\" + items.Value.Attribute.AttributeContent.Value.Volume.value + \"  \" + items.Value.Attribute.AttributeContent.Volume.units.selectedUnit;\r\n                    }\r\n                    else {\r\n                        scope.info.Value.Attribute.CorestatValues = \"\";\r\n                    }\r\n                    scope.info.Value.Attribute.AttributeContent = items.Value.Attribute.AttributeContent;\r\n                }\r\n                else if (items.Value.Attribute.AttributeContent.TypeId == 14) {\r\n                    scope.info.Value.Attribute.CoreStatValue = items.Value.Attribute.AttributeContent.Value;\r\n                    scope.info.Value.Attribute.TypeId = items.Value.Attribute.AttributeContent.TypeId;\r\n                    if (items.Value.Attribute.AttributeContent.Value.Number != null) {\r\n                        scope.info.Value.Attribute.CorestatValues = \"Number:\" + items.Value.Attribute.AttributeContent.Value.Number.value;\r\n                    }\r\n                    else {\r\n                        scope.info.Value.Attribute.CorestatValues = \"\";\r\n                    }\r\n                    scope.info.Value.Attribute.AttributeContent = items.Value.Attribute.AttributeContent;\r\n                }\r\n                else if (items.Value.Attribute.AttributeContent.TypeId == 15) {\r\n                    scope.info.Value.Attribute.CoreStatValue = items.Value.Attribute.AttributeContent.Value;\r\n                    scope.info.Value.Attribute.TypeId = items.Value.Attribute.AttributeContent.TypeId;\r\n                    if (items.Value.Attribute.AttributeContent.Value.DefaultDice != null) {\r\n                        scope.info.Value.Attribute.CorestatValues = \"Dice:\" + items.Value.Attribute.AttributeContent.Value.DefaultDice.value;\r\n                    }\r\n                    else {\r\n                        scope.info.Value.Attribute.CorestatValues = \"\";\r\n                    }\r\n                    scope.info.Value.Attribute.AttributeContent = items.Value.Attribute.AttributeContent;\r\n                }\r\n                else if (items.Value.Attribute.AttributeContent.TypeId == 19) {\r\n                    scope.info.Value.Attribute.CoreStatValue = items.Value.Attribute.AttributeContent.Value;\r\n                    scope.info.Value.Attribute.TypeId = items.Value.Attribute.AttributeContent.TypeId;\r\n                    if (items.Value.Attribute.AttributeContent.Value.TextArea != null) {\r\n                        scope.info.Value.Attribute.CorestatValues = items.Value.Attribute.AttributeContent.Value.TextArea.value;\r\n                    }\r\n                    else {\r\n                        scope.info.Value.Attribute.CorestatValues = \"\";\r\n                    }\r\n                    scope.info.Value.Attribute.AttributeContent.AttributeValue = items.Value.Attribute.AttributeContent.Value.TextArea.value;\r\n                }\r\n            }\r\n\r\n            scope.ShowAttributeContent = function () {\r\n                var dlg = dialogs.create('/views/dialogs/attributetilecontent.html', 'ShowAllTileContent',\r\n                    { scope: scope.info }\r\n                );\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        scope.info = res;\r\n                    }\r\n                });\r\n            }\r\n\r\n            scope.EditAttributeTile = function () {\r\n            \r\n                var layoutdata = rulesetDataShareService.getLayoutData();\r\n                var corestatvalues = layoutdata.CorestatValues;\r\n                scope.info.CorestatValues = angular.isUndefined(corestatvalues) == false ? corestatvalues : [];\r\n                for (var i = 0; i < scope.info.CorestatValues.length; i++) {\r\n                    if (scope.info.CorestatValues[i].Name != null) {\r\n                        if (scope.info.Value.Attribute.Name == scope.info.CorestatValues[i].Name) {\r\n                            scope.info.Value.Attribute.SelectedCorestatValue = scope.info.CorestatValues[i].Name;\r\n                       }\r\n                    }\r\n                }\r\n                var dlg = dialogs.create('/views/dialogs/tile-editor-3.html', 'NoteTile',\r\n                    { scope: scope.info }\r\n                );\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        if (res.Styles != null) {\r\n                            res.Styles.backgroundColor = $(\"#bckcolor\").val();\r\n                        }\r\n                        rulesetDataShareService.setTilelst(res);\r\n                        scope.info = res;\r\n                    }\r\n                });\r\n            }\r\n\r\n            scope.RemoveTile = function () {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Delete',\r\n                    \"Are you sure you want to delete \" + scope.info.Value.Attribute.Name,\r\n                    { size: 'sm' }\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function (btn) {\r\n                        tileService.deleteTile(scope.info.TileId).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                //  scope.info.splice(scope.info.TileId);\r\n                                toaster.pop('success', \"Tile deleted Successfully.\");\r\n\r\n                            }\r\n                            else {\r\n                                if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        alert(data.data.ErrorMessage);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                );\r\n            }\r\n        };\r\n\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            link: linker,\r\n            scope: {\r\n                info: '=',\r\n                useoredit: '='\r\n            }\r\n        }\r\n\r\n    }]);\r\n\r\n    app.directive('rpgsmithlinktype', ['$compile', 'dialogs', 'rulesetDataShareService', function ($compile, dialogs, rulesetDataShareService) {\r\n\t\tvar templateUrlEdit = '<form><div class=\"form-row\"><div class=\"col-12 col-md-6\"><div class=\"form-group\"><label for=\"colorList\">Color*</label><ul id=\"colorList\" class=\"input-color-items\"><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\" checked=\"checked\"><i class=\"icon input-color-2\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-4\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-6\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-8\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-10\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-12\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><i class=\"icon input-color-custom\" role=\"button\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#colorSelectionPopup\"></i></label></li></ul></div><fieldset class=\"form-group input-switch input-switch-dual\"><legend></legend><ul class=\"input-switch-items\"><li class=\"form-check\"><label class=\"form-check-label\">Title</label></li><li class=\"form-check\"><input type=\"text\" class=\"form-control col-md-8\" ng-model=\"info.Value.Link.Title\" value=\"\" /></li></ul></fieldset></div></div><div class=\"form-row\"><div class=\"col\"><!-- Link property switch --><fieldset class=\"form-group input-switch\"><legend>Property*</legend><ul class=\"input-switch-items\"><li class=\"form-check\" ><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newLinkProperty\" ng-click=\"ShowItemsDropdown()\" value=\"Items\" ng-model=\"info.Value.Link.SelectedPropertyValue\"><span>Items</span></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newLinkProperty\" ng-click=\"ShowSpellsDropdown()\" value=\"Spells\" ng-model=\"info.Value.Link.SelectedPropertyValue\"><span>Spells</span></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newLinkProperty\" ng-click=\"ShowAbilitiesDropdown()\" value=\"Abilities\" ng-model=\"info.Value.Link.SelectedPropertyValue\"><span>Abilities</span></label></li></ul></fieldset><fieldset class=\"form-group input-list input-list-wrap properties\"><ul class=\"input-list-items\"><li class=\"form-check\" ng-show=\"IsItemVisible\" ng-repeat=\"item in LinkTileItems\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newLinkProperties\" value=\"{{item.ItemProperties[0].Value.Text.value}}\" ng-model=\"$parent.info.Value.Link.SelectedProperty\" ng-click=\"SetContentType(1)\"><span><em>{{ item.ItemProperties[0].Value.Text.value }}</em><i class=\"icon\"></i></span></label></li><li class=\"form-check\" ng-show=\"IsSpellVisible\" ng-repeat=\"spell in LinkTileSpells\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newLinkProperties\" value=\"{{spell.SpellProperties[0].Value.Text.value}}\"  ng-model=\"$parent.info.Value.Link.SelectedProperty\"><span><img ng-src=\"{{info.Value.Link.SelectedPropertyValueImage}}\" alt=\"\"><em>{{spell.SpellProperties[0].Value.Text.value}}</em><i class=\"icon\"></i></span></label></li><li class=\"form-check\" ng-show=\"IsAbilityVisible\" ng-repeat=\"ability in LinkTileAbilities\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newLinkProperties\" value=\"{{ability.AbilityProperties[0].Value.Text.value}}\" ng-model=\"$parent.info.Value.Link.SelectedProperty\"><span><img ng-src=\"{{info.Value.Link.SelectedPropertyValueImage}}\" alt=\"\"><em>{{ability.AbilityProperties[0].Value.Text.value}}</em><i class=\"icon\"></i></span></label></li></ul><p style=\"text-align:center;\" ng-show=\"ShowContent\">Content Not Available</p></fieldset></div></div></form>';\r\n\t\tvar templateUrlUse = '<div class=\"NoteTile\" style=\"background-color: {{info.Styles.titlebackgroundcolor}};height: 50px;\"> <span ng-click=\"EditLinkTile()\" style=\"color:{{info.Styles.titletextcolor}};\">{{info.Value.Link.Title}}</span></div><div class=\"text_align\" style=\"text-align:center;width:100%;height:90%;background-size: 100% 100%;background-image: url(&#34;{{info.Value.Link.SelectedPropertyValueImage}}&#34;)\"> </div>';\r\n\r\n        var getTemplate = function (useoredit) {\r\n            var template = '';\r\n\r\n            switch (useoredit) {\r\n                case 1:\r\n                    template = templateUrlEdit;\r\n                    break;\r\n                case 0:\r\n                    template = templateUrlUse;\r\n                    break;\r\n            }\r\n\r\n            return template;\r\n        };\r\n\r\n        var linker = function (scope, element, attrs) {\r\n            var items = angular.copy(scope.info);\r\n\r\n            element.html(getTemplate(scope.useoredit));\r\n\r\n            $compile(element.contents())(scope);\r\n            scope.IsItemVisible = true;\r\n            scope.IsSpellVisible = false;\r\n            scope.IsAbilityVisible = false;\r\n            scope.LinkTileItems = [];\r\n            scope.LinkTileSpells = [];\r\n            scope.LinkTileAbilities = [];\r\n            //if (angular.equals({}, rulesetDataShareService.getRulesetData()) == false) {\r\n            //    scope.ContentfullScope = getRulesetData\r\n            //}\r\n            if (angular.isUndefined(scope.fullscope) == false) {\r\n                if (scope.fullscope.Items != null) {\r\n                    for (var i = 0; i < scope.fullscope.Items.length; i++) {\r\n                        scope.LinkTileItems.push(scope.fullscope.Items[i]);\r\n                    }\r\n                }\r\n                if (scope.fullscope.Spells != null) {\r\n                    for (var i = 0; i < scope.fullscope.Spells.length; i++) {\r\n                        scope.LinkTileSpells.push(scope.fullscope.Spells[i]);\r\n                    }\r\n                }\r\n                if (scope.fullscope.Abilities != null) {\r\n                    for (var i = 0; i < scope.fullscope.Abilities.length; i++) {\r\n                        scope.LinkTileAbilities.push(scope.fullscope.Abilities[i]);\r\n                    }\r\n                }\r\n            }\r\n            //else {\r\n            //    if (scope.ContentfullScope.Items != null) {\r\n            //        for (var i = 0; i < scope.ContentfullScope.Items.length; i++) {\r\n            //            scope.LinkTileItems.push(scope.ContentfullScope.Items[i]);\r\n            //        }\r\n            //    }\r\n            //    if (scope.ContentfullScope.Spells != null) {\r\n            //        for (var i = 0; i < scope.ContentfullScope.Spells.length; i++) {\r\n            //            scope.LinkTileSpells.push(scope.ContentfullScope.Spells[i]);\r\n            //        }\r\n            //    }\r\n            //    if (scope.ContentfullScope.Abilities != null) {\r\n            //        for (var i = 0; i < scope.ContentfullScope.Abilities.length; i++) {\r\n            //            scope.LinkTileAbilities.push(scope.ContentfullScope.Abilities[i]);\r\n            //        }\r\n            //    }\r\n            //}\r\n            //if (items.Mode == \"Edit\") {\r\n                if (items.Value.Link.SelectedPropertyValue == \"Items\") {\r\n                    scope.IsItemVisible = true;\r\n                    scope.IsSpellVisible = false;\r\n                    scope.IsAbilityVisible = false;\r\n                }\r\n                if (items.Value.Link.SelectedPropertyValue == \"Spells\") {\r\n                    scope.IsItemVisible = false;\r\n                    scope.IsSpellVisible = true;\r\n                    scope.IsAbilityVisible = false;\r\n                }\r\n                if (items.Value.Link.SelectedPropertyValue == \"Abilities\") {\r\n                    scope.IsItemVisible = false;\r\n                    scope.IsSpellVisible = false;\r\n                    scope.IsAbilityVisible = true;\r\n                }\r\n            //}\r\n            scope.SetContentType = function (contentType) {\r\n                if (contentType == 1) {\r\n                    scope.info.Value.Link.SelectedPropertyValue = \"Items\";\r\n                } else if (contentType == 2) {\r\n                    scope.info.Value.Link.SelectedPropertyValue = \"Spells\";\r\n                }\r\n                else if (contentType == 3) {\r\n                    scope.info.Value.Link.SelectedPropertyValue = \"Abilities\";\r\n                }\r\n            }\r\n            scope.ShowItemsDropdown = function () {\r\n                scope.IsItemVisible = true;\r\n                scope.IsSpellVisible = false;\r\n                scope.IsAbilityVisible = false;\r\n                if (scope.LinkTileItems.length <= 0)\r\n                {\r\n                    scope.ShowContent = true;\r\n                }\r\n            }\r\n            scope.ShowSpellsDropdown = function () {\r\n                scope.IsItemVisible = false;\r\n                scope.IsSpellVisible = true;\r\n                scope.IsAbilityVisible = false;\r\n                if (scope.LinkTileSpells.length <= 0) {\r\n                    scope.ShowContent = true;\r\n                }\r\n            }\r\n            scope.ShowAbilitiesDropdown = function () {\r\n                scope.IsItemVisible = false;\r\n                scope.IsSpellVisible = false;\r\n                scope.IsAbilityVisible = true;\r\n                if (scope.LinkTileAbilities.length <= 0) {\r\n                    scope.ShowContent = true;\r\n                }\r\n            }\r\n            scope.newstyles = function () {\r\n\r\n                return {\r\n                    'background-size': '100% 100%',\r\n                    'background-repeat': 'no-repeat',\r\n                    'width': '100%',\r\n                    'height': '100%'\r\n                }\r\n\r\n                //return {\r\n                //    'background-color': 'transparent'\r\n                //}\r\n\r\n            };\r\n            //scope.Items = [];\r\n            //scope.spells = [];\r\n            //scope.Abilities = [];\r\n            //for (var i = 0; i < items.LinkTileProperties.Items.length; i++) {\r\n            //    scope.Items.push(items.LinkTileProperties.Items[i].ItemProperties[0].Value.Text.value)\r\n            //}\r\n            //for (var i = 0; i < items.LinkTileProperties.Spells.length; i++) {\r\n            //    scope.spells.push(items.LinkTileProperties.Spells[i].SpellProperties[0].Value.Text.value)\r\n            //}\r\n            //for (var i = 0; i < items.LinkTileProperties.Abilities.length; i++) {\r\n            //    scope.Abilities.push(items.LinkTileProperties.Abilities[i].AbilityProperties[0].Value.Text.value)\r\n            //}\r\n\r\n\r\n            scope.ShowAllContent = function () {\r\n                var IsItem = false; var IsSpell = false; var IsAbility = false;\r\n                if (scope.info.Value.Link.SelectedPropertyValue == \"Items\") {\r\n                    for (var i = 0; i < scope.LinkTileItems.length; i++) {\r\n                        var data = scope.LinkTileItems[i];\r\n                        if (scope.info.Value.Link.SelectedProperty == data.ItemProperties[0].Value.Text.value) {\r\n                            IsItem = true;\r\n                        }\r\n                    }\r\n                }\r\n                else if (scope.info.Value.Link.SelectedPropertyValue == \"Spells\") {\r\n                    for (var i = 0; i < scope.LinkTileSpells.length; i++) {\r\n                        var data = scope.LinkTileSpells[i];\r\n                        if (scope.info.Value.Link.SelectedProperty == data.SpellProperties[0].Value.Text.value) {\r\n                            IsSpell = true;\r\n                        }\r\n                    }\r\n                }\r\n                else if (scope.info.Value.Link.SelectedPropertyValue == \"Abilities\") {\r\n                    for (var i = 0; i < scope.LinkTileAbilities.length; i++) {\r\n                        var data = scope.LinkTileAbilities[i];\r\n                        if (scope.info.Value.Link.SelectedProperty == data.AbilityProperties[0].Value.Text.value) {\r\n                            IsAbility = true;\r\n                        }\r\n                    }\r\n                }\r\n                if (IsItem == true) {\r\n                    var ItemProperties = angular.isUndefined(scope.info.Value.Link.Content) == false ? scope.info.Value.Link.Content : data;\r\n                    var dlg = dialogs.create('/views/dialogs/allitemcontent.html', 'ShowItems',\r\n                        { scope: ItemProperties }\r\n                    );\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            //scope.info = res;\r\n                        }\r\n                    });\r\n                }\r\n                else if (IsSpell == true) {\r\n                    var SpellProperties = angular.isUndefined(scope.info.Value.Link.Content) == false ? scope.info.Value.Link.Content : data;\r\n                    var dlg = dialogs.create('/views/dialogs/allspellcontent.html', 'ShowItems',\r\n                        { scope: SpellProperties }\r\n                    );\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            //scope.info = res;\r\n                        }\r\n                    });\r\n                }\r\n                else if (IsAbility == true) {\r\n                    var AbilityProperties = angular.isUndefined(scope.info.Value.Link.Content) == false ? scope.info.Value.Link.Content : data;\r\n                    var dlg = dialogs.create('/views/dialogs/allabilitycontent.html', 'ShowItems',\r\n                        { scope: AbilityProperties }\r\n                    );\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            //scope.info = res;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            scope.EditLinkTile = function () {\r\n                var dlg = dialogs.create('/views/dialogs/tile-editor-4.html', 'NoteTile',\r\n                    { scope: scope.info, fullscope: scope.fullscope }\r\n                );\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        if (res.Styles != null) {\r\n                            res.Styles.backgroundColor = $(\"#bckcolor\").val();\r\n                        }\r\n                        rulesetDataShareService.setTilelst(res);\r\n                        scope.info = res;\r\n\r\n                    }\r\n                });\r\n            }\r\n            scope.RemoveTile = function () {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Delete',\r\n                    \"Are you sure you want to delete \" + scope.info.Value.Link.Name,\r\n                    { size: 'sm' }\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function (btn) {\r\n                        tileService.deleteTile(scope.info.TileId).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                // scope.info.splice(scope.info.TileId);\r\n                                toaster.pop('success', \"Tile deleted Successfully.\");\r\n\r\n                            }\r\n                            else {\r\n                                if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        alert(data.data.ErrorMessage);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                );\r\n            }\r\n        };\r\n\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            link: linker,\r\n            scope: {\r\n                info: '=',\r\n                useoredit: '=',\r\n                fullscope:'='\r\n            }\r\n        }\r\n\r\n    }]);\r\n\r\n    app.directive('rpgsmithexecutetype', ['$compile', 'dialogs', 'rulesetDataShareService', function ($compile, dialogs, rulesetDataShareService) {\r\n\r\n        var templateUrlEdit = '<form><div class=\"form-row\"><div class=\"col-12 col-md-6\"><fieldset class=\"form-group input-switch input-switch-dual\"><legend></legend><ul class=\"input-switch-items\"><li class=\"form-check\"><label class=\"form-check-label\">Title</label></li><li class=\"form-check\"><input type=\"text\" class=\"form-control col-md-8\" ng-model=\"info.Value.Execute.Title\" value=\"\" /></li></ul></fieldset></div></div><div class=\"form-row\"><div class=\"col\"><!-- Link property switch --><fieldset class=\"form-group input-switch\"><legend>Property*</legend><ul class=\"input-switch-items\"><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newLinkProperty\" ng-click=\"ShowItemsDropdown()\" value=\"Items\" ng-model=\"info.Value.Execute.SelectedPropertyValue\"><span>Items</span></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newLinkProperty\" ng-click=\"ShowSpellsDropdown()\" value=\"Spells\" ng-model=\"info.Value.Execute.SelectedPropertyValue\"><span>Spells</span></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newLinkProperty\" ng-click=\"ShowAbilitiesDropdown()\" value=\"Abilities\" ng-model=\"info.Value.Execute.SelectedPropertyValue\"><span>Abilities</span></label></li></ul></fieldset><fieldset class=\"form-group input-list input-list-wrap properties\"><ul class=\"input-list-items\"><li class=\"form-check\" ng-show=\"IsItemVisible\" ng-repeat=\"item in ExecuteTileItems\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newLinkProperties\" value=\"{{item.ItemProperties[0].Value.Text.value}}\" ng-model=\"$parent.info.Value.Execute.SelectedProperty\" ng-click=\"SetContentType(1)\"><span><em>{{ item.ItemProperties[0].Value.Text.value }}</em><i class=\"icon\"></i></span></label></li><li class=\"form-check\" ng-show=\"IsSpellVisible\" ng-repeat=\"spell in ExecuteTileSpells\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newLinkProperties\" value=\"{{spell.SpellProperties[0].Value.Text.value}}\" ng-model=\"$parent.info.Value.Execute.SelectedProperty\"><span><img ng-src=\"{{info.Value.Link.SelectedPropertyValueImage}}\" alt=\"\"><em>{{ spell.SpellProperties[0].Value.Text.value }}</em><i class=\"icon\"></i></span></label></li><li class=\"form-check\" ng-show=\"IsAbilityVisible\" ng-repeat=\"ability in ExecuteTileAbilities\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newLinkProperties\" value=\"{{ability.AbilityProperties[0].Value.Text.value}}\" ng-model=\"$parent.info.Value.Execute.SelectedProperty\"><span><img ng-src=\"{{info.Value.Link.SelectedPropertyValueImage}}\" alt=\"\"><em>{{ ability.AbilityProperties[0].Value.Text.value }}</em><i class=\"icon\"></i></span></label></li></ul><p style=\"text-align:center;\" ng-show=\"ShowContent\">Content Not Available</p></fieldset></div></div></form>';\r\n\t\tvar templateUrlUse = '<div class=\"NoteTile\" style=\"background-color: {{info.Styles.titlebackgroundcolor}};height: 50px\"><span ng-click=\"EditExecuteTile()\" class=\"text_design\"><p style=\"color:{{info.Styles.titletextcolor}};\">{{info.Value.Execute.Name}}</p></span></div><div class=\"text_align\" style=\"text-align:center\"> <img src=\"{{info.Value.Execute.SelectedPropertyValueImage}}\" ng-style=\"newstyles()\" class=\"img-resposive ng-pristine ng-untouched ng-valid ng-empty\" ng-click=\"ShowAllContent()\"></div>';\r\n\r\n        //var templateUrlEdit = '<div class=\"row label-text-left\"><div class=\"col-md-offset-2 col-md-8\"><div class=\"form-group col-md-12\"><label class=\"control-label col-md-4\">Title</label><div class=\"col-md-8\"><input type=\"text\" class=\"form-control col-md-8\" ng-model=\"info.Value.Execute.Title\" value=\"\" /></div></div><div class=\"form-group col-md-12\"><label class=\"control-label col-md-4\">Select Property</label><div class=\"col-md-8\"><label class=\"radio-inline\"><input type=\"radio\" name=\"item\" ng-model=\"info.Value.Execute.SelectedProperty\" value=\"Items\"  ng-click=\"ShowItemsDropdown()\" />Items</label><label class=\"radio-inline\"><input type=\"radio\" name=\"item\" ng-model=\"info.Value.Execute.SelectedProperty\" value=\"Spells\" ng-click=\"ShowSpellsDropdown()\" />Spells</label><label class=\"radio-inline\"><input type=\"radio\" name=\"item\" ng-model=\"info.Value.Execute.SelectedProperty\" value=\"Abilities\" ng-click=\"ShowAbilitiesDropdown()\" />Abilities</label></div></div>' +\r\n        //    '<div class=\"form-group col-md-12\"><label class=\"control-label col-md-4\">Select Property Value</label><div ng-show=\"IsItemVisible\" class=\"col-md-8\"><select class=\"form-control col-md-8\" ng-options=\"item for item in Items\" ng-model=\"info.Value.Execute.SelectedPropertyValue\"><option value=\"\">--Select Items--</option></select></div><div ng-show=\"IsSpellVisible\" class=\"col-md-8\"><select class=\"form-control col-md-5\" ng-options=\"spell for spell in spells\" ng-model=\"info.Value.Execute.SelectedPropertyValue\"><option value=\"\">--Select Spells--</option></select></div><div ng-show=\"IsAbilityVisible\" class=\"col-md-8\"><select class=\"form-control col-md-5\" ng-options=\"ability for ability in Abilities\" ng-model=\"info.Value.Execute.SelectedPropertyValue\"><option value=\"\">--Select Abilities--</option></select></div></div></div></div></div>';\r\n        //var templateUrlUse = '<div class=\"NoteTile\"> <span ng-click=\"EditExecuteTile()\"><i class=\"fa fa-edit\"></i></span><span class=\"text_design\"><p>{{info.Value.Execute.Title}}</p></span></div><div class=\"text_align\" style=\"text-align:center\"> <img ng-src=\"{{info.Value.Execute.SelectedPropertyValue}}\" ng-style=\"newstyles()\" class=\"img-resposive ng-pristine ng-untouched ng-valid ng-empty\" ng-click=\"ShowAllContent()\"></div>';\r\n\r\n        var getTemplate = function (useoredit) {\r\n            var template = '';\r\n\r\n            switch (useoredit) {\r\n                case 1:\r\n                    template = templateUrlEdit;\r\n                    break;\r\n                case 0:\r\n                    template = templateUrlUse;\r\n                    break;\r\n            }\r\n\r\n            return template;\r\n        };\r\n\r\n        var linker = function (scope, element, attrs) {\r\n            var items = angular.copy(scope.info);\r\n\r\n            element.html(getTemplate(scope.useoredit));\r\n\r\n            $compile(element.contents())(scope);\r\n            scope.IsItemVisible = true;\r\n            scope.IsSpellVisible = false;\r\n            scope.IsAbilityVisible = false;\r\n            scope.ExecuteTileItems = [];\r\n            scope.ExecuteTileSpells = [];\r\n            scope.ExecuteTileAbilities = [];\r\n            // scope.fullscope = rulesetDataShareService.getRulesetData();\r\n            //if (angular.equals({}, rulesetDataShareService.getRulesetData()) == false) {\r\n            //    scope.ContentfullScope = rulesetDataShareService.getRulesetData();\r\n            //}\r\n            if (angular.isUndefined(scope.fullscope) == false) {\r\n                if (scope.fullscope.Items != null) {\r\n                    for (var i = 0; i < scope.fullscope.Items.length; i++) {\r\n                        scope.ExecuteTileItems.push(scope.fullscope.Items[i]);\r\n                    }\r\n                }\r\n                if (scope.fullscope.Spells != null) {\r\n                    for (var i = 0; i < scope.fullscope.Spells.length; i++) {\r\n                        scope.ExecuteTileSpells.push(scope.fullscope.Spells[i]);\r\n                    }\r\n                }\r\n                if (scope.fullscope.Abilities != null) {\r\n                    for (var i = 0; i < scope.fullscope.Abilities.length; i++) {\r\n                        scope.ExecuteTileAbilities.push(scope.fullscope.Abilities[i]);\r\n                    }\r\n                }\r\n            }\r\n            //else {\r\n            //    if (scope.ContentfullScope.Items != null) {\r\n            //        for (var i = 0; i < scope.ContentfullScope.Items.length; i++) {\r\n            //            scope.ExecuteTileItems.push(scope.ContentfullScope.Items[i]);\r\n            //        }\r\n            //    }\r\n            //    if (scope.ContentfullScope.Spells != null) {\r\n            //        for (var i = 0; i < scope.ContentfullScope.Spells.length; i++) {\r\n            //            scope.ExecuteTileSpells.push(scope.ContentfullScope.Spells[i]);\r\n            //        }\r\n            //    }\r\n            //    if (scope.ContentfullScope.Abilities != null) {\r\n            //        for (var i = 0; i < scope.ContentfullScope.Abilities.length; i++) {\r\n            //            scope.ExecuteTileAbilities.push(scope.ContentfullScope.Abilities[i]);\r\n            //        }\r\n            //    }\r\n            //}\r\n            //if (items.Mode == \"Edit\") {\r\n                if (items.Value.Execute.SelectedPropertyValue == \"Items\") {\r\n                    scope.IsItemVisible = true;\r\n                    scope.IsSpellVisible = false;\r\n                    scope.IsAbilityVisible = false;\r\n                }\r\n                if (items.Value.Execute.SelectedPropertyValue == \"Spells\") {\r\n                    scope.IsItemVisible = false;\r\n                    scope.IsSpellVisible = true;\r\n                    scope.IsAbilityVisible = false;\r\n                }\r\n                if (items.Value.Execute.SelectedPropertyValue == \"Abilities\") {\r\n                    scope.IsItemVisible = false;\r\n                    scope.IsSpellVisible = false;\r\n                    scope.IsAbilityVisible = true;\r\n                }\r\n            //}\r\n                scope.ShowItemsDropdown = function () {\r\n                    scope.IsItemVisible = true;\r\n                    scope.IsSpellVisible = false;\r\n                    scope.IsAbilityVisible = false;\r\n                    if (scope.LinkTileItems.length <= 0) {\r\n                        scope.ShowContent = true;\r\n                    }\r\n                }\r\n                scope.ShowSpellsDropdown = function () {\r\n                    scope.IsItemVisible = false;\r\n                    scope.IsSpellVisible = true;\r\n                    scope.IsAbilityVisible = false;\r\n                    if (scope.LinkTileSpells.length <= 0) {\r\n                        scope.ShowContent = true;\r\n                    }\r\n                }\r\n                scope.ShowAbilitiesDropdown = function () {\r\n                    scope.IsItemVisible = false;\r\n                    scope.IsSpellVisible = false;\r\n                    scope.IsAbilityVisible = true;\r\n                    if (scope.LinkTileAbilities.length <= 0) {\r\n                        scope.ShowContent = true;\r\n                    }\r\n                }\r\n            scope.newstyles = function () {\r\n\r\n                return {\r\n                    'background-size': '100% 100%',\r\n                    'background-repeat': 'no-repeat',\r\n                    'width': '120px',\r\n                    'height': '120px'\r\n                }\r\n\r\n                //return {\r\n                //    'background-color': 'transparent'\r\n                //}\r\n\r\n            };\r\n            //scope.Items = [];\r\n            //scope.spells = [];\r\n            //scope.Abilities = [];\r\n            //for (var i = 0; i < items.ExecuteTileProperties.Items.length; i++) {\r\n            //    scope.Items.push(items.ExecuteTileProperties.Items[i].ItemProperties[0].Value.Text.value)\r\n            //}\r\n            //for (var i = 0; i < items.ExecuteTileProperties.Spells.length; i++) {\r\n            //    scope.spells.push(items.ExecuteTileProperties.Spells[i].SpellProperties[0].Value.Text.value)\r\n            //}\r\n            //for (var i = 0; i < items.ExecuteTileProperties.Abilities.length; i++) {\r\n            //    scope.Abilities.push(items.ExecuteTileProperties.Abilities[i].AbilityProperties[0].Value.Text.value)\r\n            //}\r\n            scope.ShowAllContent = function () {\r\n                var IsItem = false; var IsSpell = false; var IsAbility = false;\r\n                if (scope.info.Value.Execute.SelectedPropertyValue == \"Items\") {\r\n                    for (var i = 0; i < scope.ExecuteTileItems.length; i++) {\r\n                        var data = scope.ExecuteTileItems[i];\r\n                        if (scope.info.Value.Execute.SelectedProperty == data.ItemProperties[0].Value.Text.value) {\r\n                            IsItem = true;\r\n                        }\r\n                    }\r\n                }\r\n                else if (scope.info.Value.Execute.SelectedPropertyValue == \"Spells\") {\r\n                    for (var i = 0; i < scope.ExecuteTileSpells.length; i++) {\r\n                        var data = scope.ExecuteTileSpells[i];\r\n                        if (scope.info.Value.Execute.SelectedProperty == data.SpellProperties[0].Value.Text.value) {\r\n                            IsSpell = true;\r\n                        }\r\n                    }\r\n                }\r\n                else if (scope.info.Value.Execute.SelectedPropertyValue == \"Abilities\") {\r\n                    for (var i = 0; i < scope.ExecuteTileAbilities.length; i++) {\r\n                        var data = scope.ExecuteTileAbilities[i];\r\n                        if (scope.info.Value.Execute.SelectedProperty == data.AbilityProperties[0].Value.Text.value) {\r\n                            IsAbility = true;\r\n                        }\r\n                    }\r\n                }\r\n                if (IsItem == true) {\r\n                    var dlg = dialogs.create('/views/dialogs/defaultdiceselection.html', 'dialogDefaultDiceSelect',\r\n                        { scope: scope.info.Value.Execute.Content, mode: 2 }\r\n                    );\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            //scope.info = res;\r\n                        }\r\n                    });\r\n                }\r\n                else if (IsSpell == true) {\r\n                    var dlg = dialogs.create('/views/dialogs/defaultdiceselection.html', 'dialogDefaultDiceSelect',\r\n                        { scope: scope.info.Value.Execute.Content, mode: 2 }\r\n                    );\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            //scope.info = res;\r\n                        }\r\n                    });\r\n                }\r\n                else if (IsAbility == true) {\r\n                    var dlg = dialogs.create('/views/dialogs/defaultdiceselection.html', 'dialogDefaultDiceSelect',\r\n                        { scope: scope.info.Value.Execute.Content, mode: 2 }\r\n                    );\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            //scope.info = res;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            scope.EditExecuteTile = function () {\r\n                //scope.info.Mode = \"Edit\";\r\n                //scope.FullScope = scope.fullscope;\r\n                //scope.info.Value.Execute.SelectedPropertyValue = scope.info.Value.Execute.SelectedPropertyValue;\r\n                var dlg = dialogs.create('/views/dialogs/tile-editor-5.html', 'NoteTile',\r\n                    { scope: scope.info, fullscope: scope.fullscope }\r\n                );\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        if (res.Styles != null) {\r\n                            res.Styles.backgroundColor = $(\"#bckcolor\").val();\r\n                        }\r\n                        rulesetDataShareService.setTilelst(res);\r\n                        scope.info = res;\r\n                    }\r\n                });\r\n            }\r\n            scope.RemoveTile = function () {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Delete',\r\n                    \"Are you sure you want to delete \" + scope.info.Value.Execute.Name,\r\n                    { size: 'sm' }\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function (btn) {\r\n                        tileService.deleteTile(scope.info.TileId).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                // scope.info.splice(scope.info.TileId);\r\n                                toaster.pop('success', \"Tile deleted Successfully.\");\r\n\r\n                            }\r\n                            else {\r\n                                if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        alert(data.data.ErrorMessage);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                );\r\n            }\r\n        };\r\n\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            link: linker,\r\n            scope: {\r\n                info: '=',\r\n                fullscope: '=',\r\n                useoredit: '='\r\n            }\r\n        }\r\n\r\n    }]);\r\n\r\n    app.directive('rpgsmithcommandtype', ['$compile', 'dialogs', 'rulesetDataShareService', function ($compile, dialogs, rulesetDataShareService) {\r\n\t\tvar templateUrlEdit = '<form><div class=\"form-row\"><div class=\"col-12 col-md-6\"><div class=\"form-group\"><label for=\"newCommandTitle\">Title</label><input type=\"text\" id=\"newCommandTitle\" class=\"form-control\" placeholder=\"Enter command title\" ng-model=\"info.Value.Command.Name\"></div><div class=\"form-group\"><label for=\"newCommandCmd\">Command</label><span class=\"input-group-btn\"><button type=\"button\" title=\"Show Dice\" data-toggle=\"tooltip\" class=\"btn icon icon-dice icon-rsi btn-simple-primary\" ng-click=\"defaultDiceSelect()\" ng-model=\"info.Value.Command.command\"/></button></span><input type=\"text\" id=\"newCommandCmd\" ng-model=\"info.Value.Command.command\" class=\"form-control\" placeholder=\"Enter the command\"></div><div class=\"form-group\"><label for=\"colorList\">Color*</label><ul id=\"colorList\" class=\"input-color-items\"><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\" checked=\"checked\"><i class=\"icon input-color-2\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-4\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-6\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-8\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-10\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-12\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><i class=\"icon input-color-custom\" role=\"button\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#colorSelectionPopup\"></i></label></li></ul></div></div><div class=\"col-12 col-md-6\"><div class=\"form-group input-image\"><label for=\"newCommandImage\">Image</label><div class=\"input-image-control-wrapper\"><div class=\"form-group input-image\"><label for=\"newImageFile\"></label><div class=\"input-image-control-wrapper\"><div class=\"input-image-note icon icon-upload\"><span ng-model=\"info.Value.Command.ImagePath\">Click here to upload.</span><small>(320 x 320 px)</small></div><input type=\"file\"  class=\"form-control-file\"  onchange=\"angular.element(this).scope().CommandImageUpload(this)\" accept=\"x-png,gif,jpeg\"></div></div></form>';\r\n\r\n\t\tvar templateUrlUse = '<div class=\"NoteTile\" style=\"background-color: {{info.Styles.titlebackgroundcolor}};height: 50px\"><span ng-click=\"EditCommandTile()\" class=\"text_design\"><p style=\"color:{{info.Styles.titletextcolor}};\">{{info.Value.Command.Name}}</p></span></div><div class=\"text_align\"><img src=\"{{info.Value.Command.ImagePath}}\" ng-style=\"newstyles()\" class=\"img-resposive ng-pristine ng-untouched ng-valid ng-empty\" ng-click=\"CommandRun()\"></div>';\r\n        \r\n        var getTemplate = function (useoredit) {\r\n            var template = '';\r\n\r\n            switch (useoredit) {\r\n                case 1:\r\n                    template = templateUrlEdit;\r\n                    break;\r\n                case 0:\r\n                    template = templateUrlUse;\r\n                    break;\r\n            }\r\n\r\n            return template;\r\n        };\r\n\r\n        var linker = function (scope, element, attrs) {\r\n            var items = angular.copy(scope.info);\r\n\r\n            element.html(getTemplate(scope.useoredit));\r\n\r\n            $compile(element.contents())(scope);\r\n            //scope.ValidateCommand = function ()\r\n            //{\r\n            //    debugger;\r\n            //    var command = scope.info.Value.Command.Command;\r\n            //    if (!dicenotationvalidator(command))\r\n            //    {\r\n            //        toaster.pop('Warning', \"Invalid Command\");\r\n            //    }\r\n\r\n\r\n            //}\r\n            scope.CommandImageUpload = function (input) {\r\n                if (input.files && input.files[0]) {\r\n                    var reader = new FileReader();\r\n                    reader.onload = function (e) {\r\n                        $('#commandImage')\r\n                            .attr(\"Src\", e.target.result)\r\n                            .width(120)\r\n                            .height(120);\r\n                        scope.info.Value.Command.ImagePath = e.target.result;\r\n                    };\r\n\r\n                    reader.readAsDataURL(input.files[0]);\r\n                }\r\n\r\n            }\r\n            scope.defaultDiceSelect = function () {\r\n                var dlg = dialogs.create('/views/dialogs/defaultdiceselection.html', 'dialogDefaultDiceSelect',\r\n                    { \"mode\": 1, scope: scope.info.Value.Command.command }\r\n                );\r\n                dlg.result.then(function (res) {\r\n                    //    scope.dice = res;\r\n                    scope.info.Value.Command.command = res;\r\n                });\r\n            };\r\n            scope.newstyles = function () {\r\n\r\n                return {\r\n                    'background-size': '100% 100%',\r\n                    'background-repeat': 'no-repeat',\r\n                    'width': '120px',\r\n                    'height': '120px'\r\n                }\r\n\r\n                //return {\r\n                //    'background-color': 'transparent'\r\n                //}\r\n\r\n            };\r\n            scope.CommandRun = function () {\r\n                var dlg = dialogs.create('/views/dialogs/defaultdiceselection.html', 'dialogDefaultDiceSelect',\r\n                    { scope: scope.info, mode: 2 }\r\n                );\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        //  scope.info = res;\r\n                    }\r\n                });\r\n\r\n            }\r\n            scope.EditCommandTile = function () {\r\n                var dlg = dialogs.create('/views/dialogs/tile-editor-6.html', 'NoteTile',\r\n                    { scope: scope.info }\r\n                );\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        if (res.Styles != null) {\r\n                            res.Styles.backgroundColor = $(\"#bckcolor\").val();\r\n                        }\r\n                        if (res.Styles != null) {\r\n                            res.Styles.backgroundColor = $(\"#bckcolor\").val();\r\n                        }\r\n                        rulesetDataShareService.setTilelst(res);\r\n                        scope.info = res;\r\n                    }\r\n                });\r\n            }\r\n            scope.RemoveTile = function () {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Delete',\r\n                    \"Are you sure you want to delete \" + scope.info.Value.Command.Name,\r\n                    { size: 'sm' }\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function (btn) {\r\n                        tileService.deleteTile(scope.info.TileId).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                toaster.pop('success', \"Tile deleted Successfully.\");\r\n\r\n                            }\r\n                            else {\r\n                                if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        alert(data.data.ErrorMessage);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                );\r\n            }\r\n        };\r\n\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            link: linker,\r\n            scope: {\r\n                info: '=',\r\n                useoredit: '='\r\n            }\r\n        }\r\n\r\n    }]);\r\n\r\n    app.directive('rpgsmithimagetype', ['$compile', 'dialogs', 'rulesetDataShareService', function ($compile, dialogs, rulesetDataShareService) {\r\n        //var templateUrlEdit = '<form><div class=\"form-row\"><div class=\"col-12 col-md-6\"><div class=\"form-group\"><label for=\"newImageTitle\">Title</label><input type=\"text\" id=\"newImageTitle\" class=\"form-control\" placeholder=\"Enter image title\" ng-model=\"info.Value.Imagetile.Name\"></div><div class=\"form-group\"><label for=\"newImageDescription\">Description</label><input type=\"text\" id=\"newImageDescription\" class=\"form-control\" placeholder=\"Enter image description\"></div></div><div class=\"col-12 col-md-6\"><div class=\"form-group input-image\"><label for=\"newCommandImage\">Image</label><div class=\"input-image-control-wrapper\"><div class=\"form-group input-image\"><label for=\"newImageFile\"></label><div class=\"input-image-control-wrapper\"><div class=\"input-image-note icon icon-upload\"><span ng-model=\"info.Value.Imagetile.Imagepath\">Click here to upload.</span><small>(320 x 320 px)</small></div><input type=\"file\"  class=\"form-control-file\"  onchange=\"angular.element(this).scope().CommandImageUpload(this)\" accept=\"x-png,gif,jpeg\"></div></div></form>'\r\n\t\tvar templateUrlEdit = '<form><div class=\"form-row\"><div class=\"col-12 col-md-6\"><div class=\"form-group\"><label for=\"newImageTitle\">Title</label><input type=\"text\" id=\"newImageTitle\" class=\"form-control\" placeholder=\"Enter image title\" ng-model=\"info.Value.Imagetile.Name\"></div><div class=\"form-group\"><label for=\"newImageDescription\">Description</label><textarea class=\"form-control\" rows=\"10\" ng-model = \"info.Value.Imagetile.Description\" id=\"newImageDescription\" class=\"form-control\" placeholder=\"Enter image description\"></textarea></div><div class=\"form-group\"><label for=\"colorList\">Color*</label><ul id=\"colorList\" class=\"input-color-items\"><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\" checked=\"checked\"><i class=\"icon input-color-2\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-4\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-6\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-8\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-10\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" name=\"newNoteTileColor\"><i class=\"icon input-color-12\"></i></label></li><li class=\"form-check\"><label class=\"form-check-label\"><i class=\"icon input-color-custom\" role=\"button\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#colorSelectionPopup\"></i></label></li></ul></div></div><div class=\"col-12 col-md-6\"><div class=\"form-group input-image\"><label for=\"newCommandImage\">Image</label><div class=\"input-image-control-wrapper\"><div class=\"form-group input-image\"><label for=\"newImageFile\"></label><div class=\"input-image-control-wrapper\"><div class=\"input-image-note icon icon-upload\"><span ng-model=\"info.Value.Imagetile.Imagepath\">Click here to upload.</span><small>(320 x 320 px)</small></div><input type=\"file\"  class=\"form-control-file\"  onchange=\"angular.element(this).scope().CommandImageUpload(this)\" accept=\"x-png,gif,jpeg\"></div></div></form>'\r\n\t\tvar templateUrlUse = '<div class=\"NoteTile\" style=\"background-color: {{info.Styles.titlebackgroundcolor}}height: 50px;\"><span ng-click=\"EditImageTile()\" class=\"text_design\"><p style=\"color:{{info.Styles.titletextcolor}};\">{{info.Value.Imagetile.Name}}</p></span></div><div class=\"text_align\"><img ng-src=\"{{info.Value.Imagetile.Imagepath}}\" class=\"img-resposive img_center\" width=\"120\" height=\"120\" ng-click=\"showImage()\" /></div>';\r\n\r\n        var getTemplate = function (useoredit) {\r\n            var template = '';\r\n\r\n            switch (useoredit) {\r\n                case 1:\r\n                    template = templateUrlEdit;\r\n                    break;\r\n                case 0:\r\n                    template = templateUrlUse;\r\n                    break;\r\n            }\r\n\r\n            return template;\r\n        };\r\n\r\n        var linker = function (scope, element, attrs) {\r\n            var items = angular.copy(scope.info);\r\n\r\n            element.html(getTemplate(scope.useoredit));\r\n\r\n            $compile(element.contents())(scope);\r\n            scope.getThumbNail = function () {\r\n                if (scope.file)\r\n                    return $scope.file;\r\n\r\n                var c = scope.item;\r\n                if (c.id && c.portrait)\r\n                    return '/characterdata/' + c.id + '/' + c.portrait;\r\n\r\n                return null;\r\n            }\r\n            scope.CommandImageUpload = function (input) {\r\n                if (input.files && input.files[0]) {\r\n                    var reader = new FileReader();\r\n                    reader.onload = function (e) {\r\n                        $('#commandImage')\r\n                            .attr(\"Src\", e.target.result)\r\n                            .width(120)\r\n                            .height(120);\r\n                        scope.info.Value.Imagetile.Imagepath = e.target.result;\r\n                    };\r\n\r\n                    reader.readAsDataURL(input.files[0]);\r\n                }\r\n\r\n            }\r\n            scope.showImage = function () {\r\n                var dlg = dialogs.create('/views/dialogs/Imagetilecontent.html', 'ShowAllTileContent',\r\n                    { scope: scope.info }\r\n                );\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        scope.info = res;\r\n                    }\r\n                });\r\n            }\r\n            scope.EditImageTile = function () {\r\n                var dlg = dialogs.create('/views/dialogs/tile-editor-7.html', 'NoteTile',\r\n                    { scope: scope.info, Tablist: scope.fullscope }\r\n                );\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        if (res.Styles != null) {\r\n                            res.Styles.backgroundColor = $(\"#bckcolor\").val();\r\n                        }\r\n                        rulesetDataShareService.setTilelst(res);\r\n                        var index = -1;\r\n                        if (angular.isUndefined(scope.fullscope) == false) {\r\n                            for (var i = 0; i < scope.fullscope.length; i++) {\r\n                                if (scope.fullscope[i].TileId == res.TileId) {\r\n                                    scope.fullscope.splice(i, 1);\r\n                                    scope.fullscope.push(res);\r\n                                }\r\n                            }\r\n                        }\r\n                        scope.info = res;\r\n                    }\r\n                });\r\n            }\r\n            scope.RemoveTile = function () {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Delete',\r\n                    \"Are you sure you want to delete \" + scope.info.Value.Command.Name,\r\n                    { size: 'sm' }\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function (btn) {\r\n                        tileService.deleteTile(scope.info.TileId).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                toaster.pop('success', \"Tile deleted Successfully.\");\r\n\r\n                            }\r\n                            else {\r\n                                if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        alert(data.data.ErrorMessage);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                );\r\n            }\r\n        };\r\n\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            link: linker,\r\n            scope: {\r\n                info: '=',\r\n                fullscope: '=',\r\n                useoredit: '='\r\n            }\r\n        }\r\n\r\n    }]);\r\n\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    ","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-directives');\r\n\r\n    app.directive('pageslideMenu', [function () {\r\n        return {\r\n            restrict: 'E',\r\n            templateUrl: '/views/shared/pageslide-menu.html',\r\n            scope: {\r\n                menuClick: '&?',\r\n                menus: '='\r\n            },\r\n            link: function (scope, element, attrs, controller, ngModel) {\r\n                debugger;\r\n              \r\n                scope.hasMenus = function (menu) {\r\n                    return menu && angular.isArray(menu.menus);\r\n                };\r\n\r\n                scope.onItemClick = function (menu) {\r\n\r\n                    if (menu.disabled)\r\n                        return;\r\n\r\n                    scope.menuClick()(menu);\r\n\r\n                    if (typeof menu.action === 'function') {\r\n                        menu.action(menu);\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }]);\r\n\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-directives');\r\n\r\n    app.directive('rulesetproperty', [function ($compile) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: '/views/shared/rulesetproperty.html',\r\n                scope: {\r\n                    info: '=' \r\n                }\r\n        }\r\n    }]);\r\n\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-directives');\r\n\r\n    app.directive('ngBindHtmlCompile', ['$timeout', '$sce', '$compile', '$interpolate', function($timeout, $sce, $compile, $interpolate) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function(scope, element, attr) {\r\n                scope.$watch($sce.parseAsHtml(attr.ngBindHtmlCompile), function(value) {\r\n                    element.html(value);\r\n                    $compile(element.contents())(scope);\r\n                });\r\n            }\r\n        };\r\n    }]);\r\n\r\n    app.directive('tileRender1', [function () {\r\n        return {\r\n            restrict: 'A',\r\n            controller: 'tileRenderController1',\r\n            templateUrl: '/views/tiles/tile-template-1.html',\r\n            scope: {\r\n                tile: '=tileRender1'\r\n            }\r\n        }\r\n    }]);\r\n\r\n    app.directive('tileRender2', [function () {\r\n        return {\r\n            restrict: 'A',\r\n            controller: 'tileRenderController2',\r\n            templateUrl: '/views/tiles/tile-template-2.html',\r\n            scope: {\r\n                tile: '=tileRender2'\r\n            }\r\n        }\r\n    }]);\r\n\r\n    app.directive('tileRender3', [function () {\r\n        return {\r\n            restrict: 'A',\r\n            controller: 'tileRenderController3',\r\n            templateUrl: '/views/tiles/tile-template-3.html',\r\n            scope: {\r\n                tile: '=tileRender2'\r\n            }\r\n        }\r\n    }]);\r\n\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-directives');\r\n\r\n\r\n    app.directive('tilePicker', ['$document', '$timeout', '$q',\r\n        function ($document, $timeout, $q) {\r\n            return {\r\n                restrict: 'A',\r\n                scope: {\r\n                    api: '=tilePicker'\r\n                },\r\n                link: function (scope, element, attrs, controller, ngModel) {\r\n\r\n                    var _callback = null;\r\n                    var _bodyClickCount = 0;\r\n\r\n                    function handleKeyDown(e) {\r\n                        var ESC_KEY = 27;\r\n                        var key = e.keyCode || e.which;\r\n                        if (key === ESC_KEY)\r\n                            cleanup();\r\n                    };\r\n\r\n                    function handleBodyClick(e) {\r\n                        cleanup();\r\n                    };\r\n\r\n                    function cleanup() {\r\n                        if (scope.api.selecting) {\r\n\r\n                            _callback = null;\r\n\r\n                            $document.on('keydown', handleKeyDown);\r\n                            $document.on('touchend click', handleBodyClick);\r\n\r\n                            $timeout(function () {\r\n                                scope.api.selecting = false;\r\n                                if (typeof scope.api.onClose === 'function')\r\n                                    scope.api.onClose();\r\n                            });\r\n                        }\r\n                    };\r\n\r\n                    scope.$on('$destroy', function () {\r\n                        cleanup();\r\n                    });\r\n\r\n                    scope.api.selecting = false;\r\n\r\n                    scope.api.beginSelect = function (callback) {\r\n\r\n                        _callback = callback;\r\n\r\n                        $timeout(function () {\r\n\r\n                            if (typeof scope.api.beforeSelect === 'function')\r\n                                scope.api.beforeSelect();\r\n\r\n                            scope.api.selecting = true;\r\n\r\n                            $document.on('keydown', handleKeyDown);\r\n                            $document.on('click', handleBodyClick);\r\n                        });\r\n                    };\r\n\r\n                    scope.api.endSelect = function (data) {\r\n                        if (typeof _callback === 'function')\r\n                            _callback(data);\r\n                        scope.api.selecting = false;\r\n                        if (typeof scope.api.onClose === 'function')\r\n                            scope.api.onClose();\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    ]);\r\n\r\n})();","(function(r) {\r\n    'use strict';\r\n\r\n    var module = angular.module('rpgsmith-filters');\r\n\r\n    module.filter('counter', ['$sce', 'dataContext', function($sce, dataContext) {\r\n\r\n        var filter = function(key) {\r\n\r\n            var counter = (dataContext.character.counters || []).find(function(c) { return key === c.name });\r\n            if (counter)\r\n                return counter.displayValue;\r\n            return '';\r\n        }\r\n\r\n        filter.$stateful = true;\r\n        return filter;\r\n\r\n    }]);\r\n\r\n    module.filter('corestat', ['$sce', 'dataContext', function ($sce, dataContext) {\r\n\r\n        var filter = function (key) {\r\n\r\n            var counter = (dataContext.character.coreStats || []).find(function (c) { return key === c.code });\r\n            if (counter)\r\n                return counter.name;\r\n            return '';\r\n        }\r\n\r\n        filter.$stateful = true;\r\n        return filter;\r\n\r\n    }]);\r\n\r\n})();\r\n","(function (r) {\r\n    'use strict';\r\n\r\n    var module = angular.module('rpgsmith-services');\r\n\r\n    module.factory('characterCoreStatFactory', ['dataContext', function (dataContext) {\r\n\r\n        var CoreStat = function CoreStat() {\r\n        };\r\n        \r\n        CoreStat.prototype.onPropertyChanged = function (args) {\r\n            //if (args.propertyName === 'value' || args.propertyName === 'mask')\r\n            //    this.displayValue = formatValue(this.mask, this.value);\r\n        };\r\n\r\n        //CoreStat.prototype.formatValue = function(mask, value) {\r\n        //    return formatValue(mask, value);\r\n        //};\r\n\r\n        CoreStat.typeInitializer = function (tile) {\r\n            //tile.displayValue = formatValue(tile.mask, tile.value);\r\n        };\r\n\r\n        var service = {\r\n            CoreStat: CoreStat\r\n        };\r\n\r\n        return service;\r\n\r\n    }]);\r\n\r\n})();\r\n","(function (r) {\r\n    'use strict';\r\n\r\n    var module = angular.module('rpgsmith-services');\r\n\r\n    module.factory('counterFactory', ['dataContext', function (dataContext) {\r\n\r\n        var Counter = function Counter() {\r\n        };\r\n\r\n        var formatValue = function(mask, value) {\r\n            return format(mask, value);\r\n        };\r\n\r\n        var updateValue = function (counter, value) {\r\n\r\n            if (counter.min != null && value < counter.min)\r\n                value = counter.min;\r\n            if (counter.max != null && value > counter.max)\r\n                value = counter.max;\r\n\r\n            if (value !== counter.value) {\r\n                counter.value = value;\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        Counter.prototype.onPropertyChanged = function (args) {\r\n            if (args.propertyName === 'value' || args.propertyName === 'mask')\r\n                this.displayValue = formatValue(this.mask, this.value);\r\n        };\r\n\r\n        Counter.prototype.increment = function () {\r\n            return updateValue(this, this.value + this.step);\r\n        };\r\n\r\n        Counter.prototype.decrement = function () {\r\n            return updateValue(this, this.value - this.step);\r\n        };\r\n\r\n        Counter.prototype.reset = function () {\r\n            return updateValue(this, this.defaultValue || 0);\r\n        };\r\n\r\n        Counter.prototype.formatValue = function(mask, value) {\r\n            return formatValue(mask, value);\r\n        };\r\n\r\n        Counter.typeInitializer = function (tile) {\r\n            tile.displayValue = formatValue(tile.mask, tile.value);\r\n        };\r\n\r\n        var service = {\r\n            Counter: Counter\r\n        };\r\n\r\n        return service;\r\n\r\n    }]);\r\n\r\n})();\r\n","(function(r) {\r\n    'use strict';\r\n\r\n    var tileTypes = window.rpgsmith.tileTypes;\r\n    var module = angular.module('rpgsmith-services');\r\n\r\n    module.factory('tileFactory', ['dataContext', function(dataContext) {\r\n        \r\n        var Tile = function Tile() {\r\n\r\n            function trimProblems(obj) {\r\n                for (var p in obj) {\r\n                    if (obj.hasOwnProperty(p)) {\r\n                        var v = obj[p];\r\n                        if (rpgsmith.isEmpty(v) || v === 'inherit' || v === 'initial' || v === 'transparent')\r\n                            delete obj[p];\r\n                    }\r\n                }\r\n                return obj;\r\n            }\r\n\r\n            this.parseStyle = function() {\r\n\r\n                if (this.__styleComputed === null) {\r\n\r\n                    var tmp = angular.fromJson(this.style) || {};\r\n\r\n                    tmp = angular.extend({\r\n                        'tile': { 'classes': null, 'styles': {} },\r\n                        'content': { 'classes': null, 'styles': {} }\r\n                    }, tmp);\r\n\r\n                    trimProblems(tmp.tile.styles);\r\n                    trimProblems(tmp.content.styles);\r\n\r\n                    this.__styleComputed = tmp;\r\n                }\r\n\r\n                return this.__styleComputed;\r\n            };\r\n\r\n            this.updateStyle = function(value) {\r\n\r\n                trimProblems(value.tile.styles);\r\n                trimProblems(value.content.styles);\r\n\r\n                this.__styleComputed = value;\r\n                this.style = value && Object.keys(value).length ? angular.toJson(value) : null;\r\n            };\r\n\r\n        };\r\n\r\n        var getEntity = function (tile) {\r\n\r\n            if (dataContext.character) {\r\n                switch (tile.typeId) {\r\n                    case tileTypes.note.id:\r\n                        return dataContext.character.notes.find(function (c) { return c.id === tile.entityId });\r\n                    case tileTypes.counter.id:\r\n                        return dataContext.character.counters.find(function (c) { return c.id === tile.entityId });\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        Tile.typeInitializer = function (tile) {\r\n            tile.__entity = null;\r\n            tile.__styleComputed = null;\r\n            tile.__randomShake = 'disable-rpgsmith-shake-' + Math.randomInteger(1, 10);\r\n        };\r\n\r\n        Tile.prototype.onPropertyChanged = function (args) {\r\n            if (args.propertyName === 'entityId' || args.propertyName === 'typeId')\r\n                this.__entity = getEntity(this);\r\n        };\r\n\r\n        Object.defineProperty(Tile.prototype, 'entity', {\r\n            enumerable: false,\r\n            configurable: false,\r\n            get: function() {\r\n                if (this.__entity == null)\r\n                    this.__entity = getEntity(this);\r\n                return this.__entity;\r\n            }\r\n        });\r\n\r\n        var service = {\r\n            Tile: Tile\r\n        };\r\n\r\n        return service;\r\n\r\n    }]);\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var module = angular.module('rpgsmith-services');\r\n\r\n    module.factory('authInterceptor', ['$rootScope', function ($rootScope) {\r\n        var service = {};\r\n\r\n        service.responseError = function (response) {\r\n            if (response.status === 401)\r\n                $rootScope.$broadcast('httpUnauthorized');\r\n            return response;\r\n        };\r\n\r\n        return service;\r\n    }]);\r\n\r\n    module.factory('authService', ['$http', '$q', '$state', '$localStorage',\r\n        function ($http, $q, $state, $localStorage) {\r\n\r\n\r\n            var authentication =\r\n                {\r\n                authenticated: false\r\n                };\r\n\r\n            var resetAuthentication = function ()\r\n            {\r\n                delete $localStorage.authorizationData;\r\n                authentication.authenticated = false;\r\n                authentication.username = null;\r\n            }\r\n            var service = {};\r\n            service.authentication = authentication;\r\n            service.init = function ()\r\n            {\r\n                var data = $localStorage.authorizationData;\r\n                if (data)\r\n                {\r\n                    authentication.authenticated = true;\r\n                }\r\n            }\r\n            service.ExternalGoogle = function ()\r\n            {\r\n                var data =\r\n                    {\r\n                    provider: 'Google',\r\n                    returnUrl: null\r\n                };\r\n                $http\r\n                    .post('/api/Account/ExternalLogin', data)\r\n                    .then(\r\n                    function (result) {\r\n                        window.location.href = result.data;\r\n                    },\r\n                    function (err, status) {\r\n                        resetAuthentication();\r\n                        deferred.reject(err);\r\n                    });\r\n\r\n            }\r\n            service.GetServiceUrl = function ()\r\n            {\r\n                var LocationUrl = '';\r\n                $http\r\n                    .get('http://localhost:61492/api/Account/ExternalLogins?returnUrl=%2F&generateState=true')\r\n                    .then(\r\n                    function (result) {\r\n                        LocationUrl = result.ExternalLoginViewModel.Url;\r\n                        return LocationUrl;\r\n                    });\r\n\r\n\r\n                $http({\r\n                    url: \"http://localhost:61492/api/Account/ExternalLogins?returnUrl=%2F&generateState=true\",\r\n                    method: \"GET\",\r\n                    contentType: \"application/xml\",\r\n                }).then(function (response, status) {\r\n                    var result123 = response;\r\n                });\r\n\r\n\r\n                $(document).ready(function () {\r\n\r\n                    $.ajax({\r\n                        type: \"GET\",\r\n                        url: \"http://localhost:61492/api/Account/ExternalLogins?returnUrl=%2F&generateState=true\",\r\n                        dataType: \"xml\",\r\n                        success: function (xml) {\r\n                            var data123 = xml;\r\n                        },\r\n                        error: function (err) {\r\n                            alert(\"An error occurred while processing XML file.\");\r\n                        }\r\n                    });\r\n                });\r\n\r\n            }\r\n\r\n            service.logout = function () {\r\n                return $http.post(\"/api/Account/LogOff\");\r\n\r\n            }\r\n\r\n            service.login = function (username, password, remember)\r\n            {\r\n                var data = {\r\n                    Email: username,\r\n                    Password: password,\r\n                    RememberMe: remember\r\n                };\r\n\r\n                var deferred = $q.defer();\r\n                $http\r\n                    .post('/api/Account/Login', data)\r\n                    .then(\r\n                    function (result) {\r\n\r\n                        resetAuthentication();\r\n\r\n                        $localStorage.authorizationData = {\r\n                        };\r\n\r\n                        authentication.authenticated = true;\r\n                        deferred.resolve(result);\r\n                    },\r\n                    function (err, status) {\r\n                        resetAuthentication();\r\n                        deferred.reject(err);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n\r\n            service.Exlogin = function () {\r\n                var deferred = $q.defer();\r\n                resetAuthentication();\r\n                $localStorage.authorizationData = {\r\n                };\r\n                authentication.authenticated = true;\r\n            };\r\n\r\n\r\n            service.register = function (username, email, password, confirmPassword, profileimage) {\r\n\r\n                var data = {\r\n                    username: username,\r\n                    Email: email,\r\n                    Password: password,\r\n                    ConfirmPassword: confirmPassword,\r\n                    ProfileImage: profileimage\r\n                };\r\n\r\n                var deferred = $q.defer();\r\n\r\n                $http\r\n                    .post('/api/Account/Register', data)\r\n                    .then(\r\n                    function (result) {\r\n\r\n                        resetAuthentication();\r\n\r\n                        $localStorage.authorizationData = {\r\n                        };\r\n\r\n                        authentication.authenticated = true;\r\n                        deferred.resolve(result);\r\n                    },\r\n                    function (err, status) {\r\n                        resetAuthentication();\r\n                        deferred.reject(err);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            }\r\n            service.updateprofile = function (profile) {\r\n                return $http.post(\"/api/Profile/UpdateProfile\", profile);\r\n            }\r\n            service.Resetpassword = function (resetpass) {\r\n                return $http.post(\"/api/Profile/ResetPassword\", resetpass);\r\n            }\r\n            service.ForgotPassword = function (email) {\r\n                var data = {\r\n\t\t\t\t\tEmail: email,\r\n               };\r\n                return $http.post(\"/api/Account/ForgotPassword\", data);\r\n            }\r\n            \r\n\r\n            return service;\r\n\r\n        }]);\r\n\r\n})();","(function () {\r\n\r\n    'use strict';\r\n\r\n    var module = angular.module('rpgsmith-services');\r\n\r\n    module.factory('characterService', ['$http',\r\n\r\n        function ($http) {\r\n\r\n            var _controller = \"/api/Character\";\r\n\r\n            function Service() {\r\n            };\r\n\r\n            var service = new Service();\r\n\r\n            service.GetCharacters = function () {\r\n                return $http.get(_controller + \"/Get\");\r\n            }\r\n            service.GetHeaderContentsCounts = function () {\r\n                return $http.get(_controller + \"/GetHeaderContentsCounts\");\r\n            }\r\n            \r\n            service.saveCharacter = function (character) {\r\n                return $http.post(_controller + \"/Create\", character);\r\n            }\r\n            service.CopyCharacter = function (character) {\r\n                return $http.post(_controller + \"/Copy\", character);\r\n            }\r\n            service.EditCharacter = function (character) {\r\n                return $http.post(_controller + \"/Edit\", character);\r\n            }\r\n            service.Deletecharacter = function (UserID) {\r\n                return $http.post(_controller + \"/DeleteCharacter/?UserID=\" + UserID);\r\n            }\r\n            service.GetCorestats = function (CharacterId) {\r\n                return $http.post(_controller + \"/GetCorestatsByCharacter/?CharacterId=\" + CharacterId);\r\n            }\r\n            service.AddCorestatValues = function (corestatvalues) {\r\n                var _characterViewModel = JSON.stringify(corestatvalues);\r\n                return $http.post(_controller + \"/CreateCorestatsValues\", _characterViewModel);\r\n            }\r\n            service.GetLayouts = function (CharacterId) {\r\n                return $http.get(\"/api/Layout/Get/?CharacterProfileId=\" + CharacterId);\r\n            }\r\n            service.GetNewCharacterInventory = function () {\r\n                return $http.get(_controller + \"/GetNewCharacterInventory\");\r\n            }\r\n            service.CreateCharacterInventoryItems = function (_characterInventoryItems) {\r\n                return $http.post(_controller + \"/CreateCharacterInventoryItems\", _characterInventoryItems);\r\n            }\r\n            service.CreateCharacterInventorySpells = function (_characterInventorySpells) {\r\n                return $http.post(_controller + \"/CreateCharacterInventorySpells\", _characterInventorySpells);\r\n            }\r\n            service.CreateCharacterInventoryAbility = function (_characterInventoryAbility) {\r\n                return $http.post(_controller + \"/CreateCharacterInventoryAbility\", _characterInventoryAbility);\r\n            }\r\n            service.GetCharacterContent = function (CharacterId) {\r\n                return $http.get(_controller + \"/GetCharacterInventoryByCharacterProfileId/?CharacterProfileId=\" + CharacterId);\r\n            }\r\n            service.EditCharacterContent = function (charactercontentvalues) {\r\n                return $http.post(_controller + \"/EditCharacterContentValues\", charactercontentvalues);\r\n            }\r\n            service.CopyCharacterContent = function (_characterContent) {\r\n                return $http.post(_controller + \"/CopyCharacterContentValues\", _characterContent);\r\n            }\r\n            service.DeleteCharacterContent = function (CharacterItemId) {\r\n                return $http.post(_controller + \"/DeleteCharacterContentValues/?CharacterItemId=\" + CharacterItemId);\r\n            }\r\n            service.DeleteCharacterSpellContent = function (CharacterSpellId) {\r\n                return $http.post(_controller + \"/DeleteCharacterSpellContentValues/?CharacterSpellId=\" + CharacterSpellId);\r\n            }\r\n            service.DeleteCharacterAbilityContent = function (CharacterAbilityId) {\r\n                return $http.post(_controller + \"/DeleteCharacterAbilityContentValues/?CharacterAbilityId=\" + CharacterAbilityId);\r\n            }\r\n            service.UpdateItemEquipContent = function (CharacterItemsValues) {\r\n                return $http.post(_controller + \"/UpdateItemEquipContent\", CharacterItemsValues);\r\n            }\r\n            service.UpdateSpellMemorizeContent = function (CharacterSpellValues) {\r\n                return $http.post(_controller + \"/UpdateSpellMemorizeContent\", CharacterSpellValues);\r\n            }\r\n            service.UpdateAbilityEnabledContent = function (_CharacterabilityValues) {\r\n                return $http.post(_controller + \"/UpdateAbilityEnabledContent\", _CharacterabilityValues);\r\n            }\r\n            service.GetCharacterItemContent = function (CharacterId) {\r\n                return $http.get(_controller + \"/GetCharacterItemInventoryByCharacterProfileId/?CharacterProfileId=\" + CharacterId);\r\n            }\r\n            service.GetCharacterSpellContent = function (CharacterId) {\r\n                return $http.get(_controller + \"/GetCharacterSpellInventoryByCharacterProfileId/?CharacterProfileId=\" + CharacterId);\r\n            }\r\n            service.GetCharacterAbilityContent = function (CharacterId) {\r\n                return $http.get(_controller + \"/GetCharacterAbilityInventoryByCharacterProfileId/?CharacterProfileId=\" + CharacterId);\r\n            }\r\n            service.CreateItemInventorytile = function (charactercontentvalues) {\r\n                return $http.post(_controller + \"/CreateCharacterInventoryItemTiles\", charactercontentvalues);\r\n            }\r\n            service.CreateSpellInventorytile = function (charactercontentvalues) {\r\n                return $http.post(_controller + \"/CreateCharacterInventorySpellTiles\", charactercontentvalues);\r\n            }\r\n            service.CreateAbilityInventorytile = function (charactercontentvalues) {\r\n                return $http.post(_controller + \"/CreateCharacterInventoryAbilityTiles\", charactercontentvalues);\r\n            }\r\n\r\n            service.uploadFileToUrl = function(characterProfileId, file, fileName) {\r\n                var fd = new FormData();\r\n                fd.append('filedata', file);\r\n                fd.append('characterProfileId', characterProfileId);\r\n                fd.append('filename', fileName);\r\n\r\n                return $http.post('/api/CharecterRuleSetImportExport/Import', fd, {\r\n                    transformRequest: angular.identity,\r\n                    headers: { 'Content-Type': undefined }\r\n                });\r\n\r\n            }\r\n\r\n\r\n            return service;\r\n        }\r\n    ]);\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var module = angular.module('rpgsmith-services');\r\n    \r\n    module.factory('dataContext', [function () {\r\n\r\n        var service = {\r\n            profile: null,\r\n            character: null,\r\n            layout: null\r\n        };\r\n\r\n        return service;\r\n\r\n    }]);\r\n\r\n})();","(function () {\r\n\r\n    'use strict';\r\n\r\n    var module = angular.module('rpgsmith-services');\r\n\r\n\r\n    //module.factory(\"user\", function () {\r\n    //    return {};\r\n    //});\r\n\r\n    module.factory('rulesetDataShareService', [\r\n        function () {\r\n            var loginData = {}\r\n            var rulesetData = {}\r\n\r\n            var characterlayoutsData = {}\r\n\r\n            var layoutData = {}\r\n\r\n            var layoutItemInventoryData = {}\r\n\r\n            var layoutSpellInventoryData = {}\r\n\r\n            var layoutAbilityInventoryData = {}\r\n                \r\n            var layoutRuleSetItemInventoryData = {}\r\n\r\n            var layoutRuleSetSpellInventoryData = {}\r\n\r\n            var layoutRuleSetAbilityInventoryData = {}\r\n\r\n\r\n            var rulesetItems = {}\r\n            var rulesetSpells = {}\r\n            var rulesetAbilities = {}\r\n            var savedruleset = {}\r\n            var savedcorestat = {}\r\n            var savedlayout = {}\r\n            var newtile = {}\r\n            var layoutRuleSetCorestats = {}\r\n            var characteritems = {}\r\n            var selectedrulesetitems = {}\r\n            var Inventorymetadata = {}\r\n            var ItemProperties = {}\r\n            var TileStyles = {}\r\n            var Tilelst = []\r\n            var Rulesetcontent = {}\r\n            var Rulesetspellcontent = {};\r\n            var ItemInventoryMetadata = {};\r\n            var SpellInventoryMetadata = {};\r\n            var AbilityInventoryMetadata = {};\r\n            var rulesetsdata = {};\r\n            var rpgtypes = {};\r\n            var CharacterRulesetCount = {};\r\n            var ImageDataandName = {};\r\n            var LinkTiledata = {};\r\n            function setloginData(data) {\r\n                loginData = data;\r\n            }\r\n            function getloginData() {\r\n                return loginData;\r\n            }\r\n            function setRulesetData(data)\r\n            {\r\n                rulesetData = data;\r\n            }\r\n            function getRulesetData()\r\n            {\r\n                return rulesetData;\r\n            }\r\n\r\n            function setCharacterLayoutsData(data)\r\n            {\r\n                characterlayoutsData = data;\r\n            }\r\n\r\n            function getCharacterLayoutsData() {\r\n                return characterlayoutsData;\r\n            }\r\n\r\n            function setLayoutData(data) {\r\n                layoutData = data;\r\n            }\r\n\r\n            function getLayoutData() {\r\n                return layoutData;\r\n            }\r\n\r\n            function setLayoutItemInventoryData(data) {\r\n                layoutItemInventoryData = data;\r\n            }\r\n\r\n            function getLayoutItemInventoryData(data) {\r\n                return layoutItemInventoryData;\r\n            }\r\n\r\n            function setLayoutSpellInventoryData(data) {\r\n                layoutSpellInventoryData = data;\r\n            }\r\n\r\n            function getLayoutSpellInventoryData(data) {\r\n                return layoutSpellInventoryData;\r\n            }\r\n\r\n            function setLayoutAbilityInventoryData(data) {\r\n                layoutAbilityInventoryData = data;\r\n            }\r\n\r\n            function getLayoutAbilityInventoryData(data) {\r\n                return layoutAbilityInventoryData;\r\n            }\r\n\r\n            //\r\n\r\n            function setLayoutRulesetItemInventoryData(data) {\r\n                layoutRuleSetItemInventoryData = data;\r\n            }\r\n\r\n            function getLayoutRulesetItemInventoryData(data) {\r\n                return layoutRuleSetItemInventoryData;\r\n            }\r\n\r\n            function setLayoutRulesetSpellInventoryData(data) {\r\n                layoutRuleSetSpellInventoryData = data;\r\n            }\r\n\r\n            function getLayoutRulesetSpellInventoryData(data) {\r\n                return layoutRuleSetSpellInventoryData;\r\n            }\r\n\r\n            function setLayoutRulesetAbilityInventoryData(data) {\r\n                layoutRuleSetAbilityInventoryData = data;\r\n            }\r\n\r\n            function getLayoutRulesetAbilityInventoryData(data) {\r\n                return layoutRuleSetAbilityInventoryData;\r\n            }\r\n            function setLayoutItemInventoryMetaData(data) {\r\n                ItemInventoryMetadata = data;\r\n            }\r\n\r\n            function getLayoutItemInventoryMetaData(data) {\r\n                return ItemInventoryMetadata;\r\n            } \r\n\r\n            function setLayoutSpellInventoryMetaData(data) {\r\n                SpellInventoryMetadata = data;\r\n            }\r\n\r\n            function getLayoutSpellInventoryMetaData(data) {\r\n                return SpellInventoryMetadata;\r\n            }\r\n\r\n            function setLayoutAbilityInventoryMetaData(data) {\r\n                AbilityInventoryMetadata = data;\r\n            }\r\n\r\n            function getLayoutAbilityInventoryMetaData(data) {\r\n                return AbilityInventoryMetadata;\r\n            }\r\n            function setLinkTileData(data) {\r\n                LinkTiledata = data;\r\n            }\r\n\r\n            function getLinkTileData(data) {\r\n                return LinkTiledata;\r\n            }\r\n            function setRulesetsData(data) {\r\n                rulesetsdata = data;\r\n            }\r\n\r\n            function getRulesetsData(data) {\r\n                return rulesetsdata;\r\n            }\r\n            function setRpgtypeData(data) {\r\n                rpgtypes = data;\r\n            }\r\n\r\n            function getRpgtypeData(data) {\r\n                return rpgtypes;\r\n            }\r\n            //\r\n\r\n            function setTilelst(data) {\r\n                Tilelst.push(data);\r\n                localStorage.setItem(\"Tilelst\", JSON.stringify(Tilelst));\r\n            }\r\n\r\n            function getTilelst() {\r\n                return Tilelst;\r\n            }\r\n\r\n            function setTileStyles(data) {\r\n                TileStyles = data;\r\n            }\r\n            function getTileStyles() {\r\n                return TileStyles;\r\n            }\r\n            function setRulesetItems(data) {\r\n                rulesetItems = data;\r\n            }\r\n            function getRulesetItems() {\r\n                return rulesetItems;\r\n            }\r\n            function setRulesetSpells(data) {\r\n                rulesetSpells = data;\r\n            }\r\n            function getRulesetSpells() {\r\n                return rulesetSpells;\r\n            }\r\n            function setRulesetAbilities(data) {\r\n                rulesetAbilities = data;\r\n            }\r\n            function getRulesetAbilities() {\r\n                return rulesetAbilities;\r\n            }\r\n            function setruleset(data) {\r\n                savedruleset = data;\r\n            }\r\n            function getruleset() {\r\n                return savedruleset;\r\n            }\r\n            function setcorestat(data) {\r\n                savedcorestat = data;\r\n            }\r\n            function getcorestat() {\r\n                return savedcorestat;\r\n            }\r\n            function setcorestatvalue(data) {\r\n                layoutRuleSetCorestats = data;\r\n            }\r\n            function getcorestatvalue() {\r\n                return layoutRuleSetCorestats;\r\n            }\r\n\r\n            function setlayoutmetadata(data) {\r\n                savedlayout = data;\r\n            }\r\n            function getlayoutmetadata() {\r\n                return savedlayout;\r\n            }\r\n\r\n            function setnewlayout(data) {\r\n                newtile = data;\r\n            }\r\n            function getnewlayout() {\r\n                return newtile;\r\n            }\r\n            function setcharacterRulesetitems(data) {\r\n                characteritems = data;\r\n            }\r\n            function getcharacterRulesetitems() {\r\n                return characteritems;\r\n            }\r\n            function setSelectedRulesetitems(data) {\r\n                selectedrulesetitems = data;\r\n            }\r\n            function getSelectedRulesetitems() {\r\n                return selectedrulesetitems;\r\n            }\r\n            function setInventory(data) {\r\n                Inventorymetadata = data;\r\n            }\r\n            function getInventory() {\r\n                return Inventorymetadata;\r\n            }\r\n            function setItemProperties(data) {\r\n                ItemProperties = data;\r\n            }\r\n            function getItemProperties() {\r\n                return ItemProperties;\r\n            }\r\n            function setRulesetcontent(data) {\r\n                Rulesetcontent = data;\r\n            }\r\n            function getRulesetcontent() {\r\n                return Rulesetcontent;\r\n            }\r\n            function setRulesetspellcontent(data) {\r\n                Rulesetspellcontent = data;\r\n            }\r\n            function getRulesetspellcontent()\r\n            {\r\n                return Rulesetspellcontent;\r\n            }\r\n            function SetDisplayCharacterRulesetCount(data)\r\n            {\r\n                CharacterRulesetCount = data;\r\n            }\r\n\r\n            function getDisplayCharacterRulesetCount()\r\n            {\r\n                return CharacterRulesetCount;\r\n            }\r\n\r\n            function setImageandName(data)\r\n            {\r\n                ImageDataandName = data; \r\n            }\r\n\r\n            function getImageandName()\r\n            {\r\n                return ImageDataandName;\r\n            }\r\n\r\n            return {\r\n                setRulesetData: setRulesetData,\r\n                getRulesetData: getRulesetData,\r\n\r\n                setLayoutData: setLayoutData,\r\n                getLayoutData: getLayoutData,\r\n                setloginData: setloginData,\r\n                getloginData: getloginData,\r\n                setCharacterLayoutsData: setCharacterLayoutsData,\r\n                getCharacterLayoutsData: getCharacterLayoutsData,\r\n\r\n                setLayoutItemInventoryData: setLayoutItemInventoryData,\r\n                getLayoutItemInventoryData: getLayoutItemInventoryData,\r\n\r\n                setLayoutSpellInventoryData: setLayoutSpellInventoryData,\r\n                getLayoutSpellInventoryData: getLayoutSpellInventoryData,\r\n\r\n                setLayoutAbilityInventoryData: setLayoutAbilityInventoryData,\r\n                getLayoutAbilityInventoryData: getLayoutAbilityInventoryData,\r\n\r\n                setLayoutRulesetItemInventoryData: setLayoutRulesetItemInventoryData,\r\n                getLayoutRulesetItemInventoryData: getLayoutRulesetItemInventoryData,\r\n\r\n                setLayoutRulesetSpellInventoryData: setLayoutRulesetSpellInventoryData,\r\n                getLayoutRulesetSpellInventoryData: getLayoutRulesetSpellInventoryData,\r\n\r\n                setLayoutRulesetAbilityInventoryData: setLayoutRulesetAbilityInventoryData,\r\n                getLayoutRulesetAbilityInventoryData: getLayoutRulesetAbilityInventoryData,\r\n\r\n                setLayoutItemInventoryMetaData: setLayoutItemInventoryMetaData,\r\n                getLayoutItemInventoryMetaData: getLayoutItemInventoryMetaData,\r\n\r\n                setLayoutSpellInventoryMetaData: setLayoutSpellInventoryMetaData,\r\n                getLayoutSpellInventoryMetaData: getLayoutSpellInventoryMetaData,\r\n\r\n                setLayoutAbilityInventoryMetaData: setLayoutAbilityInventoryMetaData,\r\n                getLayoutAbilityInventoryMetaData: getLayoutAbilityInventoryMetaData,\r\n\r\n                setTilelst: setTilelst,\r\n                getTilelst: getTilelst,\r\n                setTileStyles: setTileStyles,\r\n                getTileStyles: getTileStyles,\r\n                setRulesetItems: setRulesetItems,\r\n                getRulesetItems: getRulesetItems,\r\n                setRulesetSpells: setRulesetSpells,\r\n                getRulesetSpells: getRulesetSpells,\r\n                setRulesetAbilities: setRulesetAbilities, \r\n                getRulesetAbilities: getRulesetAbilities,\r\n                setruleset: setruleset,\r\n                getruleset: getruleset,\r\n                setcorestat: setcorestat,\r\n                getcorestat: getcorestat,\r\n                setcorestatvalue: setcorestatvalue,\r\n                getcorestatvalue: getcorestatvalue,\r\n                setlayoutmetadata: setlayoutmetadata,\r\n                getlayoutmetadata: getlayoutmetadata,\r\n                setnewlayout: setnewlayout,\r\n                getnewlayout: getnewlayout,\r\n                setcharacterRulesetitems: setcharacterRulesetitems,\r\n                getcharacterRulesetitems: getcharacterRulesetitems,\r\n                setSelectedRulesetitems: setSelectedRulesetitems,\r\n                getSelectedRulesetitems: getSelectedRulesetitems,\r\n                setInventory: setInventory,\r\n                getInventory: getInventory,\r\n                setItemProperties: setItemProperties,\r\n                getItemProperties: getItemProperties,\r\n                setRulesetcontent: setRulesetcontent,\r\n                getRulesetcontent: getRulesetcontent,\r\n                setRulesetspellcontent: setRulesetspellcontent,\r\n                getRulesetspellcontent: getRulesetspellcontent,\r\n                setLinkTileData: setLinkTileData,\r\n                getLinkTileData: getLinkTileData,\r\n                setRulesetsData: setRulesetsData,\r\n                getRulesetsData: getRulesetsData,\r\n                setRpgtypeData: setRpgtypeData,\r\n                getRpgtypeData: getRpgtypeData,\r\n                SetDisplayCharacterRulesetCount: SetDisplayCharacterRulesetCount,\r\n                getDisplayCharacterRulesetCount: getDisplayCharacterRulesetCount,\r\n                setImageandName: setImageandName,\r\n                getImageandName: getImageandName\r\n            }\r\n          \r\n        }\r\n    ]);\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-services');\r\n\r\n    app.factory('layoutService', ['$http','$rootScope', '$state', '$localStorage', 'authService',\r\n        function ($http,$rootScope, $state, $localStorage, authService) {\r\n\r\n        var navs = {};\r\n        var service = {};\r\n        //var _controller = \"/Layout\";\r\n        var _controller = \"/api/Layout\";\r\n        service.topNav = {};\r\n\r\n        service.create = function (LayoutViewModel) {\r\n            return $http.post(_controller + \"/Create\", LayoutViewModel);\r\n        }\r\n        service.update = function (LayoutViewModel) {\r\n            return $http.post(_controller + \"/Update\", LayoutViewModel);\r\n        }\r\n        service.copyLayout = function (LayoutViewModel) {\r\n            return $http.post(_controller + \"/Copy\", LayoutViewModel);\r\n        }\r\n        \r\n        service.GetNewLayout = function () {\r\n            return $http.get(_controller + \"/GetNewLayout\");\r\n        }\r\n        service.loadLayout = function (ID) {\r\n            var LayoutId = { 'LayoutId': ID };\r\n            return $http.post(_controller + \"/GetLayouByLayoutId\", LayoutId);\r\n        }\r\n        service.GetDice = function (characterId) {\r\n            return $http.get(_controller + \"/GetDiceList/?characterProfileId=\" + characterId);\r\n        }\r\n        service.SaveDice = function (DiceModel) {\r\n            return $http.post(_controller + \"/SaveVirtualDice\", DiceModel);\r\n        }\r\n        service.deleteLayout = function (deleteLayout) {\r\n            //var LayoutId = { 'LayoutId': ID };\r\n            return $http.post(_controller + \"/DeleteLayout\", deleteLayout);\r\n        }\r\n        service.GetDefaultDice = function(characterId) {\r\n            return $http.get(_controller + \"/GetDefaultDiceByCharacter/?CharacterProfileID=\" + characterId);\r\n        }\r\n        service.GetCharacterLayouts = function (CharacterId) {\r\n            return $http.get(\"/api/Layout/Get/?CharacterProfileId=\" + CharacterId);\r\n        }\r\n        //service.InsertNewTab = function (TabViewModel) {\r\n        //    return $http.post('/Tab/MarketExpenseTypeInsert', TabViewModel);\r\n        //}\r\n\r\n        return service;\r\n    }]);    \r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-services');\r\n\r\n    app.factory('navService', ['$rootScope', '$state', '$localStorage', 'authService', 'rulesetDataShareService',\r\n        function ($rootScope, $state, $localStorage, authService, rulesetDataShareService) {\r\n\r\n        var navs = {};\r\n        var service = {};\r\n\r\n        service.topNav = {};\r\n\r\n        var getNavKey = function (id) {\r\n            return $state.current.url + '/' + id;\r\n        };\r\n\r\n        service.setLastCharacterId = function (characterId) {\r\n            $localStorage.lastCharacterId = characterId;\r\n        };\r\n\r\n        service.setLastLayoutId = function (characterId, layoutId) {\r\n\r\n            var layoutsAll = $localStorage.lastLayouts || {};\r\n            var layouts = layoutsAll[characterId] || [];\r\n\r\n            var layout = layouts.find(function (c) { return c.layoutId === layoutId });\r\n            if (layout) {\r\n                layout.dt = Date.now();\r\n            }\r\n            else {\r\n                layouts.push({\r\n                    layoutId: layoutId,\r\n                    pageId: null\r\n                });\r\n            }\r\n\r\n            layoutsAll[characterId] = layouts;\r\n            $localStorage.lastLayouts = layoutsAll;\r\n        };\r\n\r\n        service.setLastTabId = function (characterId, layoutId, pageId) {\r\n\r\n            var layoutsAll = $localStorage.lastLayouts || {};\r\n            var layouts = layoutsAll[characterId] || [];\r\n\r\n            var layout = layouts.find(function (c) { return c.layoutId === layoutId });\r\n\r\n            if (layout) {\r\n                layout.dt = Date.now();\r\n                layout.pageId = pageId;\r\n            }\r\n            else {\r\n                layouts.push({\r\n                    dt: Date.now(),\r\n                    layoutId: layoutId,\r\n                    pageId: pageId\r\n                });\r\n            }\r\n\r\n            layoutsAll[characterId] = layouts;\r\n            $localStorage.lastLayouts = layoutsAll;\r\n        };\r\n\r\n        service.getLastCharacterId = function () {\r\n            return $localStorage.lastCharacterId;\r\n        };\r\n\r\n        service.getLastLayoutId = function (character) {\r\n            var layout = service.getLastLayout(character);\r\n            if (layout)\r\n                return layout.layoutId;\r\n            return null;\r\n        };\r\n\r\n        service.getLastPageId = function (character, layout) {\r\n\r\n            if ($localStorage.lastLayouts) {\r\n\r\n                if (layout.tabs && layout.tabs.length) {\r\n\r\n                    var lastLayouts = ($localStorage.lastLayouts[character.id] || []);\r\n                    var lastLayout = lastLayouts.find(function (c) { return c.layoutId === layout.id });\r\n\r\n                    if (lastLayout) {\r\n                        // Ensure this is a valid id\r\n                        var tab = layout.tabs.find(function (c) { return c.id === lastLayout.pageId; });\r\n                        if (tab)\r\n                            return tab.id;\r\n                    }\r\n\r\n                    // We didn't find any (or any valid), so return the first one\r\n                    return layout.tabs[0].id;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        service.getLastLayout = function (character) {\r\n\r\n            if ($localStorage.lastLayouts) {\r\n\r\n                var lastLayouts = ($localStorage.lastLayouts[character.id] || []);\r\n\r\n                if (lastLayouts.length) {\r\n\r\n                    if (character.layouts && character.layouts.length) {\r\n\r\n                        var sorted = lastLayouts.sort(function (a, b) { return b.dt - a.dt });\r\n                        var found = null;\r\n\r\n                        while (sorted.length) {\r\n\r\n                            var layout = character.layouts.find(function (c) { return c.id === sorted[0].layoutId; });\r\n                            if (layout) {\r\n                                found = sorted[0];\r\n                                break;\r\n                            }\r\n\r\n                            sorted.shift();\r\n                        }\r\n\r\n                        $localStorage.lastLayouts[character.id] = sorted;\r\n                        return found;\r\n\r\n                    }\r\n                    else {\r\n                        // We don't have any layouts, clean house\r\n                        $localStorage.lastLayouts[character.id] = [];\r\n                    }\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n\t\tservice.gotoRegisterSuccess = function (replace) {\r\n\t\t\treturn $state.go('RegisterSuccess',\r\n\t\t\t\tnull,\r\n\t\t\t\t{ location: 'replace' }\r\n\t\t\t);\r\n\t\t};\r\n        service.gotoCharacters = function (replace) {\r\n            return $state.go('profile.characters',\r\n                null,\r\n                { location: 'replace' }\r\n            );\r\n        };\r\n        service.NewRuleSet = function () {\r\n            return $state.go('profile.NewRuleSet',\r\n             \r\n                { location: 'replace' }\r\n            );\r\n        };\r\n        service.ExistingRuleSet = function () {\r\n            return $state.go('profile.ExistingRuleSet',\r\n\r\n                { location: 'replace' }\r\n            );\r\n        };\r\n\r\n        service.gotoLayouts = function (characterId, replace) {\r\n            return $state.go('profile.character.layouts',\r\n                { characterId: characterId },\r\n                { location: 'replace' }\r\n            );\r\n        };\r\n\r\n        service.gotoLayout = function (characterId, layoutId, pageId, replace) {\r\n            return $state.go('profile.character.layout',\r\n                { characterId: characterId, layoutId: layoutId, pageId: pageId },\r\n                { location: 'replace' }\r\n            );\r\n        };\r\n\r\n        service.setHeader = function (value) {\r\n            service.topNav.header = value;\r\n        }\r\n\r\n        service.updateBody = function (nav1, nav2) {\r\n            var add = null, remove = null;\r\n\r\n            if (nav2) {\r\n                add = 'navbar-2';\r\n                remove = 'navbar-1';\r\n            }\r\n            else if (nav1) {\r\n                add = 'navbar-1';\r\n                remove = 'navbar-2';\r\n            }\r\n            else {\r\n                remove = 'navbar-1 navbar2';\r\n            }\r\n\r\n            $rootScope.$emit('rpgsmithSetBodyClass', { add: add, remove: remove });\r\n        }\r\n\r\n        service.logout = function () {\r\n            authService.logout();\r\n        }\r\n        \r\n        service.registerNav = function (id, config) {\r\n            navs[getNavKey(id)] = config;\r\n        };\r\n\r\n        service.hasNav = function (id) {\r\n           return navs.hasOwnProperty(getNavKey(id));\r\n        };\r\n\r\n        service.toggleNav = function (id) {\r\n            var config = navs[getNavKey(id)];\r\n            if (config)\r\n                config.opened = !config.opened;\r\n        };\r\n\r\n        service.getCommonHamburger = function (more) {\r\n            var common = [\r\n                {\r\n                    id: 'nav.profile',\r\n                    name: 'Profile',\r\n                    icon: 'fa-fw fa-user',\r\n                    action: function () {\r\n                        $state.go(\"profile.characters\");\r\n                    }\r\n                },\r\n                {\r\n                    id: 'nav.signout',\r\n                    name: 'Sign out',\r\n                    icon: 'fa-fw fa-sign-out',\r\n                    action: function () {\r\n                        var logout = authService.logout();\r\n                        logout.then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                var savedData = {};\r\n                                var savedspell = {};\r\n                                var savedability = {};\r\n                                var savedcorestat = {};\r\n                                rulesetDataShareService.set(savedData)\r\n                                rulesetDataShareService.setspell(savedspell)\r\n                                rulesetDataShareService.setability(savedability)\r\n                                rulesetDataShareService.setcorestat(savedcorestat)\r\n                                localStorage.clear();\r\n                                $state.go('login');\r\n                            }\r\n                            else {\r\n                                if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        alert(data.data.ErrorMessage);\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                       // service.logout();\r\n                    }\r\n                }\r\n            ];\r\n            return common.concat(more || []);\r\n        }\r\n\r\n        service.getCommonCharacterNav = function (more) {\r\n            var common = [\r\n                {\r\n                    id: 'nav.notes',\r\n                    name: 'Notes',\r\n                    icon: 'fa-fw fa-sticky-note-o',\r\n                    action: function () {\r\n                        $state.go('profile.character.notes', { characterId: $state.params.characterId });\r\n                    }\r\n                },\r\n                {\r\n                    id: 'nav.counters',\r\n                    name: 'Counters',\r\n                    icon: 'fa-fw fa-percent',\r\n                    action: function () {\r\n                        $state.go('profile.character.counters', { characterId: $state.params.characterId });\r\n                    }\r\n                },\r\n                {\r\n                    id: 'nav.attributes',\r\n                    name: 'Core Stats',\r\n                    icon: 'fa-fw fa-user-circle-o',\r\n                    action: function () {\r\n                        $state.go('profile.character.attributes', { characterId: $state.params.characterId });\r\n                    }\r\n                },\r\n                {\r\n                    id: 'nav.links',\r\n                    name: 'Links',\r\n                    icon: 'fa-fw fa-user-circle-o',\r\n                    action: function () {\r\n                        $state.go('profile.character.links', { characterId: $state.params.characterId });\r\n                    }\r\n                },\r\n                {\r\n                    id: 'nav.attributes',\r\n                    name: 'Executes',\r\n                    icon: 'fa-fw fa-user-circle-o',\r\n                    action: function () {\r\n                        $state.go('profile.character.executes', { characterId: $state.params.characterId });\r\n                    }\r\n                },\r\n                {\r\n                    id: 'nav.attributes',\r\n                    name: 'Commands',\r\n                    icon: 'fa-fw fa-user-circle-o',\r\n                    action: function () {\r\n                        $state.go('profile.character.commands', { characterId: $state.params.characterId });\r\n                    }\r\n                },\r\n                {\r\n                    id: 'nav.characters',\r\n                    name: 'Characters',\r\n                    icon: 'fa-fw fa-users',\r\n                    action: function () {\r\n                        $state.go('profile.characters');\r\n                    }\r\n                }\r\n            ];\r\n            return common.concat(more || []);\r\n        };\r\n\r\n        return service;\r\n    }]);    \r\n\r\n})();","(function () {\r\n\r\n    'use strict';\r\n\r\n    var module = angular.module('rpgsmith-services');\r\n\r\n    module.factory('rulesetService', ['$http',\r\n\r\n        function ($http) {\r\n\r\n            var _controller = \"/api/RuleSet\";\r\n\r\n            function Service() {\r\n            };\r\n\r\n            var service = new Service();\r\n\r\n            service.GetRuleSets = function () {\r\n                return $http.get(_controller + \"/Get\");\r\n            }\r\n\r\n            service.GetNewRuleset = function () {\r\n                return $http.get(_controller + \"/GetNewRuleset\");\r\n            }\r\n            service.GetNewRulesetByRuleSetId = function (RuleSetId) {\r\n                var response = $http({\r\n                    method: \"get\",\r\n                    url: _controller + \"/GetRulesetByRuleSetId?RuleSetId=\" + RuleSetId,\r\n                    //params: {\r\n                    //    RuleSetId: JSON.stringify(RuleSetId)\r\n                    //}\r\n                });\r\n                return response;\r\n            }\r\n            service.saveRuleSet = function (ruleset) {\r\n\r\n                var clientImages = [];\r\n\r\n                var _ruleset = angular.copy(ruleset);\r\n\r\n                for (var i = 0; i < _ruleset.Rulesetproperty.length; i++) {\r\n                    var ruleSetProperty = _ruleset.Rulesetproperty[i];\r\n                    if (i == 2 && ruleSetProperty.Value.Image.image != null && ruleSetProperty.Value.Image.image != \"\" && angular.isUndefined(ruleSetProperty.Value.Image.image) == false) {\r\n                        // Split the base64 string in data and contentType\r\n                        var block = ruleSetProperty.Value.Image.image.split(\";\");\r\n                        // Get the content type\r\n                        var contentType = block[0].split(\":\")[1];\r\n                        // get the real base64 content of the file\r\n                        var realData = block[1].split(\",\")[1];\r\n\r\n                        // Convert to blob\r\n                        var blob = b64toBlob(realData, contentType);\r\n                        var splitFileExt = contentType.split('/');\r\n                        var fileExt = splitFileExt[1];\r\n\r\n                        var currentDate = Date.now();\r\n\r\n                        var file = new File([blob], _ruleset.Name + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt, { type: contentType });\r\n                        //ruleSetImage = file;\r\n                        clientImages.push(file);\r\n\r\n                        ruleSetProperty.Value.Image.image = _ruleset.Name + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt;\r\n                        break;\r\n                    }\r\n                }\r\n                for (var i = 0; i < _ruleset.Items.length; i++) {\r\n                    var item = _ruleset.Items[i];\r\n                    for (var j = 0; j < item.ItemProperties.length; j++) {\r\n                        if (j == 1 && item.ItemProperties[j].Value.Image.image != null && item.ItemProperties[j].Value.Image.image != \"\" && angular.isUndefined(item.ItemProperties[j].Value.Image.image) == false) {\r\n                            // Split the base64 string in data and contentType\r\n                            var block = item.ItemProperties[j].Value.Image.image.split(\";\");\r\n                            // Get the content type\r\n                            var contentType = block[0].split(\":\")[1];\r\n                            // get the real base64 content of the file\r\n                            var realData = block[1].split(\",\")[1];\r\n\r\n                            // Convert to blob\r\n                            var blob = b64toBlob(realData, contentType);\r\n                            var splitFileExt = contentType.split('/');\r\n                            var fileExt = splitFileExt[1];\r\n\r\n                            var currentDate = Date.now();\r\n\r\n                            var file = new File([blob], item.ItemProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt);\r\n                            //items.push(file);\r\n                            clientImages.push(file);\r\n\r\n                            item.ItemProperties[j].Value.Image.image = item.ItemProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                for (var i = 0; i < _ruleset.Spells.length; i++) {\r\n                    var spell = _ruleset.Spells[i];\r\n                    for (var j = 0; j < spell.SpellProperties.length; j++) {\r\n                        if (j == 1 && spell.SpellProperties[j].Value.Image.image != null && spell.SpellProperties[j].Value.Image.image != \"\" && angular.isUndefined(spell.SpellProperties[j].Value.Image.image) == false) {\r\n                            // Split the base64 string in data and contentType\r\n                            var block = spell.SpellProperties[j].Value.Image.image.split(\";\");\r\n                            // Get the content type\r\n                            var contentType = block[0].split(\":\")[1];\r\n                            // get the real base64 content of the file\r\n                            var realData = block[1].split(\",\")[1];\r\n\r\n                            // Convert to blob\r\n                            var blob = b64toBlob(realData, contentType);\r\n                            var splitFileExt = contentType.split('/');\r\n                            var fileExt = splitFileExt[1];\r\n\r\n                            var currentDate = Date.now();\r\n\r\n                            var file = new File([blob], spell.SpellProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt);\r\n                            //spells.push(file);\r\n                            clientImages.push(file);\r\n\r\n                            spell.SpellProperties[j].Value.Image.image = spell.SpellProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                for (var i = 0; i < _ruleset.Abilities.length; i++) {\r\n                    var ability = _ruleset.Abilities[i];\r\n                    for (var j = 0; j < ability.AbilityProperties.length; j++) {\r\n                        if (j == 1 && ability.AbilityProperties[j].Value.Image.image != null && ability.AbilityProperties[j].Value.Image.image != \"\" && angular.isUndefined(ability.AbilityProperties[j].Value.Image.image) == false) {\r\n                            // Split the base64 string in data and contentType\r\n                            var block = ability.AbilityProperties[j].Value.Image.image.split(\";\");\r\n                            // Get the content type\r\n                            var contentType = block[0].split(\":\")[1];\r\n                            // get the real base64 content of the file\r\n                            var realData = block[1].split(\",\")[1];\r\n\r\n                            // Convert to blob\r\n                            var blob = b64toBlob(realData, contentType);\r\n                            var splitFileExt = contentType.split('/');\r\n                            var fileExt = splitFileExt[1];\r\n\r\n                            var currentDate = Date.now();\r\n\r\n                            var file = new File([blob], ability.AbilityProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt);\r\n                            //abilities.push(file);\r\n                            clientImages.push(file);\r\n\r\n                            ability.AbilityProperties[j].Value.Image.image = ability.AbilityProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                //var itemfiles = items;\r\n                //var spellfiles = spells;\r\n                //var abilityfiles = abilities;\r\n                var ruleSetImage = angular.isUndefined(ruleSetImage) == false ? ruleSetImage : null;\r\n                return $http({\r\n                    url: _controller + \"/Create\",\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": undefined },\r\n                    transformRequest: function (data) {\r\n                        var formData = new FormData();\r\n                        formData.append(\"ruleSetViewModel\", angular.toJson(data.ruleSetViewModel));\r\n                        for (var i = 0; i < data.clientImages.length; i++) {\r\n                            formData.append(\"clientImages[\" + i + \"]\", data.clientImages[i]);\r\n                        }\r\n                        //for (var i = 0; i < data.itemfiles.length; i++) {\r\n                        //    formData.append(\"itemfiles[\" + i + \"]\", data.itemfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.spellfiles.length; i++) {\r\n                        //    formData.append(\"spellfiles[\" + i + \"]\", data.spellfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.abilityfiles.length; i++) {\r\n                        //    formData.append(\"abilityfiles[\" + i + \"]\", data.abilityfiles[i]);\r\n                        //}\r\n                        //formData.append(\"ruleSetImage\", data.ruleSetImage);\r\n                        return formData;\r\n                    },\r\n                    data: { ruleSetViewModel: _ruleset, clientImages: clientImages }\r\n                })\r\n                // return $http.post(_controller + \"/Create\", _ruleset);\r\n            }\r\n            service.updateRuleSet = function (ruleset) {\r\n\r\n                var clientImages = [];\r\n\r\n                var _ruleset = angular.copy(ruleset);\r\n\r\n                for (var i = 0; i < _ruleset.Rulesetproperty.length; i++) {\r\n                    var ruleSetProperty = _ruleset.Rulesetproperty[i];\r\n                    if (i == 2 && ruleSetProperty.Value.Image.image != null && ruleSetProperty.Value.Image.image != \"\" && angular.isUndefined(ruleSetProperty.Value.Image.image) == false) {\r\n                        // Split the base64 string in data and contentType\r\n                        if (ruleSetProperty.Value.Image.image.includes(\"wwwroot\") == false) {\r\n                            var block = ruleSetProperty.Value.Image.image.split(\";\");\r\n                            // Get the content type\r\n                            var contentType = block[0].split(\":\")[1];\r\n                            // get the real base64 content of the file\r\n                            var realData = block[1].split(\",\")[1];\r\n\r\n                            // Convert to blob\r\n                            var blob = b64toBlob(realData, contentType);\r\n                            var splitFileExt = contentType.split('/');\r\n                            var fileExt = splitFileExt[1];\r\n\r\n                            var currentDate = Date.now();\r\n\r\n                            var file = new File([blob], _ruleset.Name + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt, { type: contentType });\r\n                            //ruleSetImage = file;\r\n                            clientImages.push(file);\r\n\r\n                            ruleSetProperty.Value.Image.image = _ruleset.Name + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt;\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                for (var i = 0; i < _ruleset.Items.length; i++) {\r\n                    var item = _ruleset.Items[i];\r\n                    for (var j = 0; j < item.ItemProperties.length; j++) {\r\n                        if (j == 1 && item.ItemProperties[j].Value.Image.image != null && item.ItemProperties[j].Value.Image.image != \"\" && angular.isUndefined(item.ItemProperties[j].Value.Image.image) == false) {\r\n                            // Split the base64 string in data and contentType\r\n                            if (item.ItemProperties[j].Value.Image.image.includes(\"wwwroot\") == false) {\r\n                                var block = item.ItemProperties[j].Value.Image.image.split(\";\");\r\n                                // Get the content type\r\n                                var contentType = block[0].split(\":\")[1];\r\n                                // get the real base64 content of the file\r\n                                var realData = block[1].split(\",\")[1];\r\n\r\n                                // Convert to blob\r\n                                var blob = b64toBlob(realData, contentType);\r\n                                var splitFileExt = contentType.split('/');\r\n                                var fileExt = splitFileExt[1];\r\n\r\n                                var currentDate = Date.now();\r\n\r\n                                var file = new File([blob], item.ItemProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt);\r\n                                //items.push(file);\r\n                                clientImages.push(file);\r\n\r\n                                item.ItemProperties[j].Value.Image.image = item.ItemProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                for (var i = 0; i < _ruleset.Spells.length; i++) {\r\n                    var spell = _ruleset.Spells[i];\r\n                    for (var j = 0; j < spell.SpellProperties.length; j++) {\r\n                        if (j == 1 && spell.SpellProperties[j].Value.Image.image != null && spell.SpellProperties[j].Value.Image.image != \"\" && angular.isUndefined(spell.SpellProperties[j].Value.Image.image) == false) {\r\n                            if (spell.SpellProperties[j].Value.Image.image.includes(\"wwwroot\") == false) {\r\n                                // Split the base64 string in data and contentType\r\n                                var block = spell.SpellProperties[j].Value.Image.image.split(\";\");\r\n                                // Get the content type\r\n                                var contentType = block[0].split(\":\")[1];\r\n                                // get the real base64 content of the file\r\n                                var realData = block[1].split(\",\")[1];\r\n\r\n                                // Convert to blob\r\n                                var blob = b64toBlob(realData, contentType);\r\n                                var splitFileExt = contentType.split('/');\r\n                                var fileExt = splitFileExt[1];\r\n\r\n                                var currentDate = Date.now();\r\n\r\n                                var file = new File([blob], spell.SpellProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt);\r\n                                //spells.push(file);\r\n                                clientImages.push(file);\r\n\r\n                                spell.SpellProperties[j].Value.Image.image = spell.SpellProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                for (var i = 0; i < _ruleset.Abilities.length; i++) {\r\n                    var ability = _ruleset.Abilities[i];\r\n                    for (var j = 0; j < ability.AbilityProperties.length; j++) {\r\n                        if (j == 1 && ability.AbilityProperties[j].Value.Image.image != null && ability.AbilityProperties[j].Value.Image.image != \"\" && angular.isUndefined(ability.AbilityProperties[j].Value.Image.image) == false) {\r\n                            if (ability.AbilityProperties[j].Value.Image.image.includes(\"wwwroot\") == false) {\r\n                                // Split the base64 string in data and contentType\r\n                                var block = ability.AbilityProperties[j].Value.Image.image.split(\";\");\r\n                                // Get the content type\r\n                                var contentType = block[0].split(\":\")[1];\r\n                                // get the real base64 content of the file\r\n                                var realData = block[1].split(\",\")[1];\r\n\r\n                                // Convert to blob\r\n                                var blob = b64toBlob(realData, contentType);\r\n                                var splitFileExt = contentType.split('/');\r\n                                var fileExt = splitFileExt[1];\r\n\r\n                                var currentDate = Date.now();\r\n\r\n                                var file = new File([blob], ability.AbilityProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt);\r\n                                //abilities.push(file);\r\n                                clientImages.push(file);\r\n\r\n                                ability.AbilityProperties[j].Value.Image.image = ability.AbilityProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                //var itemfiles = items;\r\n                //var spellfiles = spells;\r\n                //var abilityfiles = abilities;\r\n                var ruleSetImage = angular.isUndefined(ruleSetImage) == false ? ruleSetImage : null;\r\n                return $http({\r\n                    url: _controller + \"/Update\",\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": undefined },\r\n                    transformRequest: function (data) {\r\n                        var formData = new FormData();\r\n                        formData.append(\"ruleSetViewModel\", angular.toJson(data.ruleSetViewModel));\r\n                        for (var i = 0; i < data.clientImages.length; i++) {\r\n                            formData.append(\"clientImages[\" + i + \"]\", data.clientImages[i]);\r\n                        }\r\n                        //for (var i = 0; i < data.itemfiles.length; i++) {\r\n                        //    formData.append(\"itemfiles[\" + i + \"]\", data.itemfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.spellfiles.length; i++) {\r\n                        //    formData.append(\"spellfiles[\" + i + \"]\", data.spellfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.abilityfiles.length; i++) {\r\n                        //    formData.append(\"abilityfiles[\" + i + \"]\", data.abilityfiles[i]);\r\n                        //}\r\n                        //formData.append(\"ruleSetImage\", data.ruleSetImage);\r\n                        return formData;\r\n                    },\r\n                    data: { ruleSetViewModel: _ruleset, clientImages: clientImages }\r\n                })\r\n                // return $http.post(_controller + \"/Create\", _ruleset);\r\n            }\r\n            service.copyRuleSet = function (ruleset) {\r\n                var clientImages = [];\r\n\r\n                var _ruleset = angular.copy(ruleset);\r\n\r\n                for (var i = 0; i < _ruleset.Rulesetproperty.length; i++) {\r\n                    var ruleSetProperty = _ruleset.Rulesetproperty[i];\r\n                    if (i == 2 && ruleSetProperty.Value.Image.image != null && ruleSetProperty.Value.Image.image != \"\" && angular.isUndefined(ruleSetProperty.Value.Image.image) == false) {\r\n                        // Split the base64 string in data and contentType\r\n                        if (ruleSetProperty.Value.Image.image.includes(\"wwwroot\") == false) {\r\n                            var block = ruleSetProperty.Value.Image.image.split(\";\");\r\n                            // Get the content type\r\n                            var contentType = block[0].split(\":\")[1];\r\n                            // get the real base64 content of the file\r\n                            var realData = block[1].split(\",\")[1];\r\n\r\n                            // Convert to blob\r\n                            var blob = b64toBlob(realData, contentType);\r\n                            var splitFileExt = contentType.split('/');\r\n                            var fileExt = splitFileExt[1];\r\n\r\n                            var currentDate = Date.now();\r\n\r\n                            var file = new File([blob], _ruleset.Name + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt, { type: contentType });\r\n                            //ruleSetImage = file;\r\n                            clientImages.push(file);\r\n\r\n                            ruleSetProperty.Value.Image.image = _ruleset.Name + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt;\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                for (var i = 0; i < _ruleset.Items.length; i++) {\r\n                    var item = _ruleset.Items[i];\r\n                    for (var j = 0; j < item.ItemProperties.length; j++) {\r\n                        if (j == 1 && item.ItemProperties[j].Value.Image.image != null && item.ItemProperties[j].Value.Image.image != \"\" && angular.isUndefined(item.ItemProperties[j].Value.Image.image) == false) {\r\n                            // Split the base64 string in data and contentType\r\n                            if (item.ItemProperties[j].Value.Image.image.includes(\"wwwroot\") == false) {\r\n                                var block = item.ItemProperties[j].Value.Image.image.split(\";\");\r\n                                // Get the content type\r\n                                var contentType = block[0].split(\":\")[1];\r\n                                // get the real base64 content of the file\r\n                                var realData = block[1].split(\",\")[1];\r\n\r\n                                // Convert to blob\r\n                                var blob = b64toBlob(realData, contentType);\r\n                                var splitFileExt = contentType.split('/');\r\n                                var fileExt = splitFileExt[1];\r\n\r\n                                var currentDate = Date.now();\r\n\r\n                                var file = new File([blob], item.ItemProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt);\r\n                                //items.push(file);\r\n                                clientImages.push(file);\r\n\r\n                                item.ItemProperties[j].Value.Image.image = item.ItemProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                for (var i = 0; i < _ruleset.Spells.length; i++) {\r\n                    var spell = _ruleset.Spells[i];\r\n                    for (var j = 0; j < spell.SpellProperties.length; j++) {\r\n                        if (j == 1 && spell.SpellProperties[j].Value.Image.image != null && spell.SpellProperties[j].Value.Image.image != \"\" && angular.isUndefined(spell.SpellProperties[j].Value.Image.image) == false) {\r\n                            if (spell.SpellProperties[j].Value.Image.image.includes(\"wwwroot\") == false) {\r\n                                // Split the base64 string in data and contentType\r\n                                var block = spell.SpellProperties[j].Value.Image.image.split(\";\");\r\n                                // Get the content type\r\n                                var contentType = block[0].split(\":\")[1];\r\n                                // get the real base64 content of the file\r\n                                var realData = block[1].split(\",\")[1];\r\n\r\n                                // Convert to blob\r\n                                var blob = b64toBlob(realData, contentType);\r\n                                var splitFileExt = contentType.split('/');\r\n                                var fileExt = splitFileExt[1];\r\n\r\n                                var currentDate = Date.now();\r\n\r\n                                var file = new File([blob], spell.SpellProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt);\r\n                                //spells.push(file);\r\n                                clientImages.push(file);\r\n\r\n                                spell.SpellProperties[j].Value.Image.image = spell.SpellProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                for (var i = 0; i < _ruleset.Abilities.length; i++) {\r\n                    var ability = _ruleset.Abilities[i];\r\n                    for (var j = 0; j < ability.AbilityProperties.length; j++) {\r\n                        if (j == 1 && ability.AbilityProperties[j].Value.Image.image != null && ability.AbilityProperties[j].Value.Image.image != \"\" && angular.isUndefined(ability.AbilityProperties[j].Value.Image.image) == false) {\r\n                            if (ability.AbilityProperties[j].Value.Image.image.includes(\"wwwroot\") == false) {\r\n                                // Split the base64 string in data and contentType\r\n                                var block = ability.AbilityProperties[j].Value.Image.image.split(\";\");\r\n                                // Get the content type\r\n                                var contentType = block[0].split(\":\")[1];\r\n                                // get the real base64 content of the file\r\n                                var realData = block[1].split(\",\")[1];\r\n\r\n                                // Convert to blob\r\n                                var blob = b64toBlob(realData, contentType);\r\n                                var splitFileExt = contentType.split('/');\r\n                                var fileExt = splitFileExt[1];\r\n\r\n                                var currentDate = Date.now();\r\n\r\n                                var file = new File([blob], ability.AbilityProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt);\r\n                                //abilities.push(file);\r\n                                clientImages.push(file);\r\n\r\n                                ability.AbilityProperties[j].Value.Image.image = ability.AbilityProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                var ruleSetImage = angular.isUndefined(ruleSetImage) == false ? ruleSetImage : null;\r\n                return $http({\r\n                    url: _controller + \"/Copy\",\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": undefined },\r\n                    transformRequest: function (data) {\r\n                        var formData = new FormData();\r\n                        formData.append(\"ruleSetViewModel\", angular.toJson(data.ruleSetViewModel));\r\n                        for (var i = 0; i < data.clientImages.length; i++) {\r\n                            formData.append(\"clientImages[\" + i + \"]\", data.clientImages[i]);\r\n                        }\r\n                        //for (var i = 0; i < data.itemfiles.length; i++) {\r\n                        //    formData.append(\"itemfiles[\" + i + \"]\", data.itemfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.spellfiles.length; i++) {\r\n                        //    formData.append(\"spellfiles[\" + i + \"]\", data.spellfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.abilityfiles.length; i++) {\r\n                        //    formData.append(\"abilityfiles[\" + i + \"]\", data.abilityfiles[i]);\r\n                        //}\r\n                        //formData.append(\"ruleSetImage\", data.ruleSetImage);\r\n                        return formData;\r\n                    },\r\n                    data: { ruleSetViewModel: _ruleset, clientImages: clientImages }\r\n                })\r\n            }\r\n            //service.GetTypes = function () {\r\n            //    return $http.get(\"/api/RPGSmithType/Get\");\r\n            //}\r\n            service.GetTypes = function () {\r\n                return $http.get(\"/api/RPGSmithType/GetRPGSmithTypeForCoreStat\");\r\n            }\r\n            service.DeleteRuleSet = function (ID) {\r\n                var RuleSetID = { 'RuleSetID': ID };\r\n                //$http.post(_controller + \"/Delete\", RuleSetID).then(function (data, status, headers, config) {\r\n                //    return data;\r\n                //}, function (data, status, headers, config) {\r\n                //    return data;\r\n                //});\r\n                return $http.post(_controller + \"/Delete\", RuleSetID);\r\n            }\r\n            service.GetCoreStatById = function (CoreStatID) {\r\n                var response = $http({\r\n                    method: \"post\",\r\n                    url: _controller + \"/GetCoreStatsByCoreStatId\",\r\n                    params: {\r\n                        CoreStatID: JSON.stringify(CoreStatID)\r\n                    }\r\n                });\r\n                return response;\r\n            }\r\n            //service.DeleteCoreStat = function (ID) {\r\n            //    var CoreStatID = { 'CoreStatID': ID };\r\n            //    return $http.post(_controller + \"/DeleteCoreStat\", CoreStatID);\r\n            //}\r\n            service.GetRuleSetItemsForItemInventory = function (characterId) {\r\n                return $http.post(_controller + \"/GetRuleSetItemsByCharacterProfileId?CharacterProfileId=\" + characterId);\r\n            }\r\n            service.GetRuleSetSpellsForSpellInventory = function (characterId) {\r\n                return $http.post(_controller + \"/GetRuleSetSpellsByCharacterProfileId?CharacterProfileId=\" + characterId);\r\n            }\r\n            service.GetRuleSetAbilitiesForAbilityInventory = function (characterId) {\r\n                return $http.post(_controller + \"/GetRuleSetAbilitiesByCharacterProfileId?CharacterProfileId=\" + characterId);\r\n            }\r\n            //service.GetCorestats = function () {\r\n            //    return $http.get(_controller + \"/GetAllCorestats\");\r\n            //}\r\n\r\n\r\n            service.GetRuleSetForLinkTile = function (characterId) {\r\n                return $http.post(_controller + \"/GetRuleSetByCharacterProfileId?CharacterProfileId=\" + characterId);\r\n            }\r\n            service.ExportRuleset = function (rulesetId) {\r\n                location.href = \"/api/RuleSetImportExport/Export?RuleSetID=\" + rulesetId;\r\n            }\r\n\r\n\r\n            var b64toBlob = function (b64Data, contentType, sliceSize) {\r\n                contentType = contentType || '';\r\n                sliceSize = sliceSize || 512;\r\n\r\n                var byteCharacters = atob(b64Data);\r\n                var byteArrays = [];\r\n\r\n                for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n                    var slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n                    var byteNumbers = new Array(slice.length);\r\n                    for (var i = 0; i < slice.length; i++) {\r\n                        byteNumbers[i] = slice.charCodeAt(i);\r\n                    }\r\n\r\n                    var byteArray = new Uint8Array(byteNumbers);\r\n\r\n                    byteArrays.push(byteArray);\r\n                }\r\n\r\n                var blob = new Blob(byteArrays, { type: contentType });\r\n                return blob;\r\n            };\r\n\r\n\r\n            service.uploadFileToUrl = function (RuleSetId, file, fileName, RuleSetName) {\r\n                var fd = new FormData();\r\n                fd.append('filedata', file);\r\n                fd.append('rulesetId', RuleSetId);\r\n                fd.append('filename', fileName);\r\n                fd.append('RuleSetName', RuleSetName);\r\n\r\n                return $http.post('/api/RuleSetImportExport/Import', fd, {\r\n                    transformRequest: angular.identity,\r\n                    headers: { 'Content-Type': undefined }\r\n                });\r\n                //.then(function (data) {\r\n                //    if (data.data.StatusCode == 200) {\r\n\r\n                //    }\r\n                //    else if (data.data.StatusCode == 400) {\r\n\r\n                //    }\r\n                //});\r\n            }\r\n\r\n            //For New Design\r\n\r\n\r\n            service.GetAllRuleSets = function () {\r\n                return $http.get(_controller + \"/GetRulesetsByUserId\");\r\n            }\r\n            service.CopyRulesetByRulesetId = function (RulesetId, Name) {\r\n                return $http.post(_controller + \"/CopyRulesetByRulesetId?RulesetId=\" + RulesetId + \"&Name=\" + Name);\r\n            }\r\n            service.GetRuleSetGeneralSettings = function (RulesetId) {\r\n                return $http.post(_controller + \"/GetRulesetGeneralSettingsByRulesetId?RulesetId=\" + RulesetId);\r\n            }\r\n            service.GetGeneralSettingsMetadata = function () {\r\n                return $http.get(_controller + \"/GetGeneralSettingsMetaData\");\r\n            }\r\n            service.CreateGeneralSettings = function (_rulesetProperty) {\r\n                var clientImages = [];\r\n\r\n                var _ruleset = angular.copy(_rulesetProperty);\r\n\r\n                for (var i = 0; i < _rulesetProperty.length; i++) {\r\n                    var ruleSetProperty = _ruleset[i];\r\n                    if (i == 2 && ruleSetProperty.Value.Image.image != null && ruleSetProperty.Value.Image.image != \"\" && angular.isUndefined(ruleSetProperty.Value.Image.image) == false) {\r\n                        // Split the base64 string in data and contentType\r\n                        var block = ruleSetProperty.Value.Image.image.split(\";\");\r\n                        // Get the content type\r\n                        var contentType = block[0].split(\":\")[1];\r\n                        // get the real base64 content of the file\r\n                        var realData = block[1].split(\",\")[1];\r\n\r\n                        // Convert to blob\r\n                        var blob = b64toBlob(realData, contentType);\r\n                        var splitFileExt = contentType.split('/');\r\n                        var fileExt = splitFileExt[1];\r\n\r\n                        var currentDate = Date.now();\r\n\r\n                        var file = new File([blob], _ruleset[0].RulesetName + \"~\" + currentDate + \".\" + fileExt, { type: contentType });\r\n                        //ruleSetImage = file;\r\n                        clientImages.push(file);\r\n\r\n                        ruleSetProperty.Value.Image.image = _ruleset[0].RulesetName + \"~\" + currentDate + \".\" + fileExt;\r\n                        break;\r\n                    }\r\n                }\r\n                var ruleSetImage = angular.isUndefined(ruleSetImage) == false ? ruleSetImage : null;\r\n                return $http({\r\n                    url: _controller + \"/CreateRulesetGeneralSettings\",\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": undefined },\r\n                    transformRequest: function (data) {\r\n                        var formData = new FormData();\r\n                        formData.append(\"_rulesetProperty\", angular.toJson(data._rulesetProperty));\r\n                        for (var i = 0; i < data.clientImages.length; i++) {\r\n                            formData.append(\"clientImages[\" + i + \"]\", data.clientImages[i]);\r\n                        }\r\n                        //for (var i = 0; i < data.itemfiles.length; i++) {\r\n                        //    formData.append(\"itemfiles[\" + i + \"]\", data.itemfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.spellfiles.length; i++) {\r\n                        //    formData.append(\"spellfiles[\" + i + \"]\", data.spellfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.abilityfiles.length; i++) {\r\n                        //    formData.append(\"abilityfiles[\" + i + \"]\", data.abilityfiles[i]);\r\n                        //}\r\n                        //formData.append(\"ruleSetImage\", data.ruleSetImage);\r\n                        return formData;\r\n                    },\r\n                    data: { _rulesetProperty: _ruleset, clientImages: clientImages }\r\n                })\r\n            }\r\n\r\n            service.UpdateGeneralSettings = function (_updateGeneralSettings) {\r\n                var clientImages = [];\r\n\r\n                var _ruleset = angular.copy(_updateGeneralSettings);\r\n\r\n                for (var i = 0; i < _updateGeneralSettings.length; i++) {\r\n                    var ruleSetProperty = _ruleset[i];\r\n                    if (i == 2 && ruleSetProperty.Value.Image.image != null && ruleSetProperty.Value.Image.image != \"\" && angular.isUndefined(ruleSetProperty.Value.Image.image) == false) {\r\n                        // Split the base64 string in data and contentType\r\n                        if (ruleSetProperty.Value.Image.image.includes(\"wwwroot\") == false) {\r\n                            var block = ruleSetProperty.Value.Image.image.split(\";\");\r\n                            // Get the content type\r\n                            var contentType = block[0].split(\":\")[1];\r\n                            // get the real base64 content of the file\r\n                            var realData = block[1].split(\",\")[1];\r\n\r\n                            // Convert to blob\r\n                            var blob = b64toBlob(realData, contentType);\r\n                            var splitFileExt = contentType.split('/');\r\n                            var fileExt = splitFileExt[1];\r\n\r\n                            var currentDate = Date.now();\r\n\r\n                            var file = new File([blob], _ruleset.Name + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt, { type: contentType });\r\n                            //ruleSetImage = file;\r\n                            clientImages.push(file);\r\n\r\n                            ruleSetProperty.Value.Image.image = _ruleset.Name + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt;\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                var ruleSetImage = angular.isUndefined(ruleSetImage) == false ? ruleSetImage : null;\r\n                return $http({\r\n                    url: _controller + \"/UpdateRulesetGeneralSettings\",\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": undefined },\r\n                    transformRequest: function (data) {\r\n                        var formData = new FormData();\r\n                        formData.append(\"_updateGeneralSettings\", angular.toJson(data._updateGeneralSettings));\r\n                        for (var i = 0; i < data.clientImages.length; i++) {\r\n                            formData.append(\"clientImages[\" + i + \"]\", data.clientImages[i]);\r\n                        }\r\n                        //for (var i = 0; i < data.itemfiles.length; i++) {\r\n                        //    formData.append(\"itemfiles[\" + i + \"]\", data.itemfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.spellfiles.length; i++) {\r\n                        //    formData.append(\"spellfiles[\" + i + \"]\", data.spellfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.abilityfiles.length; i++) {\r\n                        //    formData.append(\"abilityfiles[\" + i + \"]\", data.abilityfiles[i]);\r\n                        //}\r\n                        //formData.append(\"ruleSetImage\", data.ruleSetImage);\r\n                        return formData;\r\n                    },\r\n                    data: { _updateGeneralSettings: _ruleset, clientImages: clientImages }\r\n                })\r\n            }\r\n\r\n            service.GetRulesetCorestats = function (RulesetId) {\r\n                return $http.post(_controller + \"/GetCorestatsByRulesetId?RulesetId=\" + RulesetId);\r\n            }\r\n            service.GetCorestatsMetadata = function () {\r\n                return $http.get(_controller + \"/GetCorestatsMetadata\");\r\n            }\r\n\r\n            service.CreateCorestats = function (_rulesetCorestats) {\r\n                return $http.post(_controller + \"/CreateCorestats\", _rulesetCorestats);\r\n            }\r\n            service.UpdateCorestats = function (_updateCorestats) {\r\n                return $http.post(_controller + \"/UpdateCorestats\", _updateCorestats);\r\n            }\r\n\r\n            service.CopyCorestats = function (_copyCorestats) {\r\n                return $http.post(_controller + \"/CopyCorestats\", _copyCorestats);\r\n            }\r\n            service.DeleteCorestats = function (deletecorestats) {\r\n                return $http.post(_controller + \"/DeleteCorestats\", deletecorestats);\r\n            }\r\n            service.GetRulesetItems = function (RUlesetId) {\r\n                //var response = $http({\r\n                //    method: \"get\",\r\n                //    url: _controller + \"/GetRulesetItemsByRulesetId\",\r\n                //    params: {\r\n                //        RulesetId: JSON.stringify(RulesetId)\r\n                //    }\r\n                //});\r\n                //return response;\r\n                return $http.get(_controller + \"/GetRulesetItemsByRulesetId/?RUlesetId=\" + RUlesetId);\r\n            }\r\n            service.GetItemsMetadata = function (RulesetId) {\r\n                var response = $http({\r\n                    method: \"post\",\r\n                    url: _controller + \"/GetRulesetItemsMetadata\",\r\n                    params: {\r\n                        RulesetId: JSON.stringify(RulesetId)\r\n                    }\r\n                });\r\n                return response;\r\n                //return $http.post(_controller + \"/GetRulesetItemsMetadata?RulesetId=\", RulesetId);\r\n            }\r\n            service.CreateItems = function (_rulesetItems) {\r\n                var clientImages = [];\r\n                var _ruleset = angular.copy(_rulesetItems);\r\n                for (var i = 0; i < _rulesetItems.length; i++) {\r\n                    var item = _ruleset[i];\r\n                    for (var j = 0; j < item.ItemProperties.length; j++) {\r\n                        if (j == 1 && item.ItemProperties[j].Value.Image.image != null && item.ItemProperties[j].Value.Image.image != \"\" && angular.isUndefined(item.ItemProperties[j].Value.Image.image) == false) {\r\n                            // Split the base64 string in data and contentType\r\n                            var block = item.ItemProperties[j].Value.Image.image.split(\";\");\r\n                            // Get the content type\r\n                            var contentType = block[0].split(\":\")[1];\r\n                            // get the real base64 content of the file\r\n                            var realData = block[1].split(\",\")[1];\r\n\r\n                            // Convert to blob\r\n                            var blob = b64toBlob(realData, contentType);\r\n                            var splitFileExt = contentType.split('/');\r\n                            var fileExt = splitFileExt[1];\r\n\r\n                            var currentDate = Date.now();\r\n\r\n                            var file = new File([blob], item.ItemProperties[0].Value.Text.value + \"~\" + currentDate + \".\" + fileExt);\r\n                            //items.push(file);\r\n                            clientImages.push(file);\r\n\r\n                            item.ItemProperties[j].Value.Image.image = item.ItemProperties[0].Value.Text.value + \"~\" + currentDate + \".\" + fileExt;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                var ruleSetImage = angular.isUndefined(ruleSetImage) == false ? ruleSetImage : null;\r\n                return $http({\r\n                    url: _controller + \"/CreateRulesetItems\",\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": undefined },\r\n                    transformRequest: function (data) {\r\n                        var formData = new FormData();\r\n                        formData.append(\"_rulesetItems\", angular.toJson(data._rulesetItems));\r\n                        for (var i = 0; i < data.clientImages.length; i++) {\r\n                            formData.append(\"clientImages[\" + i + \"]\", data.clientImages[i]);\r\n                        }\r\n                        //for (var i = 0; i < data.itemfiles.length; i++) {\r\n                        //    formData.append(\"itemfiles[\" + i + \"]\", data.itemfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.spellfiles.length; i++) {\r\n                        //    formData.append(\"spellfiles[\" + i + \"]\", data.spellfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.abilityfiles.length; i++) {\r\n                        //    formData.append(\"abilityfiles[\" + i + \"]\", data.abilityfiles[i]);\r\n                        //}\r\n                        //formData.append(\"ruleSetImage\", data.ruleSetImage);\r\n                        return formData;\r\n                    },\r\n                    data: { _rulesetItems: _ruleset, clientImages: clientImages }\r\n                })\r\n\r\n            }\r\n\r\n            service.UpdateItems = function (_updateItems) {\r\n                var clientImages = [];\r\n                var _ruleset = angular.copy(_updateItems);\r\n                for (var i = 0; i < _updateItems.length; i++) {\r\n                    var item = _ruleset[i];\r\n                    for (var j = 0; j < item.ItemProperties.length; j++) {\r\n                        if (j == 1 && item.ItemProperties[j].Value.Image.image != null && item.ItemProperties[j].Value.Image.image != \"\" && angular.isUndefined(item.ItemProperties[j].Value.Image.image) == false) {\r\n                            // Split the base64 string in data and contentType\r\n                            if (item.ItemProperties[j].Value.Image.image.includes(\"wwwroot\") == false) {\r\n                                var block = item.ItemProperties[j].Value.Image.image.split(\";\");\r\n                                // Get the content type\r\n                                var contentType = block[0].split(\":\")[1];\r\n                                // get the real base64 content of the file\r\n                                var realData = block[1].split(\",\")[1];\r\n\r\n                                // Convert to blob\r\n                                var blob = b64toBlob(realData, contentType);\r\n                                var splitFileExt = contentType.split('/');\r\n                                var fileExt = splitFileExt[1];\r\n\r\n                                var currentDate = Date.now();\r\n\r\n                                var file = new File([blob], item.ItemProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt);\r\n                                //items.push(file);\r\n                                clientImages.push(file);\r\n\r\n                                item.ItemProperties[j].Value.Image.image = item.ItemProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                var ruleSetImage = angular.isUndefined(ruleSetImage) == false ? ruleSetImage : null;\r\n                return $http({\r\n                    url: _controller + \"/UpdateRulesetItems\",\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": undefined },\r\n                    transformRequest: function (data) {\r\n                        var formData = new FormData();\r\n                        formData.append(\"_updateItems\", angular.toJson(data._updateItems));\r\n                        for (var i = 0; i < data.clientImages.length; i++) {\r\n                            formData.append(\"clientImages[\" + i + \"]\", data.clientImages[i]);\r\n                        }\r\n                        //for (var i = 0; i < data.itemfiles.length; i++) {\r\n                        //    formData.append(\"itemfiles[\" + i + \"]\", data.itemfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.spellfiles.length; i++) {\r\n                        //    formData.append(\"spellfiles[\" + i + \"]\", data.spellfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.abilityfiles.length; i++) {\r\n                        //    formData.append(\"abilityfiles[\" + i + \"]\", data.abilityfiles[i]);\r\n                        //}\r\n                        //formData.append(\"ruleSetImage\", data.ruleSetImage);\r\n                        return formData;\r\n                    },\r\n                    data: { _updateItems: _ruleset, clientImages: clientImages }\r\n                })\r\n            }\r\n\r\n            service.CopyItems = function (_copyItems) {\r\n                var clientImages = [];\r\n                var _ruleset = angular.copy(_copyItems);\r\n                for (var i = 0; i < _copyItems.length; i++) {\r\n                    var item = _ruleset[i];\r\n                    for (var j = 0; j < item.ItemProperties.length; j++) {\r\n                        if (j == 1 && item.ItemProperties[j].Value.Image.image != null && item.ItemProperties[j].Value.Image.image != \"\" && angular.isUndefined(item.ItemProperties[j].Value.Image.image) == false) {\r\n                            // Split the base64 string in data and contentType\r\n                            if (item.ItemProperties[j].Value.Image.image.includes(\"wwwroot\") == false) {\r\n                                var block = item.ItemProperties[j].Value.Image.image.split(\";\");\r\n                                // Get the content type\r\n                                var contentType = block[0].split(\":\")[1];\r\n                                // get the real base64 content of the file\r\n                                var realData = block[1].split(\",\")[1];\r\n\r\n                                // Convert to blob\r\n                                var blob = b64toBlob(realData, contentType);\r\n                                var splitFileExt = contentType.split('/');\r\n                                var fileExt = splitFileExt[1];\r\n\r\n                                var currentDate = Date.now();\r\n\r\n                                var file = new File([blob], item.ItemProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt);\r\n                                //items.push(file);\r\n                                clientImages.push(file);\r\n\r\n                                item.ItemProperties[j].Value.Image.image = item.ItemProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                var ruleSetImage = angular.isUndefined(ruleSetImage) == false ? ruleSetImage : null;\r\n                return $http({\r\n                    url: _controller + \"/CopyRulesetItems\",\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": undefined },\r\n                    transformRequest: function (data) {\r\n                        var formData = new FormData();\r\n                        formData.append(\"_copyItems\", angular.toJson(data._copyItems));\r\n                        for (var i = 0; i < data.clientImages.length; i++) {\r\n                            formData.append(\"clientImages[\" + i + \"]\", data.clientImages[i]);\r\n                        }\r\n                        //for (var i = 0; i < data.itemfiles.length; i++) {\r\n                        //    formData.append(\"itemfiles[\" + i + \"]\", data.itemfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.spellfiles.length; i++) {\r\n                        //    formData.append(\"spellfiles[\" + i + \"]\", data.spellfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.abilityfiles.length; i++) {\r\n                        //    formData.append(\"abilityfiles[\" + i + \"]\", data.abilityfiles[i]);\r\n                        //}\r\n                        //formData.append(\"ruleSetImage\", data.ruleSetImage);\r\n                        return formData;\r\n                    },\r\n                    data: { _copyItems: _ruleset, clientImages: clientImages }\r\n                })\r\n            }\r\n            service.DeleteItems = function (deleteitem) {\r\n                return $http.post(_controller + \"/DeleteItem\", deleteitem);\r\n            }\r\n            service.GetRulesetSpells = function (RUlesetId) {\r\n                //var response = $http({\r\n                //    method: \"get\",\r\n                //    url: _controller + \"/GetRulesetItemsByRulesetId\",\r\n                //    params: {\r\n                //        RulesetId: JSON.stringify(RulesetId)\r\n                //    }\r\n                //});\r\n                //return response;\r\n                return $http.get(_controller + \"/GetRulesetSpellsByRulesetId/?RUlesetId=\" + RUlesetId);\r\n            }\r\n\r\n            service.GetSpellsMetadata = function (RulesetId) {\r\n                var response = $http({\r\n                    method: \"post\",\r\n                    url: _controller + \"/GetRulesetSpellsMetadata\",\r\n                    params: {\r\n                        RulesetId: JSON.stringify(RulesetId)\r\n                    }\r\n                });\r\n                return response;\r\n                //return $http.post(_controller + \"/GetRulesetItemsMetadata?RulesetId=\", RulesetId);\r\n            }\r\n\r\n\r\n\r\n            service.CreateSpells = function (_rulesetSpells) {\r\n                var clientImages = [];\r\n                var _ruleset = angular.copy(_rulesetSpells);\r\n                for (var i = 0; i < _rulesetSpells.length; i++) {\r\n                    var spell = _ruleset[i];\r\n                    for (var j = 0; j < spell.SpellProperties.length; j++) {\r\n                        if (j == 1 && spell.SpellProperties[j].Value.Image.image != null && spell.SpellProperties[j].Value.Image.image != \"\" && angular.isUndefined(spell.SpellProperties[j].Value.Image.image) == false) {\r\n                            // Split the base64 string in data and contentType\r\n                            var block = spell.SpellProperties[j].Value.Image.image.split(\";\");\r\n                            // Get the content type\r\n                            var contentType = block[0].split(\":\")[1];\r\n                            // get the real base64 content of the file\r\n                            var realData = block[1].split(\",\")[1];\r\n\r\n                            // Convert to blob\r\n                            var blob = b64toBlob(realData, contentType);\r\n                            var splitFileExt = contentType.split('/');\r\n                            var fileExt = splitFileExt[1];\r\n\r\n                            var currentDate = Date.now();\r\n\r\n                            var file = new File([blob], spell.SpellProperties[0].Value.Text.value + \"~\" + currentDate + \".\" + fileExt);\r\n                            //items.push(file);\r\n                            clientImages.push(file);\r\n\r\n                            spell.SpellProperties[j].Value.Image.image = spell.SpellProperties[0].Value.Text.value + \"~\" + currentDate + \".\" + fileExt;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                var ruleSetImage = angular.isUndefined(ruleSetImage) == false ? ruleSetImage : null;\r\n                return $http({\r\n                    url: _controller + \"/CreateRulesetSpells\",\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": undefined },\r\n                    transformRequest: function (data) {\r\n                        var formData = new FormData();\r\n                        formData.append(\"_rulesetSpells\", angular.toJson(data._rulesetSpells));\r\n                        for (var i = 0; i < data.clientImages.length; i++) {\r\n                            formData.append(\"clientImages[\" + i + \"]\", data.clientImages[i]);\r\n                        }\r\n                        //for (var i = 0; i < data.itemfiles.length; i++) {\r\n                        //    formData.append(\"itemfiles[\" + i + \"]\", data.itemfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.spellfiles.length; i++) {\r\n                        //    formData.append(\"spellfiles[\" + i + \"]\", data.spellfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.abilityfiles.length; i++) {\r\n                        //    formData.append(\"abilityfiles[\" + i + \"]\", data.abilityfiles[i]);\r\n                        //}\r\n                        //formData.append(\"ruleSetImage\", data.ruleSetImage);\r\n                        return formData;\r\n                    },\r\n                    data: { _rulesetSpells: _ruleset, clientImages: clientImages }\r\n                })\r\n\r\n            }\r\n\r\n            service.UpdateSpells = function (_updateSpells) {\r\n                var clientImages = [];\r\n                var _ruleset = angular.copy(_updateSpells);\r\n                for (var i = 0; i < _updateSpells.length; i++) {\r\n                    var spell = _ruleset[i];\r\n                    for (var j = 0; j < spell.SpellProperties.length; j++) {\r\n                        if (j == 1 && spell.SpellProperties[j].Value.Image.image != null && spell.SpellProperties[j].Value.Image.image != \"\" && angular.isUndefined(spell.SpellProperties[j].Value.Image.image) == false) {\r\n                            // Split the base64 string in data and contentType\r\n                            if (spell.SpellProperties[j].Value.Image.image.includes(\"wwwroot\") == false) {\r\n                                var block = spell.SpellProperties[j].Value.Image.image.split(\";\");\r\n                                // Get the content type\r\n                                var contentType = block[0].split(\":\")[1];\r\n                                // get the real base64 content of the file\r\n                                var realData = block[1].split(\",\")[1];\r\n\r\n                                // Convert to blob\r\n                                var blob = b64toBlob(realData, contentType);\r\n                                var splitFileExt = contentType.split('/');\r\n                                var fileExt = splitFileExt[1];\r\n\r\n                                var currentDate = Date.now();\r\n\r\n                                var file = new File([blob], spell.SpellProperties[0].Value.Text.value + \"~\" + currentDate + \".\" + fileExt);\r\n                                //items.push(file);\r\n                                clientImages.push(file);\r\n\r\n                                spell.SpellProperties[j].Value.Image.image = spell.SpellProperties[0].Value.Text.value + \"~\" + currentDate + \".\" + fileExt;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                var ruleSetImage = angular.isUndefined(ruleSetImage) == false ? ruleSetImage : null;\r\n                return $http({\r\n                    url: _controller + \"/UpdateRulesetSpells\",\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": undefined },\r\n                    transformRequest: function (data) {\r\n                        var formData = new FormData();\r\n                        formData.append(\"_updateSpells\", angular.toJson(data._updateSpells));\r\n                        for (var i = 0; i < data.clientImages.length; i++) {\r\n                            formData.append(\"clientImages[\" + i + \"]\", data.clientImages[i]);\r\n                        }\r\n                        //for (var i = 0; i < data.itemfiles.length; i++) {\r\n                        //    formData.append(\"itemfiles[\" + i + \"]\", data.itemfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.spellfiles.length; i++) {\r\n                        //    formData.append(\"spellfiles[\" + i + \"]\", data.spellfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.abilityfiles.length; i++) {\r\n                        //    formData.append(\"abilityfiles[\" + i + \"]\", data.abilityfiles[i]);\r\n                        //}\r\n                        //formData.append(\"ruleSetImage\", data.ruleSetImage);\r\n                        return formData;\r\n                    },\r\n                    data: { _updateSpells: _ruleset, clientImages: clientImages }\r\n                })\r\n            }\r\n\r\n            service.CopySpells = function (_copySpells) {\r\n                var clientImages = [];\r\n                var _ruleset = angular.copy(_copySpells);\r\n                for (var i = 0; i < _copySpells.length; i++) {\r\n                    var spell = _copySpells[i];\r\n                    for (var j = 0; j < spell.SpellProperties.length; j++) {\r\n                        if (j == 1 && spell.SpellProperties[j].Value.Image.image != null && spell.SpellProperties[j].Value.Image.image != \"\" && angular.isUndefined(spell.SpellProperties[j].Value.Image.image) == false) {\r\n                            if (spell.SpellProperties[j].Value.Image.image.includes(\"wwwroot\") == false) {\r\n                                // Split the base64 string in data and contentType\r\n                                var block = spell.SpellProperties[j].Value.Image.image.split(\";\");\r\n                                // Get the content type\r\n                                var contentType = block[0].split(\":\")[1];\r\n                                // get the real base64 content of the file\r\n                                var realData = block[1].split(\",\")[1];\r\n\r\n                                // Convert to blob\r\n                                var blob = b64toBlob(realData, contentType);\r\n                                var splitFileExt = contentType.split('/');\r\n                                var fileExt = splitFileExt[1];\r\n\r\n                                var currentDate = Date.now();\r\n\r\n                                var file = new File([blob], spell.SpellProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt);\r\n                                //spells.push(file);\r\n                                clientImages.push(file);\r\n\r\n                                spell.SpellProperties[j].Value.Image.image = spell.SpellProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                var ruleSetImage = angular.isUndefined(ruleSetImage) == false ? ruleSetImage : null;\r\n                return $http({\r\n                    url: _controller + \"/CopyRulesetSpells\",\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": undefined },\r\n                    transformRequest: function (data) {\r\n                        var formData = new FormData();\r\n                        formData.append(\"_copySpells\", angular.toJson(data._copySpells));\r\n                        for (var i = 0; i < data.clientImages.length; i++) {\r\n                            formData.append(\"clientImages[\" + i + \"]\", data.clientImages[i]);\r\n                        }\r\n                        //for (var i = 0; i < data.itemfiles.length; i++) {\r\n                        //    formData.append(\"itemfiles[\" + i + \"]\", data.itemfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.spellfiles.length; i++) {\r\n                        //    formData.append(\"spellfiles[\" + i + \"]\", data.spellfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.abilityfiles.length; i++) {\r\n                        //    formData.append(\"abilityfiles[\" + i + \"]\", data.abilityfiles[i]);\r\n                        //}\r\n                        //formData.append(\"ruleSetImage\", data.ruleSetImage);\r\n                        return formData;\r\n                    },\r\n                    data: { _copySpells: _ruleset, clientImages: clientImages }\r\n                })\r\n            }\r\n\r\n            service.DeleteSpells = function (deletespell) {\r\n                return $http.post(_controller + \"/DeleteSpell\", deletespell);\r\n            }\r\n\r\n            service.GetRulesetAbilities = function (RUlesetId) {\r\n                //var response = $http({\r\n                //    method: \"get\",\r\n                //    url: _controller + \"/GetRulesetItemsByRulesetId\",\r\n                //    params: {\r\n                //        RulesetId: JSON.stringify(RulesetId)\r\n                //    }\r\n                //});\r\n                //return response;\r\n                return $http.get(_controller + \"/GetRulesetAbilitiesByRulesetId/?RUlesetId=\" + RUlesetId);\r\n            }\r\n\r\n\r\n            service.GetAbilitiesMetadata = function (RulesetId) {\r\n                var response = $http({\r\n                    method: \"post\",\r\n                    url: _controller + \"/GetRulesetAbilitiesMetadata\",\r\n                    params: {\r\n                        RulesetId: JSON.stringify(RulesetId)\r\n                    }\r\n                });\r\n                return response;\r\n                //return $http.post(_controller + \"/GetRulesetItemsMetadata?RulesetId=\", RulesetId);\r\n            }\r\n\r\n            service.CreateAbilities = function (_rulesetAbilities) {\r\n                var clientImages = [];\r\n                var _ruleset = angular.copy(_rulesetAbilities);\r\n                for (var i = 0; i < _rulesetAbilities.length; i++) {\r\n                    var ability = _ruleset[i];\r\n                    for (var j = 0; j < ability.AbilityProperties.length; j++) {\r\n                        if (j == 1 && ability.AbilityProperties[j].Value.Image.image != null && ability.AbilityProperties[j].Value.Image.image != \"\" && angular.isUndefined(ability.AbilityProperties[j].Value.Image.image) == false) {\r\n                            // Split the base64 string in data and contentType\r\n                            var block = ability.AbilityProperties[j].Value.Image.image.split(\";\");\r\n                            // Get the content type\r\n                            var contentType = block[0].split(\":\")[1];\r\n                            // get the real base64 content of the file\r\n                            var realData = block[1].split(\",\")[1];\r\n\r\n                            // Convert to blob\r\n                            var blob = b64toBlob(realData, contentType);\r\n                            var splitFileExt = contentType.split('/');\r\n                            var fileExt = splitFileExt[1];\r\n\r\n                            var currentDate = Date.now();\r\n\r\n                            var file = new File([blob], ability.AbilityProperties[0].Value.Text.value + \"~\" + currentDate + \".\" + fileExt);\r\n                            //items.push(file);\r\n                            clientImages.push(file);\r\n\r\n                            ability.AbilityProperties[j].Value.Image.image = ability.AbilityProperties[0].Value.Text.value + \"~\" + currentDate + \".\" + fileExt;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                var ruleSetImage = angular.isUndefined(ruleSetImage) == false ? ruleSetImage : null;\r\n                return $http({\r\n                    url: _controller + \"/CreateRulesetAbilities\",\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": undefined },\r\n                    transformRequest: function (data) {\r\n                        var formData = new FormData();\r\n                        formData.append(\"_rulesetAbilities\", angular.toJson(data._rulesetAbilities));\r\n                        for (var i = 0; i < data.clientImages.length; i++) {\r\n                            formData.append(\"clientImages[\" + i + \"]\", data.clientImages[i]);\r\n                        }\r\n                        //for (var i = 0; i < data.itemfiles.length; i++) {\r\n                        //    formData.append(\"itemfiles[\" + i + \"]\", data.itemfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.spellfiles.length; i++) {\r\n                        //    formData.append(\"spellfiles[\" + i + \"]\", data.spellfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.abilityfiles.length; i++) {\r\n                        //    formData.append(\"abilityfiles[\" + i + \"]\", data.abilityfiles[i]);\r\n                        //}\r\n                        //formData.append(\"ruleSetImage\", data.ruleSetImage);\r\n                        return formData;\r\n                    },\r\n                    data: { _rulesetAbilities: _ruleset, clientImages: clientImages }\r\n                })\r\n\r\n            }\r\n\r\n\r\n            service.UpdateAbilities = function (_updateAbilities) {\r\n                var clientImages = [];\r\n                var _ruleset = angular.copy(_updateAbilities);\r\n                for (var i = 0; i < _updateAbilities.length; i++) {\r\n                    var ability = _ruleset[i];\r\n                    for (var j = 0; j < ability.AbilityProperties.length; j++) {\r\n                        if (j == 1 && ability.AbilityProperties[j].Value.Image.image != null && ability.AbilityProperties[j].Value.Image.image != \"\" && angular.isUndefined(ability.AbilityProperties[j].Value.Image.image) == false) {\r\n                            // Split the base64 string in data and contentType\r\n                            if (ability.AbilityProperties[j].Value.Image.image.includes(\"wwwroot\") == false) {\r\n                                var block = ability.AbilityProperties[j].Value.Image.image.split(\";\");\r\n                                // Get the content type\r\n                                var contentType = block[0].split(\":\")[1];\r\n                                // get the real base64 content of the file\r\n                                var realData = block[1].split(\",\")[1];\r\n\r\n                                // Convert to blob\r\n                                var blob = b64toBlob(realData, contentType);\r\n                                var splitFileExt = contentType.split('/');\r\n                                var fileExt = splitFileExt[1];\r\n\r\n                                var currentDate = Date.now();\r\n\r\n                                var file = new File([blob], ability.AbilityProperties[0].Value.Text.value + \"~\" + currentDate + \".\" + fileExt);\r\n                                //items.push(file);\r\n                                clientImages.push(file);\r\n\r\n                                ability.AbilityProperties[j].Value.Image.image = ability.AbilityProperties[0].Value.Text.value + \"~\" + currentDate + \".\" + fileExt;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                var ruleSetImage = angular.isUndefined(ruleSetImage) == false ? ruleSetImage : null;\r\n                return $http({\r\n                    url: _controller + \"/UpdateRulesetAbilities\",\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": undefined },\r\n                    transformRequest: function (data) {\r\n                        var formData = new FormData();\r\n                        formData.append(\"_updateAbilities\", angular.toJson(data._updateAbilities));\r\n                        for (var i = 0; i < data.clientImages.length; i++) {\r\n                            formData.append(\"clientImages[\" + i + \"]\", data.clientImages[i]);\r\n                        }\r\n                        //for (var i = 0; i < data.itemfiles.length; i++) {\r\n                        //    formData.append(\"itemfiles[\" + i + \"]\", data.itemfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.spellfiles.length; i++) {\r\n                        //    formData.append(\"spellfiles[\" + i + \"]\", data.spellfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.abilityfiles.length; i++) {\r\n                        //    formData.append(\"abilityfiles[\" + i + \"]\", data.abilityfiles[i]);\r\n                        //}\r\n                        //formData.append(\"ruleSetImage\", data.ruleSetImage);\r\n                        return formData;\r\n                    },\r\n                    data: { _updateAbilities: _ruleset, clientImages: clientImages }\r\n                })\r\n            }\r\n\r\n            service.CopyAbilities = function (_copyAbilities) {\r\n                var clientImages = [];\r\n                var _ruleset = angular.copy(_copyAbilities);\r\n                for (var i = 0; i < _copyAbilities.length; i++) {\r\n                    var ability = _copyAbilities[i];\r\n                    for (var j = 0; j < ability.AbilityProperties.length; j++) {\r\n                        if (j == 1 && ability.AbilityProperties[j].Value.Image.image != null && ability.AbilityProperties[j].Value.Image.image != \"\" && angular.isUndefined(ability.AbilityProperties[j].Value.Image.image) == false) {\r\n                            if (ability.AbilityProperties[j].Value.Image.image.includes(\"wwwroot\") == false) {\r\n                                // Split the base64 string in data and contentType\r\n                                var block = ability.AbilityProperties[j].Value.Image.image.split(\";\");\r\n                                // Get the content type\r\n                                var contentType = block[0].split(\":\")[1];\r\n                                // get the real base64 content of the file\r\n                                var realData = block[1].split(\",\")[1];\r\n\r\n                                // Convert to blob\r\n                                var blob = b64toBlob(realData, contentType);\r\n                                var splitFileExt = contentType.split('/');\r\n                                var fileExt = splitFileExt[1];\r\n\r\n                                var currentDate = Date.now();\r\n\r\n                                var file = new File([blob], ability.AbilityProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt);\r\n                                //spells.push(file);\r\n                                clientImages.push(file);\r\n\r\n                                ability.AbilityProperties[j].Value.Image.image = ability.AbilityProperties[0].Value.Text.value + \"~\" + _ruleset.UserId + currentDate + \".\" + fileExt;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                var ruleSetImage = angular.isUndefined(ruleSetImage) == false ? ruleSetImage : null;\r\n                return $http({\r\n                    url: _controller + \"/CopyRulesetAbilities\",\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": undefined },\r\n                    transformRequest: function (data) {\r\n                        var formData = new FormData();\r\n                        formData.append(\"_copyAbilities\", angular.toJson(data._copyAbilities));\r\n                        for (var i = 0; i < data.clientImages.length; i++) {\r\n                            formData.append(\"clientImages[\" + i + \"]\", data.clientImages[i]);\r\n                        }\r\n                        //for (var i = 0; i < data.itemfiles.length; i++) {\r\n                        //    formData.append(\"itemfiles[\" + i + \"]\", data.itemfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.spellfiles.length; i++) {\r\n                        //    formData.append(\"spellfiles[\" + i + \"]\", data.spellfiles[i]);\r\n                        //}\r\n                        //for (var i = 0; i < data.abilityfiles.length; i++) {\r\n                        //    formData.append(\"abilityfiles[\" + i + \"]\", data.abilityfiles[i]);\r\n                        //}\r\n                        //formData.append(\"ruleSetImage\", data.ruleSetImage);\r\n                        return formData;\r\n                    },\r\n                    data: { _copyAbilities: _ruleset, clientImages: clientImages }\r\n                })\r\n            }\r\n\r\n            service.DeleteAbilities = function (deleteability) {\r\n                return $http.post(_controller + \"/DeleteAbility\", deleteability);\r\n            }\r\n            service.GetTilesMetadataForRuleset = function () {\r\n                return $http.get(_controller + \"/GetTilesMetadataForRuleset\");\r\n            }\r\n            service.SaveRulesetTiles = function (_rulesetContent) {\r\n                return $http.post(_controller + \"/SaveOrUpdateRulesetContentTiles\", _rulesetContent);\r\n            }\r\n            //Convert base64 bit image in to Http posted file (Blob)\r\n            function b64toBlob(b64Data, contentType, sliceSize) {\r\n                contentType = contentType || '';\r\n                sliceSize = sliceSize || 512;\r\n\r\n                var byteCharacters = atob(b64Data);\r\n                var byteArrays = [];\r\n\r\n                for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n                    var slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n                    var byteNumbers = new Array(slice.length);\r\n                    for (var i = 0; i < slice.length; i++) {\r\n                        byteNumbers[i] = slice.charCodeAt(i);\r\n                    }\r\n\r\n                    var byteArray = new Uint8Array(byteNumbers);\r\n\r\n                    byteArrays.push(byteArray);\r\n                }\r\n\r\n                var blob = new Blob(byteArrays, { type: contentType }, name);\r\n                return blob;\r\n            }\r\n\r\n            return service;\r\n        }\r\n    ]);\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-services');\r\n\r\n    app.factory('tabService', ['$http','$rootScope', '$state', '$localStorage', 'authService',\r\n        function ($http,$rootScope, $state, $localStorage, authService) {\r\n\r\n        var navs = {};\r\n        var service = {};\r\n        var _controller = \"/api/Tab\";\r\n        service.topNav = {};\r\n\r\n        service.GetTabs = function (LayoutId) {\r\n            return $http.get(_controller + \"/GetTabListByLayoutId/?LayoutId=\"+LayoutId);\r\n        }\r\n\r\n        service.AddTab = function (NewTab) {\r\n            return $http.post(_controller + \"/Create\" , NewTab);\r\n        }\r\n        service.UpdateTab = function (tabmodel) {\r\n            return $http.post(_controller + \"/Update\", tabmodel);\r\n        }\r\n\r\n        service.deleteTab = function (deleteTab) {\r\n            //var TabID = { 'TabID': ID };\r\n            return $http.post(_controller + \"/DeleteTab\", deleteTab);\r\n        }\r\n        //service.InsertNewTab = function (TabViewModel) {\r\n        //    return $http.post('/Tab/MarketExpenseTypeInsert', TabViewModel);\r\n        //}\r\n\r\n        return service;\r\n    }]);    \r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-services');\r\n\r\n    app.factory('tileService', ['$http', '$rootScope', '$state', '$localStorage', 'authService',\r\n        function ($http, $rootScope, $state, $localStorage, authService) {\r\n\r\n            var navs = {};\r\n            var service = {};\r\n            var _controller = \"/api/Tile\";\r\n            service.topNav = {};\r\n            service.GetTileTypes = function () {\r\n                return $http.get(_controller + \"/GetTileTypes\");\r\n            }\r\n            service.AddTile = function (NewTile) {\r\n                return $http.post(_controller + \"/Create\", NewTile);\r\n            }\r\n\r\n            service.UpdateTile = function (UpdateTile) {\r\n                return $http.post(_controller + \"/Update\", UpdateTile);\r\n            }\r\n            service.deleteTile = function (Tile) {\r\n                //var TileID = { 'TileID': ID };\r\n                return $http.post(_controller + \"/DeleteTile\", Tile);\r\n            }\r\n            service.GetAllTileTypesRelatedCharacter = function (ID) {\r\n                var CharacterProfileID = { 'CharacterProfileID': ID };\r\n                return $http.post(_controller + \"/GetAllTileTypesRelatedCharacter\", CharacterProfileID);\r\n            }\r\n            //service.InsertNewTab = function (TabViewModel) {\r\n            //    return $http.post('/Tab/MarketExpenseTypeInsert', TabViewModel);\r\n            //}\r\n\r\n            return service;\r\n        }]);\r\n\r\n})();","// Note: This is a modification of the textcolor picker modified for body background\r\n\r\n/**\r\n * plugin.js\r\n *\r\n * Released under LGPL License.\r\n * Copyright (c) 1999-2015 Ephox Corp. All rights reserved\r\n *\r\n * License: http://www.tinymce.com/license\r\n * Contributing: http://www.tinymce.com/contributing\r\n */\r\n\r\n/*global tinymce:true */\r\n/*eslint consistent-this:0 */\r\n\r\ntinymce.PluginManager.add('rpgsbackgroundcolor', function (editor) {\r\n\r\n    // Called externally\r\n    this.updateStyles = function(styles) {\r\n        styles.tile.styles['background-color'] = editor.getContentAreaContainer().style.backgroundColor;\r\n    };\r\n\r\n    var cols, rows;\r\n    var previewEl = null;\r\n\r\n    rows = {\r\n        forecolor: editor.settings.forecolor_rows || editor.settings.textcolor_rows || 5,\r\n        backcolor: editor.settings.backcolor_rows || editor.settings.textcolor_rows || 5\r\n    };\r\n    cols = {\r\n        forecolor: editor.settings.forecolor_cols || editor.settings.textcolor_cols || 8,\r\n        backcolor: editor.settings.backcolor_cols || editor.settings.textcolor_cols || 8\r\n    };\r\n\r\n    function getCurrentColor(format) {\r\n        return editor.getContentAreaContainer().style.backgroundColor;\r\n    }\r\n\r\n    function mapColors(type) {\r\n        var i, colors = [], colorMap;\r\n\r\n        colorMap = [\r\n            \"000000\", \"Black\",\r\n            \"993300\", \"Burnt orange\",\r\n            \"333300\", \"Dark olive\",\r\n            \"003300\", \"Dark green\",\r\n            \"003366\", \"Dark azure\",\r\n            \"000080\", \"Navy Blue\",\r\n            \"333399\", \"Indigo\",\r\n            \"333333\", \"Very dark gray\",\r\n            \"500000\", \"Maroon\",\r\n            \"FF6600\", \"Orange\",\r\n            \"805000\", \"Olive\",\r\n            \"005000\", \"Green\",\r\n            \"008080\", \"Teal\",\r\n            \"0000FF\", \"Blue\",\r\n            \"666699\", \"Grayish blue\",\r\n            \"808080\", \"Gray\",\r\n            \"FF0000\", \"Red\",\r\n            \"FF9900\", \"Amber\",\r\n            \"99CC00\", \"Yellow green\",\r\n            \"339966\", \"Sea green\",\r\n            \"33CCCC\", \"Turquoise\",\r\n            \"3366FF\", \"Royal blue\",\r\n            \"500080\", \"Purple\",\r\n            \"999999\", \"Medium gray\",\r\n            \"FF00FF\", \"Magenta\",\r\n            \"FFCC00\", \"Gold\",\r\n            \"FFFF00\", \"Yellow\",\r\n            \"00FF00\", \"Lime\",\r\n            \"00FFFF\", \"Aqua\",\r\n            \"00CCFF\", \"Sky blue\",\r\n            \"993366\", \"Red violet\",\r\n            \"FFFFFF\", \"White\",\r\n            \"FF99CC\", \"Pink\",\r\n            \"FFCC99\", \"Peach\",\r\n            \"FFFF99\", \"Light yellow\",\r\n            \"CCFFCC\", \"Pale green\",\r\n            \"CCFFFF\", \"Pale cyan\",\r\n            \"99CCFF\", \"Light sky blue\",\r\n            \"CC99FF\", \"Plum\"\r\n        ];\r\n\r\n        colorMap = editor.settings.textcolor_map || colorMap;\r\n        colorMap = editor.settings[type + '_map'] || colorMap;\r\n\r\n        for (i = 0; i < colorMap.length; i += 2) {\r\n            colors.push({\r\n                text: colorMap[i + 1],\r\n                color: '#' + colorMap[i]\r\n            });\r\n        }\r\n\r\n        return colors;\r\n    }\r\n\r\n    function renderColorPicker() {\r\n        var ctrl = this, colors, color, html, last, x, y, i, id = ctrl._id, count = 0, type;\r\n\r\n        type = ctrl.settings.origin;\r\n\r\n        function getColorCellHtml(color, title) {\r\n            var isNoColor = color == 'initial';\r\n\r\n            return (\r\n                '<td class=\"mce-grid-cell' + (isNoColor ? ' mce-colorbtn-trans' : '') + '\">' +\r\n                '<div id=\"' + id + '-' + (count++) + '\"' +\r\n                ' data-mce-color=\"' + (color ? color : '') + '\"' +\r\n                ' role=\"option\"' +\r\n                ' tabIndex=\"-1\"' +\r\n                ' style=\"' + (color ? 'background-color: ' + color : '') + '\"' +\r\n                ' title=\"' + tinymce.translate(title) + '\">' +\r\n                (isNoColor ? '&#215;' : '') +\r\n                '</div>' +\r\n                '</td>'\r\n            );\r\n        }\r\n\r\n        colors = mapColors(type);\r\n        colors.push({\r\n            text: tinymce.translate(\"No color\"),\r\n            color: \"initial\"\r\n        });\r\n\r\n        html = '<table class=\"mce-grid mce-grid-border mce-colorbutton-grid\" role=\"list\" cellspacing=\"0\"><tbody>';\r\n        last = colors.length - 1;\r\n\r\n        for (y = 0; y < rows[type]; y++) {\r\n            html += '<tr>';\r\n\r\n            for (x = 0; x < cols[type]; x++) {\r\n                i = y * cols[type] + x;\r\n\r\n                if (i > last) {\r\n                    html += '<td></td>';\r\n                } else {\r\n                    color = colors[i];\r\n                    html += getColorCellHtml(color.color, color.text);\r\n                }\r\n            }\r\n\r\n            html += '</tr>';\r\n        }\r\n\r\n        if (editor.settings.color_picker_callback) {\r\n            html += (\r\n                '<tr>' +\r\n                '<td colspan=\"' + cols[type] + '\" class=\"mce-custom-color-btn\">' +\r\n                '<div id=\"' + id + '-c\" class=\"mce-widget mce-btn mce-btn-small mce-btn-flat\" ' +\r\n                'role=\"button\" tabindex=\"-1\" aria-labelledby=\"' + id + '-c\" style=\"width: 100%\">' +\r\n                '<button type=\"button\" role=\"presentation\" tabindex=\"-1\">' + tinymce.translate('Custom...') + '</button>' +\r\n                '</div>' +\r\n                '</td>' +\r\n                '</tr>'\r\n            );\r\n\r\n            html += '<tr>';\r\n\r\n            for (x = 0; x < cols[type]; x++) {\r\n                html += getColorCellHtml('', 'Custom color');\r\n            }\r\n\r\n            html += '</tr>';\r\n        }\r\n\r\n        html += '</tbody></table>';\r\n\r\n        return html;\r\n    }\r\n\r\n    function applyFormat(format, value) {\r\n        editor.undoManager.transact(function () {\r\n            editor.getContentAreaContainer().style.backgroundColor = value;\r\n        });\r\n    }\r\n\r\n    function removeFormat(format) {\r\n        editor.undoManager.transact(function () {\r\n            editor.getContentAreaContainer().style.backgroundColor = null;\r\n        });\r\n    }\r\n\r\n    function onPanelClick(e) {\r\n        var buttonCtrl = this.parent(), value, type;\r\n\r\n        type = buttonCtrl.settings.origin;\r\n\r\n        function selectColor(value) {\r\n            buttonCtrl.hidePanel();\r\n            buttonCtrl.color(value);\r\n            applyFormat(buttonCtrl.settings.format, value);\r\n        }\r\n\r\n        function resetColor() {\r\n            buttonCtrl.hidePanel();\r\n            buttonCtrl.resetColor();\r\n            removeFormat(buttonCtrl.settings.format);\r\n        }\r\n\r\n        function setDivColor(div, value) {\r\n            div.style.background = value;\r\n            div.setAttribute('data-mce-color', value);\r\n        }\r\n\r\n        if (tinymce.DOM.getParent(e.target, '.mce-custom-color-btn')) {\r\n            buttonCtrl.hidePanel();\r\n\r\n            editor.settings.color_picker_callback.call(editor, function (value) {\r\n                var tableElm = buttonCtrl.panel.getEl().getElementsByTagName('table')[0];\r\n                var customColorCells, div, i;\r\n\r\n                customColorCells = tinymce.map(tableElm.rows[tableElm.rows.length - 1].childNodes, function (elm) {\r\n                    return elm.firstChild;\r\n                });\r\n\r\n                for (i = 0; i < customColorCells.length; i++) {\r\n                    div = customColorCells[i];\r\n                    if (!div.getAttribute('data-mce-color')) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // Shift colors to the right\r\n                // TODO: Might need to be the left on RTL\r\n                if (i == cols[type]) {\r\n                    for (i = 0; i < cols[type] - 1; i++) {\r\n                        setDivColor(customColorCells[i], customColorCells[i + 1].getAttribute('data-mce-color'));\r\n                    }\r\n                }\r\n\r\n                setDivColor(div, value);\r\n                selectColor(value);\r\n            }, getCurrentColor(buttonCtrl.settings.format));\r\n        }\r\n\r\n        value = e.target.getAttribute('data-mce-color');\r\n        if (value) {\r\n            if (this.lastId) {\r\n                document.getElementById(this.lastId).setAttribute('aria-selected', false);\r\n            }\r\n\r\n            e.target.setAttribute('aria-selected', true);\r\n            this.lastId = e.target.id;\r\n\r\n            if (value == 'transparent') {\r\n                resetColor();\r\n            } else {\r\n                selectColor(value);\r\n            }\r\n        } else if (value !== null) {\r\n            buttonCtrl.hidePanel();\r\n        }\r\n    }\r\n\r\n    function onButtonClick() {\r\n        var self = this;\r\n\r\n        if (self._color) {\r\n            applyFormat(self.settings.format, self._color);\r\n        } else {\r\n            removeFormat(self.settings.format);\r\n        }\r\n    }\r\n\r\n    editor.buttons.backcolor.tooltip = \"Text background color\";\r\n\r\n    editor.on('ExecCommand', function(e) {\r\n        if (e.command === 'RemoveFormat') {\r\n            // Do we do anything?\r\n        }\r\n    });\r\n\r\n    editor.addButton('rpgsbackgroundcolor', {\r\n        type: 'colorbutton',\r\n        tooltip: 'Tile background color',\r\n        panel: {\r\n            origin: 'backcolor',\r\n            role: 'application',\r\n            ariaRemember: true,\r\n            html: renderColorPicker,\r\n            onclick: onPanelClick\r\n        },\r\n        onpostrender: function () {\r\n            previewEl = arguments[0].control.$el.find('i.mce-i-rpgsbackgroundcolor');\r\n        },\r\n        onclick: onButtonClick\r\n    });\r\n});","// Note: This is a modification of the textcolor picker modified for body background\r\n\r\n/**\r\n * plugin.js\r\n *\r\n * Released under LGPL License.\r\n * Copyright (c) 1999-2015 Ephox Corp. All rights reserved\r\n *\r\n * License: http://www.tinymce.com/license\r\n * Contributing: http://www.tinymce.com/contributing\r\n */\r\n\r\n/*global tinymce:true */\r\n/*eslint consistent-this:0 */\r\n\r\ntinymce.PluginManager.add('rpgsborder', function(editor) {\r\n\r\n    // Called externally\r\n    this.updateStyles = function(styles) {\r\n\r\n        var el = editor.getContentAreaContainer();\r\n\r\n        styles.tile.styles['border'] = el.style.border;\r\n        styles.tile.styles['border-radius'] = el.style.borderRadius;\r\n        \r\n        styles.tile.styles['box-shadow'] = el.style.boxShadow || null;\r\n    };\r\n\r\n    function makeValues() {\r\n        var arr = [];\r\n        for (var i = 1; i <= 10; i++)\r\n            arr.push({ text: i + 'px', value: i + 'px' });\r\n        return arr;\r\n    }\r\n\r\n    function createColorPickAction() {\r\n        var colorPickerCallback = editor.settings.color_picker_callback;\r\n\r\n        if (colorPickerCallback) {\r\n            return function() {\r\n                var self = this;\r\n\r\n                colorPickerCallback.call(\r\n                    editor,\r\n                    function(value) {\r\n                        self.value(value).fire('change');\r\n                    },\r\n                    self.value()\r\n                );\r\n            };\r\n        }\r\n    };\r\n\r\n    editor.on('Init', function(ed) {\r\n\r\n        var dst = editor.getContentAreaContainer(),\r\n            src = editor.getParam('tileStyle').tile;\r\n\r\n        // The editor or something puts in a 1px border inline. This will remove it.\r\n        dst.style.borderWidth = null;\r\n\r\n        // our styles\r\n        dst.style.backgroundColor = src.styles['background-color'];\r\n        dst.style.border = src.styles['border'];\r\n        dst.style.borderRadius = src.styles['border-radius'];\r\n\r\n        dst.style.boxShadow = src.styles['box-shadow'];\r\n    });\r\n\r\n    editor.on('ExecCommand', function(e) {\r\n        if (e.command === 'RemoveFormat') {\r\n            // Do we do anything?\r\n        }\r\n    });\r\n\r\n    editor.addButton('rpgsborder', {\r\n        type: 'button',\r\n        tooltip: 'Tile border',\r\n        onclick: function() {\r\n\r\n            var style = editor.getContentAreaContainer().style;\r\n            \r\n            editor.windowManager.open({\r\n                title: 'Edit border',\r\n                body: [\r\n                    {\r\n                        type: 'listbox',\r\n                        name: 'style',\r\n                        label: 'Style',\r\n                        values: [\r\n                            { text: 'Use default', value: 'inherit' },\r\n                            { text: 'None', value: 'none' },\r\n                            { text: 'Dotted', value: 'dotted' },\r\n                            { text: 'Double', value: 'double' },\r\n                            { text: 'Dashed', value: 'dashed' },\r\n                            { text: 'Groove', value: 'groove' },\r\n                            { text: 'Inset', value: 'inset' },\r\n                            { text: 'Outset', value: 'outset' },\r\n                            { text: 'Ridge', value: 'ridge' },\r\n                            { text: 'Solid', value: 'solid' }\r\n                        ],\r\n                        value: style.borderStyle\r\n                    },\r\n                    {\r\n                        type: 'colorbox',\r\n                        name: 'color',\r\n                        label: 'Color',\r\n                        onaction: createColorPickAction(),\r\n                        value: style.borderColor\r\n                    },\r\n                    {\r\n                        type: 'combobox',\r\n                        name: 'width',\r\n                        label: 'Width',\r\n                        values: makeValues(),\r\n                        value: style.borderWidth\r\n                    },\r\n                    {\r\n                        type: 'combobox',\r\n                        name: 'radius',\r\n                        label: 'Radius',\r\n                        values: makeValues(),\r\n                        value: style.borderRadius\r\n                    },\r\n                    {\r\n                        type: 'listbox',\r\n                        name: 'shadow',\r\n                        label: 'Shadow',\r\n                        values: [\r\n                            { text: 'Use default', value: 'inherit' },\r\n                            { text: 'Yes', value: 'yes' },\r\n                            { text: 'No', value: 'no' }\r\n                        ],\r\n                        value: (function() {\r\n                            return style.boxShadow === 'none' ? 'no' : 'yes'\r\n                        })()\r\n                    }\r\n                ],\r\n                onsubmit: function(e) {\r\n                    \r\n                    editor.undoManager.transact(function() {\r\n                        \r\n                        switch (e.data.style) {\r\n                            case '':\r\n                            case 'inherit':\r\n                                style.border = null;\r\n                                break;\r\n                            case 'none':\r\n                                style.border = 'none';\r\n                                break;\r\n                            default:\r\n                                style.border = e.data.width + ' ' + e.data.style + ' ' + e.data.color;\r\n                                break;\r\n                        }\r\n\r\n                        switch (e.data.shadow) {\r\n                            case '':\r\n                            case 'inherit':\r\n                            case 'yes':\r\n                                style.boxShadow = null;\r\n                                break;\r\n                            case 'no':\r\n                                style.boxShadow = 'none';\r\n                                break;\r\n                            default:\r\n                        }\r\n\r\n                        if (e.data.radius === 'inherit' || e.data.radius === '')\r\n                            style.borderRadius = null;\r\n                        else\r\n                            style.borderRadius = e.data.radius;\r\n\r\n                    });\r\n\r\n                    editor.focus();\r\n                }\r\n            });\r\n        }\r\n    });\r\n});","// Note: This is a modification of the textcolor picker modified for body background\r\n\r\n/**\r\n * plugin.js\r\n *\r\n * Released under LGPL License.\r\n * Copyright (c) 1999-2015 Ephox Corp. All rights reserved\r\n *\r\n * License: http://www.tinymce.com/license\r\n * Contributing: http://www.tinymce.com/contributing\r\n */\r\n\r\n/*global tinymce:true */\r\n/*eslint consistent-this:0 */\r\n\r\ntinymce.PluginManager.add('rpgsstaticcontent', function(editor) {\r\n\r\n    // Called externally\r\n    this.updateStyles = function(styles) {\r\n        var node = $(innerNode());\r\n\r\n        styles.content.classes = node.attr('class');\r\n        styles.content.styles = rpgsmith.styles2Obj(node.attr('style'));\r\n    };\r\n\r\n    var _old_apply = null;\r\n\r\n    function innerNode() {\r\n        var node = editor.dom.select('p')[0];\r\n\r\n        if (node) {\r\n            while (node.children.length > 0)\r\n                node = node.children[0];\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function selectNode() {\r\n        var node = innerNode();\r\n        editor.focus();\r\n        editor.selection.select(node);\r\n        return node;\r\n    }\r\n\r\n    var valignButtons = ['valigntop', 'valignmiddle', 'valignbottom'];\r\n\r\n    function lock(yesNo) {\r\n        editor.getBody().setAttribute('contenteditable', !yesNo);\r\n    }\r\n\r\n    function beforeCommand() {\r\n        lock(false);\r\n        selectNode();\r\n    };\r\n\r\n    function afterCommand() {\r\n        editor.selection.collapse();\r\n        lock(true);\r\n    }\r\n\r\n    function valign(command) {\r\n\r\n        beforeCommand();\r\n\r\n        valignButtons.forEach(function(f) {\r\n            if (f !== command)\r\n                editor.formatter.remove(f);\r\n        });\r\n\r\n        editor.formatter.toggle(command, undefined);\r\n        editor.nodeChanged();\r\n\r\n        afterCommand();\r\n    }\r\n    \r\n    editor.on('PreInit', function(ed) {\r\n\r\n        _old_apply = editor.formatter.apply;\r\n\r\n        editor.formatter.apply = function apply(name, vars, node) {\r\n            editor.fire('BeforeExecCommand', { command: name });\r\n            _old_apply.call(arguments);\r\n            editor.fire('ExecCommand', { command: name });\r\n        };\r\n\r\n        editor.formatter.unregister('bold');\r\n        editor.formatter.unregister('italic');\r\n        editor.formatter.unregister('underline');\r\n\r\n        editor.formatter.unregister('alignleft');\r\n        editor.formatter.unregister('aligncenter');\r\n        editor.formatter.unregister('alignright');\r\n\r\n        // Text format\r\n        editor.formatter.register('bold', {\r\n            inline: 'span', styles: { 'font-weight': 'bold' }\r\n        });\r\n        editor.formatter.register('italic', {\r\n            inline: 'span', styles: { 'font-style': 'italic' }\r\n        });\r\n        editor.formatter.register('underline', {\r\n            inline: 'span', styles: { 'text-decoration': 'underline' }\r\n        });\r\n\r\n        // Horizontal Alignment\r\n        editor.formatter.register('alignleft', {\r\n            inline: 'span', classes: 'tile-content-left'\r\n        });\r\n        editor.formatter.register('aligncenter', {\r\n            inline: 'span', classes: 'tile-content-center'\r\n        });\r\n        editor.formatter.register('alignright', {\r\n            inline: 'span', classes: 'tile-content-right'\r\n        });\r\n\r\n        // Vertical Alignment\r\n        editor.formatter.register('valigntop', {\r\n            inline: 'span', classes: 'tile-content-top'\r\n        });\r\n        editor.formatter.register('valignmiddle', {\r\n            inline: 'span', classes: 'tile-content-middle'\r\n        });\r\n        editor.formatter.register('valignbottom', {\r\n            inline: 'span', classes: 'tile-content-bottom'\r\n        });\r\n\r\n        window.setTimeout(function() {\r\n            lock(true);\r\n            selectNode();\r\n            editor.selection.collapse();\r\n        }, 5);\r\n    });\r\n\r\n    editor.on('BeforeExecCommand', function(e) {\r\n\r\n        console.log('BeforeExecCommand');\r\n\r\n        switch (e.command) {\r\n            case 'mceInsertContent':\r\n                return false;\r\n            default:\r\n                selectNode();\r\n                lock(false);\r\n                break;\r\n        }\r\n    });\r\n\r\n    editor.on('ExecCommand', function(e) {\r\n        if (e.command !== 'selectAll') {\r\n            lock(true);\r\n            editor.selection.collapse();\r\n        }\r\n    });\r\n\r\n    editor.addButton('valigntop', {\r\n        text: 'T',\r\n        tooltip: 'Align top',\r\n        icon: false,\r\n        onclick: function() {\r\n            valign('valigntop');            \r\n        },\r\n        onpostrender: function() {\r\n            var btn = this;\r\n            editor.on('init', function() {\r\n                editor.formatter.formatChanged('valigntop', function(state) {\r\n                    btn.active(state);\r\n                });\r\n            });\r\n        }\r\n    });\r\n\r\n    editor.addButton('valignmiddle', {\r\n        text: 'M',\r\n        tooltip: 'Align middle',\r\n        icon: false,\r\n        onclick: function() {\r\n            valign('valignmiddle');            \r\n        },\r\n        onpostrender: function() {\r\n            var btn = this;\r\n            editor.on('init', function() {\r\n                editor.formatter.formatChanged('valignmiddle', function(state) {\r\n                    btn.active(state);\r\n                });\r\n            });\r\n        }\r\n    });\r\n\r\n    editor.addButton('valignbottom', {\r\n        text: 'B',\r\n        tooltip: 'Align bottom',\r\n        icon: false,\r\n        onclick: function() {\r\n            valign('valignbottom');            \r\n        },\r\n        onpostrender: function() {\r\n            var btn = this;\r\n            editor.on('init', function() {\r\n                editor.formatter.formatChanged('valignbottom', function(state) {\r\n                    btn.active(state);\r\n                });\r\n            });\r\n        }\r\n    });\r\n    \r\n});","(function () {\r\n    'use strict';\r\n\r\n\r\n    var module = angular.module('rpgsmith-dialogs');\r\n\r\n    module.controller('dialogAddNewCharacter',\r\n        ['$scope', '$state', '$q', '$uibModalInstance', 'Upload', 'data', 'rulesetService', 'characterService', 'toaster',\r\n            function ($scope, $state, $q, $uibModalInstance, Upload, data, rulesetService, characterService, toaster) {\r\n                //$scope.character = {};\r\n\r\n                //$scope.character.Action = data.mode;\r\n\r\n                $scope.character = data.characterData;\r\n\t\t\t\t$scope.showimagebtns = false;\r\n                //$scope.file = null;\r\n                if (data.mode == 1) {\r\n\r\n                    $scope.pageHeading = \"New Character\";\r\n                    $scope.pageButton = \"Save\"\r\n\r\n                    $scope.disableNameControl = false;\r\n                    $scope.disableAllControls = false;\r\n\r\n                    $scope.mode = 1;\r\n                }\r\n                else if (data.mode == 2) {\r\n\r\n                    $scope.pageHeading = \"Edit Character\";\r\n                    $scope.pageButton = \"Save\"\r\n\r\n                    $scope.disableNameControl = true;\r\n                    $scope.disableAllControls = false;\r\n\r\n                    $scope.mode = 2;\r\n\r\n                }\r\n                else {\r\n                    $scope.pageHeading = \"Duplicate Character\";\r\n                    $scope.pageButton = \"Save\"\r\n\r\n\r\n                    $scope.character.name = \"\";\r\n\r\n                    $scope.disableNameControl = false;\r\n                    $scope.disableAllControls = true;\r\n\r\n                    $scope.mode = 3;\r\n                }\r\n\r\n                $scope.cancel = function () {\r\n                    //$(\"#loading\").css(\"display\", \"block\");\r\n                    $uibModalInstance.dismiss('Canceled');\r\n                   // $(\"#loading\").fadeOut(\"slow\");\r\n                };\r\n\r\n                $scope.getThumbNail = function () {\r\n                    if ($scope.file)\r\n                        return $scope.file;\r\n                    var c = $scope.item;\r\n                    if (c.id && c.portrait)\r\n                        return '/characterdata/' + c.id + '/' + c.portrait;\r\n                    return null;\r\n\t\t\t\t}\r\n\t\t\t\t//Upload file\r\n\t\t\t\t$scope.OpenFile = function () {\r\n\t\t\t\t\tconsole.log(\"Open and upload file...\");\r\n\t\t\t\t\t$(\"#newCharacterImage\").click();\r\n\t\t\t\t\t//var input = $('input[type=file]');//.val();\r\n\t\t\t\t\t//input.click();\r\n\t\t\t\t\t//return false;\r\n\t\t\t\t}\r\n                $scope.characterImageUpload = function (input) {\r\n                    if (input.files && input.files[0]) {\r\n                        var reader = new FileReader();\r\n                        reader.onload = function (e) {\r\n                            $scope.file = e.target.result\r\n                            $scope.character.file = $scope.file;\r\n                        };\r\n                        reader.readAsDataURL(input.files[0]);\r\n                    }\r\n                }\r\n                $scope.save = function () {\r\n                    //$(\"#loading\").css(\"display\", \"block\");\r\n                    var character = {};\r\n                    if ($scope.mode == 1 && $scope.character.id == 0) {\r\n                        character = {\r\n                            Id: 0,\r\n                            Name: $scope.character.name,\r\n                            Portrait: $scope.character.file,\r\n                            RulesetID: $scope.character.RulesetID,\r\n                        };\r\n                        if ($scope.character.RulesetID > 0) {\r\n                            var addcharacter = characterService.saveCharacter(character);\r\n                            addcharacter.then(function (res) {\r\n                                if (res.data.StatusCode == 200) {\r\n                                    //$(\"#loading\").fadeOut(\"slow\");\r\n                                    $uibModalInstance.close(res.data.PayLoad);\r\n\r\n                                }\r\n                                else {\r\n                                    if (res.data.StatusCode == 400) {\r\n                                        if (res.data.ShowToUser == true) {\r\n                                            toaster.pop('error', res.data.ErrorMessage);\r\n                                            //$(\"#loading\").fadeOut(\"slow\");\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        else\r\n                        {\r\n                            toaster.pop('error', 'Please select one ruleset');\r\n                        }\r\n                        }\r\n                        else {\r\n                            var data;\r\n                            if ($scope.mode == 2) {\r\n                                character = {\r\n                                    Id: $scope.character.id,\r\n                                    Name: $scope.character.name,\r\n                                    Portrait: $scope.character.file,\r\n                                    RulesetID: $scope.character.RulesetID,\r\n                                };\r\n                                data = characterService.EditCharacter(character);\r\n                            }\r\n                            else if ($scope.mode == 3) {\r\n                                character = {\r\n                                    Id: $scope.character.id,\r\n                                    Name: $scope.character.name,\r\n                                    Portrait: $scope.character.file,\r\n                                    RulesetID: $scope.character.RulesetID,\r\n                                };\r\n                                data = characterService.CopyCharacter(character);\r\n                            }\r\n                            data.then(function (res) {\r\n                                if (res.data.StatusCode == 200) {\r\n                                    //$(\"#loading\").fadeOut(\"slow\");\r\n\r\n                                $uibModalInstance.close(res.data.PayLoad);\r\n                            }\r\n                            else {\r\n                                if (res.data.StatusCode == 400) {\r\n                                    if (res.data.ShowToUser == true) {\r\n                                        toaster.pop('error', res.data.ErrorMessage);\r\n                                        //$(\"#loading\").fadeOut(\"slow\");\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        })\r\n                    }\r\n                }\r\n\r\n                rulesetService.GetRuleSets().then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        $scope.RuleSets = data.data.PayLoad;\r\n                        //$(\"#loading\").fadeOut(\"slow\");\r\n                    }\r\n                    else {\r\n                        if (data.data.StatusCode == 400) {\r\n                            if (data.data.ShowToUser == true) {\r\n                                toaster.pop('error', data.data.ErrorMessage);\r\n\r\n                                //$(\"#loading\").fadeOut(\"slow\");\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                $scope.manageRuleSets = function () {\r\n                    $uibModalInstance.dismiss('Canceled');\r\n                    $state.go('profile.AddNewRuleSet');\r\n                }\r\n\r\n            }]);\r\n\r\n    module.controller('dialogEditCharacter',\r\n        ['$scope', '$q', '$uibModalInstance', 'Upload', 'data',\r\n            function ($scope, $q, $uibModalInstance, Upload, data) {\r\n                $scope.isEdit = data.isEdit;\r\n                $scope.item = data.item;\r\n                $scope.file = null;\r\n\r\n                $scope.cancel = function () {\r\n                    $uibModalInstance.dismiss('Canceled');\r\n                };\r\n\r\n                $scope.getThumbNail = function () {\r\n\r\n                    if ($scope.file)\r\n                        return $scope.file;\r\n\r\n                    var c = $scope.item;\r\n                    if (c.id && c.portrait)\r\n                        return '/characterdata/' + c.id + '/' + c.portrait;\r\n\r\n                    return null;\r\n                }\r\n\r\n                $scope.save = function () {\r\n\r\n                  \r\n\r\n                };\r\n\r\n            }]);\r\n\r\n    module.controller('dialogLayoutRename', ['$scope', '$uibModalInstance', 'data', 'rulesetService', function ($scope, $uibModalInstance, data, rulesetService) {\r\n        $scope.Tab = data.scope;\r\n        $scope.TabHeading = data.State;\r\n        $scope.ButtonText = data.btntext;\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.dismiss('Canceled');\r\n        };\r\n\r\n        $scope.save = function () {\r\n\r\n            $uibModalInstance.close($scope.Tab);\r\n        };\r\n\r\n        $scope.hitEnter = function (evt) {\r\n            if (evt.which === 13 && !(angular.equals($scope.name, null) || angular.equals($scope.name, '')))\r\n                $scope.save();\r\n        };\r\n        $scope.cancel = function () {\r\n\r\n            $uibModalInstance.dismiss('Canceled');\r\n        };\r\n\r\n        $scope.SaveCorestat = function () {\r\n            $uibModalInstance.close($scope.CoreStatProperties);\r\n        }\r\n    }]);\r\n\r\n    module.controller('dialogTabRename', ['$scope', '$uibModalInstance', 'data', 'rulesetService', function ($scope, $uibModalInstance, data, rulesetService) {\r\n        $scope.Tab = data.scope;\r\n        $scope.TabHeading = data.State;\r\n        $scope.ButtonText = data.btntext;\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.dismiss('Canceled');\r\n        };\r\n\r\n        $scope.save = function () {\r\n            $uibModalInstance.close($scope.Tab);\r\n        };\r\n\r\n        $scope.hitEnter = function (evt) {\r\n            if (evt.which === 13 && !(angular.equals($scope.name, null) || angular.equals($scope.name, '')))\r\n                $scope.save();\r\n        };\r\n        $scope.cancel = function () {\r\n            //$(\"#loading\").css(\"display\", \"block\");\r\n            $uibModalInstance.dismiss('Canceled');\r\n            //$(\"#loading\").fadeOut(\"slow\");\r\n        };\r\n\r\n        $scope.SaveCorestat = function () {\r\n            $uibModalInstance.close($scope.CoreStatProperties);\r\n        }\r\n    }]);\r\n\r\n    module.controller('dialogTileTypes', ['$scope', '$uibModalInstance', 'data', 'dialogs', 'tileService', function ($scope, $uibModalInstance, data, dialogs, tileService) {\r\n\r\n        $scope.tileTypes = data.scope;\r\n        $scope.cancel = function () {\r\n           // $(\"#loading\").css(\"display\", \"block\");\r\n            $uibModalInstance.dismiss('Canceled');\r\n            //$(\"#loading\").fadeOut(\"slow\");\r\n        };\r\n\r\n        $scope.choosetile = function (tile) {\r\n            $uibModalInstance.close(tile);\r\n        }\r\n\r\n        $scope.cancel = function () {\r\n           // $(\"#loading\").css(\"display\", \"block\");\r\n            $uibModalInstance.dismiss('Canceled');\r\n           // $(\"#loading\").fadeOut(\"slow\");\r\n        };\r\n\r\n    }]);\r\n\r\n    module.controller('dialogAddTile', ['$scope', '$uibModalInstance', 'data', 'tileService', function ($scope, $uibModalInstance, data, tileService) {\r\n        $scope.Tiles = data.scope;\r\n\r\n    }]);\r\n\r\n   \r\n    module.controller('dialogCreateCoreStat', ['$scope', '$uibModalInstance', 'data', 'toaster', 'rulesetService', function ($scope, $uibModalInstance, data, toaster, rulesetService) {\r\n\r\n\t\t\r\n\t\t$scope.OperationTypeMode = data.CoreStatMode;\r\n        $scope.CoreStatProperties = data.scope;\r\n        $scope.CoreStatsInGrid = data.CoreStatsInGrid;\r\n        $scope.CoreStatsNameInGrid = data.CoreStatsNameInGrid;\r\n        $scope.CoreStatProperties.Value.Choices.choices = [];\r\n        $scope.tabName = data.tabname;\r\n        $scope.buttontext = data.btntext;\r\n\t\t$scope.IsButtonDisabled = data.IsenableBtn;\r\n\t\t$scope.CoreStatProperties.Value.Choices.choices.push({ ChoiceName: '' });\r\n        if ($scope.OperationTypeMode == \"Create\") {\r\n            $scope.DisableField = false;\r\n        }\r\n        rulesetService.GetTypes().then(function (data) {\r\n            if (data.data.StatusCode == 200) {\r\n\t\t\t\t$scope.Types = data.data.PayLoad;\r\n\t\t\t\tconsole.log(\"data.data.PayLoad\", data.data.PayLoad);\r\n                $scope.weight = data.data.PayLoad[6].Units\r\n                $scope.Height = data.data.PayLoad[8].Units\r\n                $scope.Volume = data.data.PayLoad[9].Units\r\n            }\r\n            else {\r\n                if (data.data.StatusCode == 400) {\r\n                    if (data.data.ShowToUser == true) {\r\n                        toaster.pop('error', data.data.ErrorMessage);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $scope.CoreStatOnChange = function () {\r\n            if ($scope.CoreStatProperties.TypeId == undefined) {\r\n                $scope.IsButtonDisabled = true;\r\n                $scope.ShowChoices = false;\r\n                $scope.ShowCalculation = false;\r\n                $scope.ShowValueandSubvalue = false;\r\n                $scope.ShowCurrentMaxValue = false;\r\n            }\r\n            else if ($scope.CoreStatProperties.TypeId == 2) {\r\n                $scope.ShowChoices = true;\r\n                $scope.IsButtonDisabled = false;\r\n                $scope.ShowCalculation = false;\r\n                $scope.ShowValueandSubvalue = false;\r\n                $scope.ShowCurrentMaxValue = false;\r\n            }\r\n            else if ($scope.CoreStatProperties.TypeId == 16) {\r\n                $scope.ShowCalculation = true;\r\n                $scope.IsButtonDisabled = false;\r\n                $scope.ShowChoices = false;\r\n                $scope.ShowValueandSubvalue = false;\r\n                $scope.ShowCurrentMaxValue = false;\r\n            }\r\n            else if ($scope.CoreStatProperties.TypeId == 5) {\r\n                $scope.ShowCalculation = false;\r\n                $scope.IsButtonDisabled = false;\r\n                $scope.ShowChoices = false;\r\n                $scope.ShowValueandSubvalue = true;\r\n                $scope.ShowCurrentMaxValue = false;\r\n            }\r\n            else if ($scope.CoreStatProperties.TypeId == 6) {\r\n                $scope.ShowCalculation = false;\r\n                $scope.IsButtonDisabled = false;\r\n                $scope.ShowChoices = false;\r\n                $scope.ShowValueandSubvalue = false;\r\n                $scope.ShowCurrentMaxValue = true;\r\n            }\r\n            else if ($scope.CoreStatProperties.TypeId > 0 || $scope.CoreStatProperties.Name != \"\") {\r\n                $scope.ShowChoices = false;\r\n                $scope.ShowCalculation = false;\r\n                $scope.IsButtonDisabled = false;\r\n                $scope.ShowValueandSubvalue = false;\r\n                $scope.ShowCurrentMaxValue = false;\r\n            }\r\n            else {\r\n                $scope.IsButtonDisabled = false;\r\n            }\r\n        }\r\n\r\n       \r\n        $scope.AddValueSubvalue = function (value) {\r\n            if (value == 'Value') {\r\n                $scope.valueName = value;\r\n            }\r\n            else if (value == 'SubValue') {\r\n                $scope.valueName = value;\r\n            }\r\n        }\r\n\r\n        $scope.Addcurrentmax = function (value) {\r\n            if (value == 'CurrentValue') {\r\n                $scope.CurrentMaxvalue = value;\r\n            }\r\n            else if (value == 'MaxValue') {\r\n                $scope.CurrentMaxvalue = value;\r\n            }\r\n        }\r\n        $scope.ExistCoreStatOnChange = function () {\r\n            if ($scope.CoreStatsInGrid.Name != undefined) {\r\n                var a = \"[abc]\";\r\n                a = a.replace(\"abc\", $scope.CoreStatsInGrid.Name.Name);\r\n                $scope.tempVar = a;\r\n            }\r\n            else {\r\n                if ($scope.Formula == \"\" || $scope.Formula == undefined) {\r\n                    $scope.Formula = \"\";\r\n                }\r\n                else {\r\n                    $scope.Formula = $scope.Formula;\r\n                }\r\n            }\r\n        }\r\n        $scope.CreateFormula = function () {\r\n            if ($scope.Formula == \"\" || $scope.Formula == undefined) {\r\n                $scope.Formula = $scope.tempVar;\r\n            }\r\n            else if ($scope.Formula != \"\") {\r\n                $scope.Formula = $scope.Formula + \"\" + $scope.tempVar;\r\n            }\r\n        }\r\n        $scope.addChoice = function () {\r\n            $scope.CoreStatProperties.Value.Choices.choices.push({ ChoiceName: '' });\r\n        }\r\n        $scope.RemoveChoice = function (choice) {\r\n            var idx = $scope.CoreStatProperties.Value.Choices.choices.indexOf(choice);\r\n            $scope.CoreStatProperties.Value.Choices.choices.splice(idx, 1);\r\n        }\r\n       \r\n        $scope.SaveCorestat = function () {\r\n            //$scope.CoreStatsNameInGrid = rulesetDataShareService.getRulesetCoreStatData();\r\n\t\t\t//alert(\"Test\");\r\n            if ($scope.CoreStatProperties.Name == \"\" || $scope.CoreStatProperties.Name === undefined || $scope.CoreStatProperties.Name == null) {\r\n                toaster.pop('error', \"Please enter CoreStat Name\");\r\n                return;\r\n            }\r\n            else if ($scope.CoreStatProperties.TypeId == 0 || $scope.CoreStatProperties.TypeId === undefined || $scope.CoreStatProperties.TypeId == \"\") {\r\n                toaster.pop('error', \"Please Select CoreStat Type\");\r\n                return;\r\n            }\r\n            else if ($scope.CoreStatsNameInGrid != undefined) {\r\n                for (var i = 0; i < $scope.CoreStatsNameInGrid.length; i++) {\r\n                    if ($scope.CoreStatsNameInGrid[i].Name === undefined) {\r\n                        toaster.pop('error', \"Please enter CoreStat Name\");\r\n                        return;\r\n                    }\r\n                   \r\n                }\r\n            }\r\n            for (var k = 0; k < $scope.Types.length; k++) {\r\n                if ($scope.Types[k].TypeId == $scope.CoreStatProperties.TypeId) {\r\n                    $scope.CoreStatProperties.TypeName = $scope.Types[k].Name;\r\n                    if (($scope.Types[k].TypeId == 16) && ($scope.CoreStatProperties.TypeId == 16)) {\r\n                        $scope.CoreStatProperties.Value.Calculation.formulae = $scope.Formula;\r\n                    }\r\n                   \r\n                }\r\n            }\r\n            $uibModalInstance.close($scope.CoreStatProperties);\r\n\r\n        }\r\n\r\n\r\n        $scope.cancel = function () {\r\n\r\n            $uibModalInstance.close('cancel');\r\n        }\r\n\r\n\r\n    }]);\r\n\r\n    module.controller('dialogAddCorestatValues', ['$scope', '$uibModalInstance', 'data', 'rulesetService', 'rulesetDataShareService', function ($scope, $uibModalInstance, data, rulesetService, rulesetDataShareService) {\r\n\r\n        $scope.characters = data.scope;\r\n        $scope.SaveCorestatValues = function () {\r\n           // $(\"#loading\").css(\"display\", \"block\");\r\n            rulesetDataShareService.setcorestatvalue($scope.characters);\r\n            $uibModalInstance.close($scope.characters);\r\n        }\r\n        $scope.cancel = function () {\r\n\r\n            $uibModalInstance.close('cancel');\r\n        }\r\n\r\n    }]);\r\n\r\n    module.controller('dialogAssociatedSpells', ['$scope', '$uibModalInstance', 'data', 'rulesetService', 'dialogs', function ($scope, $uibModalInstance, data, characterService, dialogs) {\r\n\r\n        $scope.Spells = data.scope;\r\n\r\n        var AssociatedSpells = data.associatedspells;\r\n\r\n        if (AssociatedSpells != null && AssociatedSpells != undefined) {\r\n            for (var i = 0; i < $scope.Spells.length; i++) {\r\n                for (var j = 0; j < AssociatedSpells.length; j++) {\r\n                    if ($scope.Spells[i].SpellProperties[0].Value.Text.value == AssociatedSpells[j].SpellProperties[0].Value.Text.value) {\r\n                        $scope.Spells[i].Selected = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        $scope.SaveAssociatedSpells = function () {\r\n            var exampleArray = [];\r\n            for (var i = 0; i < $scope.Spells.length; i++) {\r\n                if ($scope.Spells[i].Selected) {\r\n                    exampleArray.push($scope.Spells[i]);\r\n                }\r\n            }\r\n            $uibModalInstance.close(exampleArray)\r\n        }\r\n\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.close('cancel');\r\n        }\r\n\r\n\r\n    }]);\r\n\r\n\tmodule.controller('dialogAssociatedRulesetItems', ['$scope', '$uibModalInstance', 'data', 'rulesetService', 'dialogs', function ($scope, $uibModalInstance, data, characterService, dialogs) {\r\n\r\n\t\t$scope.RulesetItems = data.scope;\r\n\r\n\t\t$scope.SaveAssociatedRulesetItems = function () {\r\n\t\t\tconsole.log(\"In rulesetsItems: \" + $scope.RulesetItems.length);\r\n\t\t\tvar exampleArray = [];\r\n\t\t\tfor (var i = 0; i < $scope.RulesetItems.length; i++) {\r\n\t\t\t\tconsole.log(\"$scope.RulesetItems[i].Selected: \" + $scope.RulesetItems[i].Selected);\r\n\t\t\t\tif ($scope.RulesetItems[i].Selected) {\r\n\t\t\t\t\texampleArray.push($scope.RulesetItems[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$uibModalInstance.close(exampleArray)\r\n\t\t}\r\n\r\n\r\n\t\t$scope.cancel = function () {\r\n\t\t\t$uibModalInstance.close('cancel');\r\n\t\t}\r\n\r\n\r\n\t}]);\r\n\r\n\tmodule.controller('dialogAssociatedRulesetSpells', ['$scope', '$uibModalInstance', 'data', 'rulesetService', 'dialogs', function ($scope, $uibModalInstance, data, characterService, dialogs) {\r\n\r\n\t\t$scope.RulesetSpells = data.scope;\r\n\r\n\t\t$scope.SaveAssociatedRulesetSpells = function () {\r\n\t\t\tconsole.log(\"In rulesetsItems: \" + $scope.RulesetSpells.length);\r\n\t\t\tvar exampleArray = [];\r\n\t\t\tfor (var i = 0; i < $scope.RulesetSpells.length; i++) {\r\n\t\t\t\tconsole.log(\"$scope.RulesetItems[i].Selected: \" + $scope.RulesetSpells[i].Selected);\r\n\t\t\t\tif ($scope.RulesetSpells[i].Selected) {\r\n\t\t\t\t\texampleArray.push($scope.RulesetSpells[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$uibModalInstance.close(exampleArray)\r\n\t\t}\r\n\r\n\r\n\t\t$scope.cancel = function () {\r\n\t\t\t$uibModalInstance.close('cancel');\r\n\t\t}\r\n\r\n\r\n\t}]);\r\n\r\n\tmodule.controller('dialogAssociatedRulesetAbilities', ['$scope', '$uibModalInstance', 'data', 'rulesetService', 'dialogs', function ($scope, $uibModalInstance, data, characterService, dialogs) {\r\n\r\n\t\t$scope.RulesetAbilities = data.scope;\r\n\r\n\t\t$scope.SaveAssociatedRulesetAbilities = function () {\r\n\t\t\tconsole.log(\"In rulesetsAbilities: \" + $scope.RulesetAbilities.length);\r\n\t\t\tvar exampleArray = [];\r\n\t\t\tfor (var i = 0; i < $scope.RulesetAbilities.length; i++) {\r\n\t\t\t\tconsole.log(\"$scope.RulesetItems[i].Selected: \" + $scope.RulesetAbilities[i].Selected);\r\n\t\t\t\tif ($scope.RulesetAbilities[i].Selected) {\r\n\t\t\t\t\texampleArray.push($scope.RulesetAbilities[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$uibModalInstance.close(exampleArray)\r\n\t\t}\r\n\r\n\r\n\t\t$scope.cancel = function () {\r\n\t\t\t$uibModalInstance.close('cancel');\r\n\t\t}\r\n\r\n\r\n\t}]);\r\n\r\n    module.controller('dialogAssociatedAbilities', ['$scope', '$uibModalInstance', 'data', 'rulesetService', 'dialogs', function ($scope, $uibModalInstance, data, characterService, dialogs) {\r\n        $scope.Abilities = data.scope;\r\n\r\n        var AssociatedAbilities = data.associatedabilities;\r\n\r\n        if (AssociatedAbilities != null && AssociatedAbilities != undefined) {\r\n            for (var i = 0; i < $scope.Abilities.length; i++) {\r\n                for (var j = 0; j < AssociatedAbilities.length; j++) {\r\n                    if ($scope.Abilities[i].AbilityProperties[0].Value.Text.value == AssociatedAbilities[j].AbilityProperties[0].Value.Text.value) {\r\n                        $scope.Abilities[i].Selected = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        $scope.SaveAssociatedAbilities = function () {\r\n            var exampleArray = [];\r\n            for (var i = 0; i < $scope.Abilities.length; i++) {\r\n                if ($scope.Abilities[i].Selected) {\r\n                    exampleArray.push($scope.Abilities[i]);\r\n                }\r\n            }\r\n            $uibModalInstance.close(exampleArray)\r\n        }\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.close('cancel');\r\n        }\r\n\r\n    }]);\r\n\r\n    module.controller('dialogCreateItem', ['$scope', '$uibModalInstance', 'data', 'toaster', 'rulesetService', 'dialogs', function ($scope, $uibModalInstance, data, toaster, rulesetService, dialogs) {\r\n\r\n        var Spells = data.Spells;\r\n        var Abilities = data.Abilities;\r\n\r\n        $scope.Properties = data.scope;\r\n        $scope.tabName = data.tabName;\r\n        $scope.buttontext = data.btntext;\r\n        $scope.IsBtnDisabled = data.IsBtnDisabled;\r\n        $scope.Content_ItemProperties = data.Content_ItemProperties;\r\n        $scope.ShowAssociatedSpells = true;\r\n        $scope.ShowAssociatedAbilities = true;\r\n\t\t$scope.showimagebtns = false;\r\n\t\tconsole.log(\"$scope.Properties: \", $scope.Properties);\r\n\t\t//Upload file\r\n\t\t$scope.OpenFile = function () {\r\n\t\t\tconsole.log(\"Open and upload file...\");\r\n\t\t\t$(\"#newRulesetImage\").click();\r\n\t\t\t//var input = $('input[type=file]');//.val();\r\n\t\t\t//input.click();\r\n\t\t\t//return false;\r\n\t\t}\r\n\r\n\t\t$scope.ItemImageUpload = function (input) {\r\n\t\t\tconsole.log(\"File Input: \", input);\r\n\t\t\t$scope.showimagebtns = false;\r\n\t\t\tif (input.files && input.files[0]) {\r\n\t\t\t\tvar reader = new FileReader();\r\n\t\t\t\treader.onload = function (e) {\r\n\t\t\t\t\t//console.log(\"e.target.result: \"+e.target.result);\r\n\t\t\t\t\t$scope.$apply(function () {\r\n\r\n\t\t\t\t\t\t$scope.Properties[1].Value.Image.image = e.target.result;\r\n\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t};\r\n\t\t\t\treader.readAsDataURL(input.files[0]);\r\n\r\n\t\t\t}\r\n\t\t}\r\n        $scope.OpenAssociatedSpells = function () {\r\n            var dlg = dialogs.create('/views/dialogs/AssociatedSpells.html', 'dialogAssociatedSpells',\r\n                { scope: Spells, associatedspells: $scope.AssociatedSpells }\r\n            );\r\n\r\n            dlg.result.then(function (res) {\r\n                $scope.AssociatedSpells = res;\r\n            });\r\n        }\r\n\r\n        $scope.OpenAssociatedAbilities = function () {\r\n            var dlg = dialogs.create('/views/dialogs/AssociatedAbilities.html', 'dialogAssociatedAbilities',\r\n                { scope: Abilities, associatedabilities: $scope.AssociatedAbilities }\r\n            );\r\n\r\n            dlg.result.then(function (res) {\r\n                $scope.AssociatedAbilities = res;\r\n            });\r\n        }\r\n\r\n        $scope.Create = function () {\r\n            if ($scope.Content_ItemProperties != undefined) {\r\n                for (var i = 0; i < $scope.Content_ItemProperties.length; i++) {\r\n                    if ($scope.Content_ItemProperties[i].toLowerCase() == $scope.Properties[0].Value.Text.value.toLowerCase()) {\r\n                        toaster.pop('Error', \"Please enter unique Item Name\");\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            var createItemResult = {};\r\n            for (var i = 0; i < $scope.Properties.length; i++) {\r\n                if ($scope.Properties[i].TypeId == 2) {\r\n                    $scope.Properties[i].Value.Choices.SelectedChoiceName = $scope.Properties[i].Value.Choices.selectedchoice.ChoiceName;\r\n                    $scope.Properties[i].Value.Choices.selectedchoice = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tif ($scope.Properties[i].TypeId == 14) {\r\n\t\t\t\t\t$scope.Properties[i].Value.Text = null;\r\n\t\t\t\t}\r\n            }\r\n            createItemResult.Properties = $scope.Properties;\r\n            createItemResult.AssociatedSpells = $scope.AssociatedSpells;\r\n            createItemResult.AssociatedAbilities = $scope.AssociatedAbilities;\r\n\r\n            $uibModalInstance.close(createItemResult);\r\n            //$uibModalInstance.close($scope.Properties);\r\n        }\r\n\r\n        $scope.ItemcloseDialog = function () {\r\n\r\n            $uibModalInstance.close($scope.CoreStatProperties);\r\n        }\r\n\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.close('cancel');\r\n        }\r\n\r\n    }]);\r\n\r\n    module.controller('dialogCreateSpell', ['$scope', '$uibModalInstance', 'data', 'toaster', 'rulesetService', function ($scope, $uibModalInstance, data, toaster, rulesetService) {\r\n        $scope.OperationTypeMode = data.SpellMode;\r\n        $scope.Content_SpellProperties = data.Content_SpellProperties;\r\n        $scope.Properties = data.scope;\r\n        $scope.tabName = data.tabName;\r\n        $scope.buttontext = data.btntext;\r\n        $scope.Create = function () {\r\n            if ($scope.Content_SpellProperties != undefined) {\r\n                for (var i = 0; i < $scope.Content_SpellProperties.length; i++) {\r\n                    if ($scope.Content_SpellProperties[i].toLowerCase() == $scope.Properties[0].Value.Text.value.toLowerCase()) {\r\n                        toaster.pop('Error', \"Please enter unique Spell Name\");\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            $uibModalInstance.close($scope.Properties);\r\n\t\t}\r\n\t\t//Upload file\r\n\t\t$scope.OpenFile = function () {\r\n\t\t\tconsole.log(\"Open and upload file...\");\r\n\t\t\t$(\"#newRulesetImage\").click();\r\n\t\t\t//var input = $('input[type=file]');//.val();\r\n\t\t\t//input.click();\r\n\t\t\t//return false;\r\n\t\t}\r\n\r\n\t\t$scope.ItemImageUpload = function (input) {\r\n\t\t\tconsole.log(\"File Input: \", input);\r\n\t\t\t$scope.showimagebtns = false;\r\n\t\t\tif (input.files && input.files[0]) {\r\n\t\t\t\tvar reader = new FileReader();\r\n\t\t\t\treader.onload = function (e) {\r\n\t\t\t\t\t//console.log(\"e.target.result: \"+e.target.result);\r\n\t\t\t\t\t$scope.$apply(function () {\r\n\r\n\t\t\t\t\t\t$scope.Properties[1].Value.Image.image = e.target.result;\r\n\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t};\r\n\t\t\t\treader.readAsDataURL(input.files[0]);\r\n\r\n\t\t\t}\r\n\t\t}\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.close('cancel');\r\n        }\r\n    }]);\r\n\r\n    module.controller('dialogCreateAbility', ['$scope', '$uibModalInstance', 'data', 'toaster', 'rulesetService', function ($scope, $uibModalInstance, data, toaster, rulesetService) {\r\n        $scope.OperationTypeMode = data.AbilityMode;\r\n        $scope.Content_AbilityProperties = data.Content_AbilityProperties;\r\n        $scope.Properties = data.scope;\r\n        $scope.tabName = data.tabName;\r\n        $scope.buttontext = data.btntext;\r\n        $scope.ShowAssociatedSpells = false;\r\n\t\t$scope.ShowAssociatedAbilities = false;\r\n\t\t$scope.showimagebtns = false;\r\n\t\t//Upload file\r\n\t\t$scope.OpenFile = function () {\r\n\t\t\tconsole.log(\"Open and upload file...\");\r\n\t\t\t$(\"#newRulesetImage\").click();\r\n\t\t\t//var input = $('input[type=file]');//.val();\r\n\t\t\t//input.click();\r\n\t\t\t//return false;\r\n\t\t}\r\n\r\n\t\t$scope.ItemImageUpload = function (input) {\r\n\t\t\tconsole.log(\"File Input: \", input);\r\n\t\t\t$scope.showimagebtns = false;\r\n\t\t\tif (input.files && input.files[0]) {\r\n\t\t\t\tvar reader = new FileReader();\r\n\t\t\t\treader.onload = function (e) {\r\n\t\t\t\t\t//console.log(\"e.target.result: \"+e.target.result);\r\n\t\t\t\t\t$scope.$apply(function () {\r\n\r\n\t\t\t\t\t\t$scope.Properties[1].Value.Image.image = e.target.result;\r\n\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t};\r\n\t\t\t\treader.readAsDataURL(input.files[0]);\r\n\r\n\t\t\t}\r\n\t\t}\r\n        $scope.Create = function () {\r\n            if ($scope.Content_AbilityProperties != undefined) {\r\n                for (var i = 0; i < $scope.Content_AbilityProperties.length; i++) {\r\n                    if ($scope.Content_AbilityProperties[i].toLowerCase() == $scope.Properties[0].Value.Text.value.toLowerCase()) {\r\n                        toaster.pop('Error', \"Please enter unique Ability Name\");\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            for (var i = 0; i < $scope.Properties.length; i++) {\r\n                if ($scope.Properties[i].TypeId == 2) {\r\n                    $scope.Properties[i].Value.Choices.SelectedChoiceName = $scope.Properties[i].Value.Choices.selectedchoice.ChoiceName;\r\n                    $scope.Properties[i].Value.Choices.selectedchoice = \"\";\r\n                }\r\n            }\r\n            $uibModalInstance.close($scope.Properties);\r\n        }\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.close('cancel');\r\n        }\r\n    }]);\r\n\r\n    module.controller('ShowAllTileContent', ['$scope', '$uibModalInstance', 'data', 'rulesetService', function ($scope, $uibModalInstance, data, rulesetService) {\r\n\r\n        $scope.Content = data.scope;\r\n        $scope.ShowAssociatedSpells = false;\r\n        $scope.ShowAssociatedAbilities = false;\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.close('cancel');\r\n        }\r\n    }]);\r\n\r\n    module.controller('dialogTabReorder', ['$scope', '$uibModalInstance', '$filter', 'data', function ($scope, $uibModalInstance, $filter, data) {\r\n        $scope.temp = data;\r\n\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.dismiss('Canceled');\r\n        };\r\n\r\n        $scope.save = function () {\r\n            $uibModalInstance.close($scope.items);\r\n        };\r\n\r\n        $scope.hitEnter = function (evt) {\r\n            if (evt.which === 13 && !(angular.equals($scope.name, null) || angular.equals($scope.name, '')))\r\n                $scope.save();\r\n        };\r\n\r\n        (function () {\r\n\r\n            var copy = (data.items || []).slice();\r\n\r\n            data.sorter(copy);\r\n            $scope.items = copy;\r\n        })();\r\n\r\n    }]);\r\n   \r\n    module.controller('dialogCopyCoreStat', ['$scope', '$uibModalInstance', 'data', 'toaster', 'rulesetService', function ($scope, $uibModalInstance, data, toaster, rulesetService) {\r\n        $scope.OperationTypeMode = data.CoreStatMode;\r\n        $scope.CoreStatProperties = data.scope;\r\n        $scope.CoreStatsInGrid = data.CoreStatsInGrid;\r\n        $scope.CoreStatsNameInGrid = data.CoreStatsNameInGrid;\r\n        $scope.tabName = data.tabname;\r\n        $scope.copyitem = data.item;\r\n        $scope.count = data.count;\r\n        $scope.buttontext = data.btntext;\r\n        $scope.IsButtonDisabled = data.IsenableBtn;\r\n        $scope.OperationTypeMode = data.CoreStatMode;\r\n        if ($scope.OperationTypeMode == \"Edit\") {\r\n            $scope.DisablecopyFields = false;\r\n            $scope.DisableNameField = true;\r\n        }\r\n        else if ($scope.OperationTypeMode == \"Copy\") {\r\n            $scope.CoreStatProperties.Name = \"\";\r\n            $scope.DisablecopyFields = true;\r\n            $scope.DisableNameField = false;\r\n        }\r\n        if ($scope.CoreStatProperties.TypeId == 2) {\r\n            $scope.ShowChoices = true;\r\n            $scope.ShowCalculation = false;\r\n            $scope.ShowValueandSubvalue = false;\r\n            $scope.ShowCurrentMaxValue = false;\r\n        }\r\n        if ($scope.CoreStatProperties.TypeId == 16) {\r\n            $scope.ShowCalculation = true;\r\n            $scope.ShowChoices = false;\r\n            $scope.ShowValueandSubvalue = false;\r\n            $scope.ShowCurrentMaxValue = false;\r\n            $scope.Formula = $scope.CoreStatProperties.Value.Calculation.formulae;\r\n        }\r\n        if ($scope.CoreStatProperties.TypeId == 5) {\r\n            $scope.ValSub = $scope.CoreStatProperties.ValSub;\r\n            $scope.ShowCalculation = false;\r\n            $scope.ShowChoices = false;\r\n            $scope.ShowValueandSubvalue = true;\r\n            $scope.IsButtonDisabled = false;\r\n            $scope.ShowCurrentMaxValue = false;\r\n        }\r\n        if ($scope.CoreStatProperties.TypeId == 6) {\r\n            $scope.CurrentMaxVal = $scope.CoreStatProperties.CurrentMaxVal;\r\n            $scope.ShowCalculation = false;\r\n            $scope.ShowChoices = false;\r\n            $scope.ShowValueandSubvalue = false;\r\n            $scope.IsButtonDisabled = false;\r\n            $scope.ShowCurrentMaxValue = true;\r\n        }\r\n\r\n        rulesetService.GetTypes().then(function (data) {\r\n            if (data.data.StatusCode == 200) {\r\n                $scope.Types = data.data.PayLoad;\r\n                $scope.weight = data.data.PayLoad[6].Units\r\n                $scope.Height = data.data.PayLoad[8].Units\r\n                $scope.Volume = data.data.PayLoad[9].Units\r\n            }\r\n            else {\r\n                if (data.data.StatusCode == 400) {\r\n                    if (data.data.ShowToUser == true) {\r\n                        alert(data.data.ErrorMessage);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $scope.addChoice = function () {\r\n            $scope.CoreStatProperties.Value.Choices.choices.push({ ChoiceName: '' });\r\n        }\r\n        $scope.RemoveChoice = function (choice) {\r\n            var idx = $scope.CoreStatProperties.Value.Choices.choices.indexOf(choice);\r\n            $scope.CoreStatProperties.Value.Choices.choices.splice(idx, 1);\r\n        }\r\n        $scope.CoreStatOnChange = function () {\r\n            if ($scope.CoreStatProperties.TypeId == undefined) {\r\n                $scope.IsButtonDisabled = true;\r\n                $scope.ShowChoices = false;\r\n                $scope.ShowCalculation = false;\r\n                $scope.ShowValueandSubvalue = false;\r\n                $scope.ShowCurrentMaxValue = false;\r\n            }\r\n            if ($scope.CoreStatProperties.TypeId == 2) {\r\n                $scope.ShowChoices = true;\r\n                $scope.IsButtonDisabled = false;\r\n                $scope.ShowCalculation = false;\r\n                $scope.ShowValueandSubvalue = false;\r\n                $scope.ShowCurrentMaxValue = false;\r\n            }\r\n            else {\r\n                $scope.ShowChoices = false;\r\n            }\r\n            if ($scope.CoreStatProperties.TypeId == 16) {\r\n                $scope.ShowCalculation = true;\r\n                $scope.IsButtonDisabled = false;\r\n                $scope.ShowChoices = false;\r\n                $scope.ShowValueandSubvalue = false;\r\n                $scope.ShowCurrentMaxValue = false;\r\n            }\r\n            else {\r\n                $scope.ShowCalculation = false;\r\n            }\r\n            if ($scope.CoreStatProperties.TypeId == 5) {\r\n                $scope.ShowCalculation = false;\r\n                $scope.IsButtonDisabled = false;\r\n                $scope.ShowChoices = false;\r\n                $scope.ShowValueandSubvalue = true;\r\n                $scope.ShowCurrentMaxValue = false;\r\n            }\r\n            else {\r\n                $scope.ShowValueandSubvalue = false;\r\n            }\r\n            if ($scope.CoreStatProperties.TypeId == 6) {\r\n                $scope.ShowCalculation = false;\r\n                $scope.IsButtonDisabled = false;\r\n                $scope.ShowChoices = false;\r\n                $scope.ShowValueandSubvalue = false;\r\n                $scope.ShowCurrentMaxValue = true;\r\n            }\r\n            else {\r\n                $scope.ShowCurrentMaxValue = false;\r\n            }\r\n        }\r\n        $scope.AddValueSubvalue = function (value) {\r\n            if (value == 'Value') {\r\n                $scope.valueName = value;\r\n            }\r\n            else if (value == 'SubValue') {\r\n                $scope.valueName = value;\r\n            }\r\n        }\r\n        $scope.Addcurrentmax = function (value) {\r\n            if (value == 'CurrentValue') {\r\n                $scope.CurrentMaxvalue = value;\r\n            }\r\n            else if (value == 'MaxValue') {\r\n                $scope.CurrentMaxvalue = value;\r\n            }\r\n        }\r\n      \r\n        $scope.ExistCoreStatOnChange = function () {\r\n            if ($scope.CoreStatsInGrid.Name != undefined) {\r\n                var a = \"[abc]\";\r\n                a = a.replace(\"abc\", $scope.CoreStatsInGrid.Name.Name);\r\n                $scope.tempVar = a;\r\n            }\r\n            else {\r\n                if ($scope.Formula == \"\" || $scope.Formula == undefined) {\r\n                    $scope.Formula = \"\";\r\n                }\r\n                else {\r\n                    $scope.Formula = $scope.Formula;\r\n                }\r\n            }\r\n        }\r\n        $scope.CreateFormula = function () {\r\n            if ($scope.Formula == \"\" || $scope.Formula == undefined) {\r\n                $scope.Formula = $scope.tempVar;\r\n            }\r\n            else if ($scope.Formula != \"\") {\r\n                $scope.Formula = $scope.Formula + \"\" + $scope.tempVar;\r\n            }\r\n        }\r\n        \r\n        $scope.SaveCorestat = function () {\r\n            //$scope.CoreStatsNameInGrid = rulesetDataShareService.getRulesetCoreStatData();\r\n            //$scope.CoreStatsNameInGrid = $scope.CoreStatsNameInGrid;\r\n            if ($scope.CoreStatProperties.Name == \"\" || $scope.CoreStatProperties.Name === undefined || $scope.CoreStatProperties.Name == null) {\r\n                toaster.pop('error', \"Please enter CoreStat Name\");\r\n                return;\r\n            }\r\n            else if ($scope.CoreStatProperties.TypeId == 0 || $scope.CoreStatProperties.TypeId === undefined || $scope.CoreStatProperties.TypeId == \"\") {\r\n                toaster.pop('error', \"Please Select CoreStat Type\");\r\n                return;\r\n            }\r\n            else if ($scope.CoreStatsNameInGrid != undefined) {\r\n                for (var i = 0; i < $scope.CoreStatsNameInGrid.length; i++) {\r\n                    if ($scope.CoreStatsNameInGrid[i].TypeId == 5) {\r\n                      \r\n                    }\r\n                    else if ($scope.CoreStatsNameInGrid[i].TypeId == 6) {\r\n                      \r\n                    }\r\n                  \r\n                }\r\n            }\r\n            for (var k = 0; k < $scope.Types.length; k++) {\r\n                $scope.valueName = $scope.ValSub;\r\n                $scope.CurrentMaxvalue = $scope.CurrentMaxVal;\r\n                if ($scope.Types[k].TypeId == $scope.CoreStatProperties.TypeId) {\r\n                    $scope.CoreStatProperties.TypeName = $scope.Types[k].Name;\r\n                    if (($scope.Types[k].TypeId == 16) && ($scope.CoreStatProperties.TypeId == 16)) {\r\n                        $scope.CoreStatProperties.Value.Calculation.formulae = $scope.Formula;\r\n                    }\r\n                   \r\n                }\r\n                //}\r\n\r\n            }\r\n            $uibModalInstance.close($scope.CoreStatProperties);\r\n        }\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.close('cancel');\r\n        }\r\n\r\n    }]);\r\n\r\n    module.controller('dialogCopyItem', ['$scope', '$uibModalInstance', 'data', 'toaster', 'rulesetService', 'characterService', 'dialogs', function ($scope, $uibModalInstance, data, toaster, rulesetService, characterService, dialogs) {\r\n\r\n\r\n        $scope.AssociatedSpells = data.AssociatedSpells;\r\n        $scope.AssociatedAbilities = data.AssociatedAbilities;\r\n\r\n        var Spells = data.Spells;\r\n        var Abilities = data.Abilities;\r\n        $scope.OperationTypeMode = data.ItemMode;\r\n        $scope.Content_ItemProperties = data.Content_ItemProperties;\r\n        $scope.Properties = data.scope;\r\n        $scope.contentType = data.contentType\r\n        $scope.tabName = data.tabName;\r\n        $scope.copyitem = data.item;\r\n        $scope.count = data.count;\r\n        $scope.buttontext = data.btntext;\r\n        $scope.IsBtnDisabled = data.IsBtnDisabled;\r\n        $scope.ShowAssociatedSpells = true;\r\n        $scope.ShowAssociatedAbilities = true;\r\n        $scope.SelectAssociatedSpells = data.SelectAssociatedSpells ;\r\n\t\t$scope.SelectAssociatedAbilities = data.SelectAssociatedAbilities;\r\n\t\t//Upload file\r\n\t\t$scope.OpenFile = function () {\r\n\t\t\tconsole.log(\"Open and upload file...\");\r\n\t\t\t$(\"#newRulesetImage\").click();\r\n\t\t\t//var input = $('input[type=file]');//.val();\r\n\t\t\t//input.click();\r\n\t\t\t//return false;\r\n\t\t}\r\n\r\n\t\t$scope.ItemImageUpload = function (input) {\r\n\t\t\tconsole.log(\"File Input: \", input);\r\n\t\t\t$scope.showimagebtns = false;\r\n\t\t\tif (input.files && input.files[0]) {\r\n\t\t\t\tvar reader = new FileReader();\r\n\t\t\t\treader.onload = function (e) {\r\n\t\t\t\t\t//console.log(\"e.target.result: \"+e.target.result);\r\n\t\t\t\t\t$scope.$apply(function () {\r\n\r\n\t\t\t\t\t\t$scope.Properties[1].Value.Image.image = e.target.result;\r\n\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t};\r\n\t\t\t\treader.readAsDataURL(input.files[0]);\r\n\r\n\t\t\t}\r\n\t\t}\r\n        $scope.Create = function () {\r\n            if ($scope.Content_ItemProperties != undefined) {\r\n                for (var i = 0; i < $scope.Content_ItemProperties.length; i++) {\r\n                    if ($scope.Content_ItemProperties[i].toLowerCase() == $scope.Properties[0].Value.Text.value.toLowerCase()) {\r\n                        //toaster.pop('Error', \"Please enter unique Item Name\");\r\n                        alert(\"Please enter unique Item Name\");\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            var createItemResult = {};\r\n           \r\n            createItemResult.ItemProperties = $scope.Properties;\r\n            createItemResult.AssociatedSpells = $scope.AssociatedSpells;\r\n            createItemResult.AssociatedAbilities = $scope.AssociatedAbilities;\r\n\r\n            $uibModalInstance.close(createItemResult);\r\n        }\r\n\r\n        $scope.OpenAssociatedSpells = function () {\r\n            var dlg = dialogs.create('/views/dialogs/AssociatedSpells.html', 'dialogAssociatedSpells',\r\n                { scope: Spells, associatedspells: $scope.AssociatedSpells }\r\n            );\r\n\r\n            dlg.result.then(function (res) {\r\n                $scope.AssociatedSpells = res;\r\n            });\r\n        }\r\n\r\n        $scope.OpenAssociatedAbilities = function () {\r\n            var dlg = dialogs.create('/views/dialogs/AssociatedAbilities.html', 'dialogAssociatedAbilities',\r\n                { scope: Abilities, associatedabilities: $scope.AssociatedAbilities }\r\n            );\r\n\r\n            dlg.result.then(function (res) {\r\n                $scope.AssociatedAbilities = res;\r\n            });\r\n        }\r\n\r\n        $scope.DropItem = function () {\r\n            if ($scope.Properties[0].CharacterItemId != undefined) {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Delete',\r\n                    'Are you sure you want to delete this Item, \"' + $scope.Properties[0].Value.Text.value + '\", and all associated pages, tabs, and tiles?',\r\n                    {}\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function (res) {\r\n                        if (res == \"yes\") {\r\n                            var deleteitem = characterService.DeleteCharacterContent($scope.Properties[0].CharacterItemId).then(function (data) {\r\n                                if (data.data.StatusCode == 200) {\r\n                                    $scope.Properties.Action = \"Delete\";\r\n                                    $uibModalInstance.close($scope.Properties);\r\n                                }\r\n\r\n\r\n                            })\r\n                        }\r\n\r\n                    })\r\n            }\r\n            else if ($scope.Properties[0].CharacterSpellValueId != undefined) {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Delete',\r\n                    'Are you sure you want to delete this Spell, \"' + $scope.Properties[0].Value.Text.value + '\"?',\r\n                    {}\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function (res) {\r\n                        if (res == \"yes\") {\r\n                            var deletespell = characterService.DeleteCharacterSpellContent($scope.Properties[0].CharacterSpellId).then(function (data) {\r\n                                if (data.data.StatusCode == 200) {\r\n                                    $scope.Properties.Action = \"Delete\";\r\n                                    $uibModalInstance.close($scope.Properties);\r\n                                }\r\n\r\n\r\n                            })\r\n                        }\r\n\r\n                    })\r\n            }\r\n            else if ($scope.Properties[0].CharacterAbilityValueId != undefined) {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Delete',\r\n                    'Are you sure you want to delete this Ability, \"' + $scope.Properties[0].Value.Text.value + '\",?',\r\n                    {}\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function (res) {\r\n                        if (res == \"yes\") {\r\n                            var deleteability = characterService.DeleteCharacterAbilityContent($scope.Properties[0].CharacterAbilityId).then(function (data) {\r\n                                if (data.data.StatusCode == 200) {\r\n                                    $scope.Properties.Action = \"Delete\";\r\n                                    $uibModalInstance.close($scope.Properties);\r\n                                }\r\n\r\n                            });\r\n                        }\r\n\r\n                    });\r\n            }\r\n\r\n\r\n            //$uibModalInstance.close($scope.Properties);\r\n        }\r\n        $scope.EditItem = function () {\r\n            $scope.pageName = \"Editing Item\";\r\n            $scope.buttontext = \"Update\";\r\n            $scope.IsButtonDisabled = true;\r\n            $scope.isBtnShow = true;\r\n            var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                { scope: $scope.Properties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow }\r\n\r\n            );\r\n\r\n            dlg.result.then(function (res) {\r\n                $scope.Properties = res;\r\n                $scope.Properties.Action = \"Edit\";\r\n                $uibModalInstance.close($scope.Properties);\r\n            });\r\n        }\r\n        $scope.DuplicateItem = function () {\r\n            $scope.pageName = \"Copying Item\";\r\n            $scope.buttontext = \"Copy\";\r\n            $scope.IsButtonDisabled = true;\r\n            $scope.isBtnShow = true;\r\n            var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                { scope: item.CharacterItemsValues, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow }\r\n\r\n            );\r\n            dlg.result.then(function (res) {\r\n                $scope.Properties = res;\r\n                $scope.Properties.Action = \"Copy\";\r\n                $uibModalInstance.close($scope.Properties);\r\n            });\r\n\r\n        }\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.close('cancel');\r\n        }\r\n    }]);\r\n    module.controller('dialogCopySpell', ['$scope', '$uibModalInstance', 'data', 'toaster', 'rulesetService', function ($scope, $uibModalInstance, data, toaster, rulesetService) {\r\n        $scope.OperationTypeMode = data.SpellMode;\r\n        $scope.Content_SpellProperties = data.Content_SpellProperties;\r\n        $scope.Properties = data.scope;\r\n        $scope.tabName = data.tabName;\r\n        $scope.copyitem = data.item;\r\n        $scope.count = data.count;\r\n        $scope.buttontext = data.btntext;\r\n\r\n        $scope.SelectAssociatedSpells = false;\r\n\t\t$scope.ShowAssociatedAbilities = false;\r\n\t\t$scope.showimagebtns = false;\r\n\t\t//Upload file\r\n\t\t$scope.OpenFile = function () {\r\n\t\t\tconsole.log(\"Open and upload file...\");\r\n\t\t\t$(\"#newRulesetImage\").click();\r\n\t\t\t//var input = $('input[type=file]');//.val();\r\n\t\t\t//input.click();\r\n\t\t\t//return false;\r\n\t\t}\r\n\r\n\t\t$scope.ItemImageUpload = function (input) {\r\n\t\t\tconsole.log(\"File Input: \", input);\r\n\t\t\t$scope.showimagebtns = false;\r\n\t\t\tif (input.files && input.files[0]) {\r\n\t\t\t\tvar reader = new FileReader();\r\n\t\t\t\treader.onload = function (e) {\r\n\t\t\t\t\t//console.log(\"e.target.result: \"+e.target.result);\r\n\t\t\t\t\t$scope.$apply(function () {\r\n\r\n\t\t\t\t\t\t$scope.Properties[1].Value.Image.image = e.target.result;\r\n\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t};\r\n\t\t\t\treader.readAsDataURL(input.files[0]);\r\n\r\n\t\t\t}\r\n\t\t}\r\n        $scope.Create = function () {\r\n            if ($scope.Content_SpellProperties != undefined) {\r\n                for (var i = 0; i < $scope.Content_SpellProperties.length; i++) {\r\n                    if ($scope.Content_SpellProperties[i].toLowerCase() == $scope.Properties[0].Value.Text.value.toLowerCase()) {\r\n                        //toaster.pop('Error', \"Please enter unique Spell Name\");\r\n                        toaster.pop('error', 'Please enter unique Spell Name');\r\n\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            $uibModalInstance.close($scope.Properties);\r\n        }\r\n\r\n\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.close('cancel');\r\n        }\r\n\r\n    }]);\r\n\r\n    module.controller('dialogCopyAbility', ['$scope', '$uibModalInstance', 'data', 'toaster', 'rulesetService', function ($scope, $uibModalInstance, data, toaster, rulesetService) {\r\n        $scope.OperationTypeMode = data.AbilityMode;\r\n        $scope.Content_AbilityProperties = data.Content_AbilityProperties;\r\n        $scope.Properties = data.scope;\r\n        $scope.tabName = data.tabName;\r\n        $scope.copyitem = data.item;\r\n        $scope.count = data.count;\r\n        $scope.buttontext = data.btntext;\r\n\r\n        $scope.SelectAssociatedSpells = false;\r\n\t\t$scope.ShowAssociatedAbilities = false;\r\n\t\t$scope.showimagebtns = false;\r\n\t\t//Upload file\r\n\t\t$scope.OpenFile = function () {\r\n\t\t\tconsole.log(\"Open and upload file...\");\r\n\t\t\t$(\"#newRulesetImage\").click();\r\n\t\t\t//var input = $('input[type=file]');//.val();\r\n\t\t\t//input.click();\r\n\t\t\t//return false;\r\n\t\t}\r\n\r\n\t\t$scope.ItemImageUpload = function (input) {\r\n\t\t\tconsole.log(\"File Input: \", input);\r\n\t\t\t$scope.showimagebtns = false;\r\n\t\t\tif (input.files && input.files[0]) {\r\n\t\t\t\tvar reader = new FileReader();\r\n\t\t\t\treader.onload = function (e) {\r\n\t\t\t\t\t//console.log(\"e.target.result: \"+e.target.result);\r\n\t\t\t\t\t$scope.$apply(function () {\r\n\r\n\t\t\t\t\t\t$scope.Properties[1].Value.Image.image = e.target.result;\r\n\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t};\r\n\t\t\t\treader.readAsDataURL(input.files[0]);\r\n\r\n\t\t\t}\r\n\t\t}\r\n        $scope.Create = function () {\r\n            if ($scope.Content_AbilityProperties != undefined) {\r\n                for (var i = 0; i < $scope.Content_AbilityProperties.length; i++) {\r\n                    if ($scope.Content_AbilityProperties[i].toLowerCase() == $scope.Properties[0].Value.Text.value.toLowerCase()) {\r\n                        //toaster.pop('Error', \"Please enter unique Ability Name\");\r\n                        //alert(\"Please enter unique Ability Name\");\r\n                        toaster.pop('error', \"Please enter unique Ability Name\");\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            $uibModalInstance.close($scope.Properties);\r\n        }\r\n\r\n\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.close('cancel');\r\n        }\r\n\r\n    }]);\r\n\r\n    module.controller('ShowItems', ['$scope', '$rootScope', '$uibModalInstance', 'data', 'characterService', 'dialogs', function ($scope, $rootScope, $uibModalInstance, data, characterService, dialogs) {\r\n\r\n        $scope.Properties = data.scope;\r\n        $scope.EditItem = function (item, count, num) {\r\n            if (num == 1) {\r\n                $scope.pageName = \"Editing Item\";\r\n                $scope.buttontext = \"Update\";\r\n                $scope.IsButtonDisabled = true;\r\n                $scope.isBtnShow = true;\r\n                var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                    { scope: item.CharacterItemsValues, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow, Fullscope: item }\r\n\r\n                );\r\n\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        if (count == 0) {\r\n                            $scope.RemainingItemData = [];\r\n                            for (var k = 0; k < $scope.Properties.length; k++) {\r\n                                if (k != 0) {\r\n                                    $scope.RemainingItemData.push($scope.Properties[k].CharacterItemsValues);\r\n\r\n                                }\r\n                            }\r\n                            var ItemProperties = { \"CharacterItemsValues\": res };\r\n                            $scope.Properties.splice(count);\r\n                            $scope.Properties.push(ItemProperties);\r\n                            for (var j = 0; j < $scope.RemainingItemData.length; j++) {\r\n                                var RemainingItemProperties = { \"CharacterItemsValues\": $scope.RemainingItemData[j] };\r\n                                $scope.Properties.push(RemainingItemProperties);\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            var ItemProperties = { \"CharacterItemsValues\": res };\r\n                            $scope.Properties.splice(count);\r\n                            $scope.Properties.push(ItemProperties);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else if (num == 2) {\r\n                $scope.pageName = \"Editing Spell\";\r\n                $scope.buttontext = \"Update\";\r\n                $scope.isBtnShow = true;\r\n                //var indexcount = count - 1;\r\n                var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                    { scope: item.CharacterSpellsValues, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, FullSpellscope: item }\r\n\r\n                );\r\n\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        if (count == 0) {\r\n                            $scope.RemainingSpellData = [];\r\n                            for (var k = 0; k < $scope.Properties.length; k++) {\r\n                                if (k != 0) {\r\n                                    $scope.RemainingSpellData.push($scope.Properties[k].CharacterSpellsValues);\r\n\r\n                                }\r\n                            }\r\n                            var SpellProperties = { \"CharacterSpellsValues\": res };\r\n                            $scope.Properties.splice(count);\r\n                            $scope.Properties.push(SpellProperties);\r\n                            for (var j = 0; j < $scope.RemainingSpellData.length; j++) {\r\n                                var RemainingSpellProperties = { \"CharacterSpellsValues\": $scope.RemainingSpellData[j] };\r\n                                $scope.Properties.push(RemainingSpellProperties);\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            var SpellProperties = { \"CharacterSpellsValues\": res };\r\n                            $scope.Properties.splice(count);\r\n                            $scope.Properties.push(SpellProperties);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else if (num == 3) {\r\n                $scope.pageName = \"Editing Ability\";\r\n                $scope.buttontext = \"Update\";\r\n                $scope.isBtnShow = true;\r\n                var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                    { scope: item.CharacterAbilitiesValues, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, FullAbilityScope: item }\r\n\r\n                );\r\n\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        if (count == 0) {\r\n                            $scope.RemainingAbilityData = [];\r\n                            for (var k = 0; k < $scope.Properties.length; k++) {\r\n                                if (k != 0) {\r\n                                    $scope.RemainingAbilityData.push($scope.Properties[k].CharacterAbilitiesValues);\r\n                                }\r\n                            }\r\n                            var AbilityProperties = { \"CharacterAbilitiesValues\": res };\r\n                            $scope.Properties.splice(count);\r\n                            $scope.Properties.push(AbilityProperties);\r\n                            for (var j = 0; j < $scope.RemainingAbilityData.length; j++) {\r\n                                var RemainingAbilityProperties = { \"CharacterAbilitiesValues\": $scope.RemainingAbilityData[j] };\r\n                                $scope.Properties.push(RemainingAbilityProperties);\r\n                            }\r\n                        }\r\n                        else {\r\n                            var AbilityProperties = { \"CharacterAbilitiesValues\": res };\r\n                            $scope.Properties.splice(count);\r\n                            $scope.Properties.push(AbilityProperties);\r\n                        }\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n\r\n        };\r\n        $scope.CopyItem = function (item, index, num) {\r\n            if (num == 1) {\r\n                $scope.pageName = \"Copying Item\";\r\n                $scope.buttontext = \"Copy\";\r\n                $scope.IsButtonDisabled = true;\r\n                $scope.isBtnShow = true;\r\n                var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                    { scope: item.CharacterItemsValues, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow, Fullscope: item }\r\n\r\n                );\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        var ItemProperties = { \"CharacterItemsValues\": res };\r\n                        $scope.Properties.push(ItemProperties);\r\n                    }\r\n                });\r\n            }\r\n            else if (num == 2) {\r\n                $scope.pageName = \"Copying Spell\";\r\n                $scope.buttontext = \"Copy\";\r\n                $scope.isBtnShow = true;\r\n                var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                    { scope: item.CharacterSpellsValues, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, FullSpellscope: item }\r\n\r\n                );\r\n\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        var SpellProperties = { \"CharacterSpellsValues\": res };\r\n                        $scope.Properties.push(SpellProperties);\r\n\r\n                    }\r\n\r\n                });\r\n            }\r\n            else if (num == 3) {\r\n                $scope.pageName = \"Copying Ability\";\r\n                $scope.buttontext = \"Copy\";\r\n                $scope.isBtnShow = true;\r\n                var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                    { scope: item.CharacterAbilitiesValues, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, FullAbilityScope: item }\r\n\r\n                );\r\n\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        var AbilityProperties = { \"CharacterAbilitiesValues\": res };\r\n                        $scope.Properties.push(AbilityProperties);\r\n                    }\r\n\r\n\r\n                });\r\n            }\r\n\r\n        };\r\n        $scope.ShowAllItemProperties = function (item, count) {\r\n            var dlg = dialogs.create('/views/dialogs/characteritemcontent.html', 'dialogCopyItem',\r\n                { scope: item.CharacterItemsValues }\r\n            );\r\n            dlg.result.then(function (res) {\r\n                if (res.Action == \"Delete\") {\r\n                    var index = -1;\r\n                    var deleteitem = eval($scope.Properties);\r\n                    //deleteitem[i].CharacterItemsValues.Action = \"Delete\";\r\n                    for (var i = 0; i < deleteitem.length; i++) {\r\n                        if (deleteitem[i].CharacterItemsValues === res) {\r\n                            index = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                    $scope.Properties.splice(index, 1);\r\n                    //if (index === -1) {\r\n                    //    alert(\"Something gone wrong\");\r\n                    //}\r\n\r\n                }\r\n                else if (res.Action == \"Edit\") {\r\n                    if (count == 0) {\r\n                        $scope.RemainingItemData = [];\r\n                        for (var k = 0; k < $scope.Properties.length; k++) {\r\n                            if (k != 0) {\r\n                                $scope.RemainingItemData.push($scope.Properties[k].CharacterItemsValues);\r\n\r\n                            }\r\n                        }\r\n                        var ItemProperties = { \"CharacterItemsValues\": res };\r\n                        $scope.Properties.splice(count);\r\n                        $scope.Properties.push(ItemProperties);\r\n                        for (var j = 0; j < $scope.RemainingItemData.length; j++) {\r\n                            var RemainingItemProperties = { \"CharacterItemsValues\": $scope.RemainingItemData[j] };\r\n                            $scope.Properties.push(RemainingItemProperties);\r\n                        }\r\n\r\n                    }\r\n                    else {\r\n                        var ItemProperties = { \"CharacterItemsValues\": res };\r\n                        $scope.Properties.splice(count);\r\n                        $scope.Properties.push(ItemProperties);\r\n                    }\r\n                }\r\n                else if (res.Action == \"Copy\") {\r\n                    var ItemProperties = { \"CharacterItemsValues\": res };\r\n                    $scope.Properties.push(ItemProperties);\r\n                }\r\n            });\r\n        }\r\n        $scope.ShowAllSpellProperties = function (item, count) {\r\n            var dlg = dialogs.create('/views/dialogs/characterspellcontent.html', 'dialogCopyItem',\r\n                { scope: item.CharacterSpellsValues }\r\n            );\r\n            dlg.result.then(function (res) {\r\n                if (res.Action == \"Delete\") {\r\n                    var index = -1;\r\n                    var deletespell = eval($scope.Properties);\r\n                    //deletespell[i].CharacterSpellsValues.Action = \"Delete\";\r\n                    for (var i = 0; i < deletespell.length; i++) {\r\n                        if (deletespell[i].CharacterSpellsValues === res) {\r\n                            index = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                    $scope.Properties.splice(index, 1);\r\n                    //if (index === -1) {\r\n                    //    alert(\"Something gone wrong\");\r\n                    //}\r\n\r\n                }\r\n                else if (res.Action == \"Edit\") {\r\n                    if (count == 0) {\r\n                        $scope.RemainingSpellData = [];\r\n                        for (var k = 0; k < $scope.Properties.length; k++) {\r\n                            if (k != 0) {\r\n                                $scope.RemainingSpellData.push($scope.Properties[k].CharacterSpellsValues);\r\n\r\n                            }\r\n                        }\r\n                        var SpellProperties = { \"CharacterSpellsValues\": res };\r\n                        $scope.Properties.splice(count);\r\n                        $scope.Properties.push(SpellProperties);\r\n                        for (var j = 0; j < $scope.RemainingSpellData.length; j++) {\r\n                            var RemainingSpellProperties = { \"CharacterSpellsValues\": $scope.RemainingSpellData[j] };\r\n                            $scope.Properties.push(RemainingSpellProperties);\r\n                        }\r\n\r\n                    }\r\n                    else {\r\n                        var SpellProperties = { \"CharacterSpellsValues\": res };\r\n                        $scope.Properties.splice(count);\r\n                        $scope.Properties.push(SpellProperties);\r\n                    }\r\n                }\r\n                else if (res.Action == \"Copy\") {\r\n                    var SpellProperties = { \"CharacterSpellsValues\": res };\r\n                    $scope.Properties.push(SpellProperties);\r\n                }\r\n            });\r\n        }\r\n        $scope.ShowAllAbilityProperties = function (item, count) {\r\n            var dlg = dialogs.create('/views/dialogs/characterabilitycontent.html', 'dialogCopyItem',\r\n                { scope: item.CharacterAbilitiesValues }\r\n            );\r\n            dlg.result.then(function (res) {\r\n                if (res.Action == \"Delete\") {\r\n                    var index = -1;\r\n                    var deleteability = eval($scope.Properties);\r\n                    // deleteability[i].CharacterAbilitiesValues.Action = \"Delete\";\r\n                    for (var i = 0; i < deleteability.length; i++) {\r\n                        if (deleteability[i].CharacterAbilitiesValues === res) {\r\n                            index = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                    $scope.Properties.splice(index, 1);\r\n                    //if (index === -1) {\r\n                    //    alert(\"Something gone wrong\");\r\n                    //}\r\n\r\n                }\r\n                else if (res.Action == \"Edit\") {\r\n                    if (count == 0) {\r\n                        $scope.RemainingAbilityData = [];\r\n                        for (var k = 0; k < $scope.Properties.length; k++) {\r\n                            if (k != 0) {\r\n                                $scope.RemainingAbilityData.push($scope.Properties[k].CharacterAbilitiesValues);\r\n\r\n                            }\r\n                        }\r\n                        var AbilityProperties = { \"CharacterAbilitiesValues\": res };\r\n                        $scope.Properties.splice(count);\r\n                        $scope.Properties.push(AbilityProperties);\r\n                        for (var j = 0; j < $scope.RemainingAbilityData.length; j++) {\r\n                            var RemainingAbilityProperties = { \"CharacterAbilitiesValues\": $scope.RemainingAbilityData[j] };\r\n                            $scope.Properties.push(RemainingAbilityProperties);\r\n                        }\r\n\r\n                    }\r\n                    else {\r\n                        var AbilityProperties = { \"CharacterAbilitiesValues\": res };\r\n                        $scope.Properties.splice(count);\r\n                        $scope.Properties.push(AbilityProperties);\r\n                    }\r\n                }\r\n                else if (res.Action == \"Copy\") {\r\n                    var AbilityProperties = { \"CharacterAbilitiesValues\": res };\r\n                    $scope.Properties.push(AbilityProperties);\r\n                }\r\n            });\r\n        }\r\n        $scope.Removeitem = function (item, Num) {\r\n            if (Num == 1) {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Delete',\r\n                    'Are you sure you want to delete this Item, \"' + item.CharacterItemsValues[0].Value.Text.value + '\", and all associated pages, tabs, and tiles?',\r\n                    {}\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function (res) {\r\n\r\n                    \r\n                        if (res == \"yes\") {\r\n                            var deleteitem = characterService.DeleteCharacterContent(item.CharacterItemsValues[0].CharacterItemId).then(function (data) {\r\n                              \r\n                                if (data.data.StatusCode == 200) {\r\n                                    var index = -1;\r\n                                    var deleteitem = eval($scope.Properties);\r\n                                    for (var i = 0; i < deleteitem.length; i++) {\r\n                                        if (deleteitem[i].CharacterItemsValues === item.CharacterItemsValues) {\r\n                                            index = i;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                    $scope.Properties.splice(index, 1);\r\n\r\n                                  \r\n                                }\r\n\r\n                               \r\n                            })\r\n                        }\r\n\r\n                    })\r\n\r\n            }\r\n            else if (Num == 2) {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Delete',\r\n                    'Are you sure you want to delete this Spell, \"' + item.CharacterSpellsValues[0].Value.Text.value + '\",?',\r\n                    {}\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function (res) {\r\n                       \r\n                        if (res == \"yes\") {\r\n                            var deleteitem = characterService.DeleteCharacterSpellContent(item.CharacterSpellsValues[0].CharacterSpellId).then(function (data) {\r\n                               \r\n                                if (data.data.StatusCode == 200) {\r\n                                    var index = -1;\r\n                                    var deletespell = eval($scope.Properties);\r\n                                    for (var i = 0; i < deletespell.length; i++) {\r\n                                        if (deletespell[i].CharacterSpellsValues === item.deletespell) {\r\n                                            index = i;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                    $scope.Properties.splice(index, 1);\r\n                                  \r\n                                }\r\n\r\n                                //$uibModalInstance.close($scope.Properties);\r\n                            })\r\n                        }\r\n\r\n                    })\r\n            }\r\n            else if (Num == 3) {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Delete',\r\n                    'Are you sure you want to delete this Ability, \"' + item.CharacterAbilitiesValues[0].Value.Text.value + '\",?',\r\n                    {}\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function (res) {\r\n                        \r\n                        if (res == \"yes\") {\r\n                            var deleteitem = characterService.DeleteCharacterAbilityContent(item.CharacterAbilitiesValues[0].CharacterAbilityId).then(function (data) {\r\n                               \r\n                                if (data.data.StatusCode == 200) {\r\n                                    var index = -1;\r\n                                    var deleteability = eval($scope.Properties);\r\n                                    for (var i = 0; i < deleteability.length; i++) {\r\n                                        if (deleteability[i].CharacterAbilitiesValues === item.deleteability) {\r\n                                            index = i;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                    $scope.Properties.splice(index, 1);\r\n                                   \r\n                                }\r\n\r\n                                //$uibModalInstance.close($scope.Properties);\r\n                            })\r\n                        }\r\n\r\n                    })\r\n            }\r\n\r\n            //$uibModalInstance.close($scope.Properties);\r\n        }\r\n\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.close('cancel');\r\n        }\r\n\r\n    }]);\r\n\r\n    module.controller('dialogEditCharacterItem', ['$scope', '$uibModalInstance', 'data', 'characterService', 'dialogs', 'rulesetDataShareService', function ($scope, $uibModalInstance, data, characterService, dialogs, rulesetDataShareService) {\r\n        debugger;\r\n        $scope.AssociatedSpells = data.AssocSpells;\r\n        $scope.AssociatedAbilities = data.AssocAbilities;\r\n\r\n        $scope.ShowAssociatedSpells = true;\r\n        $scope.ShowAssociatedAbilities = true;\r\n\r\n        if (data.tabName == \"Editing Spell\" || data.tabName == \"Copying Spell\" || data.tabName == \"Editing Ability\" || data.tabName == \"Copying Ability\") {\r\n            $scope.ShowAssociatedSpells = false;\r\n            $scope.ShowAssociatedAbilities = false;\r\n        }\r\n\r\n        $scope.Properties = data.scope;\r\n        $scope.Items = data.Fullscope;\r\n        $scope.Spells = data.FullSpellscope;\r\n        $scope.Abilities = data.FullAbilityScope;\r\n        $scope.tabName = data.tabName;\r\n        $scope.copyitem = data.item;\r\n        $scope.count = data.count;\r\n        $scope.buttontext = data.btntext;\r\n        $scope.IsBtnDisabled = data.IsBtnDisabled;\r\n        $scope.OperationTypeMode = data.OperationTypeMode;\r\n        $scope.SelectAssociatedSpells = data.SelectAssociatedSpells;\r\n        $scope.SelectAssociatedAbilities = data.SelectAssociatedAbilities;\r\n        $scope.CharacterId = data.CharacterId;\r\n\r\n        $scope.Create = function () {\r\n          \r\n            $(\"#loading\").css(\"display\", \"block\");\r\n            $scope.OperationTypeMode = \"Create\";\r\n            if ($scope.Properties[0].CharacterItemId != undefined) {\r\n                if ($scope.AssociatedSpellsChanged != undefined) {\r\n                    $scope.Items.AssociatedSpells = $scope.AssociatedSpellsChanged\r\n                }\r\n                if ($scope.AssociatedAbilitiesChanged != undefined) {\r\n                    $scope.Items.AssociatedAbilities = $scope.AssociatedAbilitiesChanged\r\n                }\r\n                if ($scope.Items == undefined) {\r\n\r\n                    var Items = {\r\n                        CharacterItemId: $scope.Properties[0].CharacterItemId,\r\n                        CharacterItemsValues: $scope.Properties\r\n                    };\r\n                    $scope.Items = Items;\r\n                }\r\n                else {\r\n                    $scope.Items.CharacterItemsValues = $scope.Properties;\r\n                }\r\n            }\r\n            else if ($scope.Properties[0].CharacterSpellId != undefined) {\r\n                if ($scope.Spells == undefined) {\r\n                    var Spells = {\r\n                        CharacterSpellId: $scope.Properties[0].CharacterSpellId,\r\n                        CharacterSpellsValues: $scope.Properties\r\n                    };\r\n                    $scope.Spells = Spells;\r\n                }\r\n                else {\r\n                    $scope.Spells.CharacterSpellsValues = $scope.Properties;\r\n                }\r\n            }\r\n            else if ($scope.Properties[0].CharacterAbilityId != undefined) {\r\n                if ($scope.Abilities == undefined) {\r\n                    var Abilities = {\r\n                        CharacterAbilityId: $scope.Properties[0].CharacterAbilityId,\r\n                        CharacterAbilitiesValues: $scope.Properties\r\n                    };\r\n                    $scope.Abilities = Abilities;\r\n                }\r\n                else {\r\n                    $scope.Abilities.CharacterAbilitiesValues = $scope.Properties;\r\n                }\r\n            }\r\n            if ($scope.buttontext == \"Update\" && $scope.Items != undefined) {\r\n                var CharacterContent = {\r\n                    CharacterItem: $scope.Items,\r\n                    CharacterSpell: null,\r\n                    CharacterAbility: null\r\n                };\r\n\r\n                var edititem = characterService.EditCharacterContent(CharacterContent).then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        $uibModalInstance.close(data.data.PayLoad.CharacterItem);\r\n                        $(\"#loading\").fadeOut(\"slow\");\r\n                    }\r\n                    else if (data.data.StatusCode == 400) {\r\n                        if (data.data.ShowToUser == true) {\r\n                            toaster.pop('error', data.data.ErrorMessage);\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n            else if ($scope.buttontext == \"Copy\" && $scope.Items != undefined) {\r\n                var CharacterContent = {\r\n                    CharacterItem: $scope.Items,\r\n                    CharacterSpell: null,\r\n                    CharacterAbility: null\r\n                };\r\n                var copyitem = characterService.CopyCharacterContent(CharacterContent).then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        $uibModalInstance.close(data.data.PayLoad.CharacterItem);\r\n                        $(\"#loading\").fadeOut(\"slow\");\r\n                    }\r\n                    else if (data.data.StatusCode == 400) {\r\n                        if (data.data.ShowToUser == true) {\r\n                            toaster.pop('error', data.data.ErrorMessage);\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n            else if ($scope.buttontext == \"Update\" && $scope.Spells != undefined) {\r\n                var CharacterContent = {\r\n                    CharacterItem: null,\r\n                    CharacterSpell: $scope.Spells,\r\n                    CharacterAbility: null\r\n                };\r\n                var editspell = characterService.EditCharacterContent(CharacterContent).then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        $uibModalInstance.close(data.data.PayLoad.CharacterSpell);\r\n                        $(\"#loading\").fadeOut(\"slow\");\r\n                    }\r\n                    else if (data.data.StatusCode == 400) {\r\n                        if (data.data.ShowToUser == true) {\r\n                            toaster.pop('error', data.data.ErrorMessage);\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n            else if ($scope.buttontext == \"Copy\" && $scope.Spells != undefined) {\r\n                var CharacterContent = {\r\n                    CharacterItem: null,\r\n                    CharacterSpell: $scope.Spells,\r\n                    CharacterAbility: null\r\n                };\r\n                var copyspell = characterService.CopyCharacterContent(CharacterContent).then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        //$scope.Properties = data.data.PayLoad.CharacterSpell.CharacterSpellsProperties;\r\n                        $uibModalInstance.close(data.data.PayLoad.CharacterSpell);\r\n                        $(\"#loading\").fadeOut(\"slow\");\r\n                    }\r\n                    else if (data.data.StatusCode == 400) {\r\n                        if (data.data.ShowToUser == true) {\r\n                            toaster.pop('error', data.data.ErrorMessage);\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n\r\n            else if ($scope.buttontext == \"Update\" && $scope.Abilities != undefined) {\r\n                var CharacterContent = {\r\n                    CharacterItem: null,\r\n                    CharacterSpell: null,\r\n                    CharacterAbility: $scope.Abilities\r\n                };\r\n                var editability = characterService.EditCharacterContent(CharacterContent).then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                      \r\n                        $uibModalInstance.close(data.data.PayLoad.CharacterAbility);\r\n                        $(\"#loading\").fadeOut(\"slow\");\r\n                    }\r\n                    else if (data.data.StatusCode == 400) {\r\n                        if (data.data.ShowToUser == true) {\r\n                            toaster.pop('error', data.data.ErrorMessage);\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n            else if ($scope.buttontext == \"Copy\" && $scope.Abilities != undefined) {\r\n                var CharacterContent = {\r\n                    CharacterItem: null,\r\n                    CharacterSpell: null,\r\n                    CharacterAbility: $scope.Abilities\r\n                };\r\n                var copyability = characterService.CopyCharacterContent(CharacterContent).then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        //$scope.Properties = data.data.PayLoad.CharacterAbility.CharacterAbilitiesProperties;\r\n                        $uibModalInstance.close(data.data.PayLoad.CharacterAbility);\r\n                        $(\"#loading\").fadeOut(\"slow\");\r\n                    }\r\n                    else if (data.data.StatusCode == 400) {\r\n                        if (data.data.ShowToUser == true) {\r\n                            toaster.pop('error', data.data.ErrorMessage);\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n            //$uibModalInstance.close($scope.Properties);\r\n        }\r\n\r\n        $scope.OpenAssociatedSpells = function () {\r\n            var Spells = rulesetDataShareService.getLayoutSpellInventoryData();\r\n            if (angular.equals({}, Spells) == false) {\r\n                var dlg = dialogs.create('/views/dialogs/CharacterAssociatedSpells.html', 'dialogCharacterAssociatedSpells',\r\n                    { scope: Spells.CharacterSpells, associatedspells: $scope.AssociatedSpells }\r\n                );\r\n                dlg.result.then(function (res) {\r\n                    $scope.AssociatedSpellsChanged = res;\r\n                });\r\n            }\r\n            else {\r\n                var spellcontent = characterService.GetCharacterSpellContent($scope.CharacterId).then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        var Spells = data.data.PayLoad;\r\n                        rulesetDataShareService.setLayoutSpellInventoryData(Spells);\r\n                        var dlg = dialogs.create('/views/dialogs/CharacterAssociatedSpells.html', 'dialogCharacterAssociatedSpells',\r\n                            { scope: Spells.CharacterSpells, associatedspells: $scope.AssociatedSpells }\r\n                        );\r\n                        dlg.result.then(function (res) {\r\n                            $scope.AssociatedSpellsChanged = res;\r\n                        });\r\n                    }\r\n                    else if (data.data.StatusCode == 400) {\r\n                        if (data.data.ShowToUser == true) {\r\n                            toaster.pop('error', data.data.ErrorMessage);\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        $scope.OpenAssociatedAbilities = function () {\r\n            var Abilities = rulesetDataShareService.getLayoutAbilityInventoryData();\r\n            if (angular.equals({}, Abilities) == false) {\r\n                var dlg = dialogs.create('/views/dialogs/CharacterAssociatedAbilities.html', 'dialogCharacterAssociatedAbilities',\r\n                    { scope: Abilities.CharacterAbilities, associatedabilities: $scope.AssociatedAbilities }\r\n                );\r\n\r\n                dlg.result.then(function (res) {\r\n                    $scope.AssociatedAbilitiesChanged = res;\r\n                });\r\n            }\r\n            else {\r\n                var abilitycontent = characterService.GetCharacterAbilityContent($scope.CharacterId).then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        var Abilities = data.data.PayLoad;\r\n                        rulesetDataShareService.setLayoutAbilityInventoryData(Abilities);\r\n                        var dlg = dialogs.create('/views/dialogs/CharacterAssociatedAbilities.html', 'dialogCharacterAssociatedAbilities',\r\n                            { scope: Abilities.CharacterAbilities, associatedabilities: $scope.AssociatedAbilities }\r\n                        );\r\n\r\n                        dlg.result.then(function (res) {\r\n                            $scope.AssociatedAbilitiesChanged = res;\r\n                        });\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        $scope.cancel = function () {\r\n            //$(\"#loading\").css(\"display\", \"block\");\r\n            $uibModalInstance.close('cancel');\r\n            //$(\"#loading\").fadeOut(\"slow\");\r\n        }\r\n    }]);\r\n\r\n    module.controller('dialogCharacterAssociatedSpells', ['$scope', '$uibModalInstance', 'data', 'rulesetService', 'dialogs', function ($scope, $uibModalInstance, data, characterService, dialogs) {\r\n        $scope.Spells = data.scope;\r\n\r\n        var AssociatedSpells = data.associatedspells;\r\n\r\n        if (AssociatedSpells != null && AssociatedSpells != undefined) {\r\n            for (var i = 0; i < $scope.Spells.length; i++) {\r\n                for (var j = 0; j < AssociatedSpells.length; j++) {\r\n                    if ($scope.Spells[i].CharacterSpellsProperties[0].Value.Text.value == AssociatedSpells[j].CharacterSpellsProperties[0].Value.Text.value) {\r\n                        $scope.Spells[i].Selected = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        $scope.SaveAssociatedSpells = function () {\r\n            var exampleArray = [];\r\n            for (var i = 0; i < $scope.Spells.length; i++) {\r\n                if ($scope.Spells[i].Selected) {\r\n                    exampleArray.push($scope.Spells[i]);\r\n                }\r\n            }\r\n            $uibModalInstance.close(exampleArray)\r\n        }\r\n        $scope.cancel = function () {\r\n            //$(\"#loading\").css(\"display\", \"block\");\r\n            $uibModalInstance.close('cancel');\r\n            //$(\"#loading\").fadeOut(\"slow\");\r\n        }\r\n    }]);\r\n\r\n    module.controller('dialogCharacterAssociatedAbilities', ['$scope', '$uibModalInstance', 'data', 'rulesetService', 'dialogs', function ($scope, $uibModalInstance, data, characterService, dialogs) {\r\n        $scope.Abilities = data.scope;\r\n\r\n        var AssociatedAbilities = data.associatedabilities;\r\n\r\n        if (AssociatedAbilities != null && AssociatedAbilities != undefined) {\r\n            for (var i = 0; i < $scope.Abilities.length; i++) {\r\n                for (var j = 0; j < AssociatedAbilities.length; j++) {\r\n                    if ($scope.Abilities[i].CharacterAbilitiesProperties[0].Value.Text.value == AssociatedAbilities[j].CharacterAbilitiesProperties[0].Value.Text.value) {\r\n                        $scope.Abilities[i].Selected = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        $scope.SaveAssociatedAbilities = function () {\r\n            var exampleArray = [];\r\n            for (var i = 0; i < $scope.Abilities.length; i++) {\r\n                if ($scope.Abilities[i].Selected) {\r\n                    exampleArray.push($scope.Abilities[i]);\r\n                }\r\n            }\r\n            $uibModalInstance.close(exampleArray)\r\n        }\r\n        $scope.cancel = function () {\r\n            //$(\"#loading\").css(\"display\", \"block\");\r\n            $uibModalInstance.close('cancel');\r\n            //$(\"#loading\").fadeOut(\"slow\");\r\n        }\r\n\r\n    }]);\r\n\r\n    module.controller('dialogCreateInventoryItem', ['$scope', '$uibModalInstance', 'data', 'rulesetService', 'characterService', 'rulesetDataShareService', 'dialogs','toaster', function ($scope, $uibModalInstance, data, rulesetService, characterService, rulesetDataShareService, dialogs,toaster) {\r\n\r\n        $scope.Properties = data.scope;\r\n        $scope.tabName = data.tabName;\r\n        $scope.buttontext = data.btntext;\r\n        $scope.IsBtnDisabled = data.IsBtnDisabled;\r\n        $scope.InventoryItems = data.NewInventory;\r\n        $scope.CharacterId = data.CharacterId;\r\n\r\n        $scope.ShowAssociatedSpells = true;\r\n        $scope.ShowAssociatedAbilities = true;\r\n\r\n        $scope.OpenAssociatedSpells = function () {\r\n            var Spells = rulesetDataShareService.getLayoutSpellInventoryData();\r\n            if (angular.equals({}, Spells) == false) {\r\n                var dlg = dialogs.create('/views/dialogs/CharacterAssociatedSpells.html', 'dialogCharacterAssociatedSpells',\r\n                    { scope: Spells.CharacterSpells, associatedspells: $scope.AssociatedSpells }\r\n                );\r\n                dlg.result.then(function (res) {\r\n                    $scope.AssociatedSpells = res;\r\n                });\r\n            }\r\n            else {\r\n                var spellcontent = characterService.GetCharacterSpellContent($scope.CharacterId).then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        var Spells = data.data.PayLoad;\r\n                        rulesetDataShareService.setLayoutSpellInventoryData(Spells);\r\n                        var dlg = dialogs.create('/views/dialogs/CharacterAssociatedSpells.html', 'dialogCharacterAssociatedSpells',\r\n                            { scope: Spells.CharacterSpells, associatedspells: $scope.AssociatedSpells }\r\n                        );\r\n                        dlg.result.then(function (res) {\r\n                            $scope.AssociatedSpells = res;\r\n                        });\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        $scope.OpenAssociatedAbilities = function () {\r\n            var Abilities = rulesetDataShareService.getLayoutAbilityInventoryData();\r\n            if (angular.equals({}, Abilities) == false) {\r\n                var dlg = dialogs.create('/views/dialogs/CharacterAssociatedAbilities.html', 'dialogCharacterAssociatedAbilities',\r\n                    { scope: Abilities.CharacterAbilities, associatedabilities: $scope.AssociatedAbilities }\r\n                );\r\n\r\n                dlg.result.then(function (res) {\r\n                    $scope.AssociatedAbilities = res;\r\n                });\r\n            }\r\n            else {\r\n                var abilitycontent = characterService.GetCharacterAbilityContent($scope.CharacterId).then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        var Abilities = data.data.PayLoad;\r\n                        rulesetDataShareService.setLayoutAbilityInventoryData(Abilities);\r\n                        var dlg = dialogs.create('/views/dialogs/CharacterAssociatedAbilities.html', 'dialogCharacterAssociatedAbilities',\r\n                            { scope: Abilities.CharacterAbilities, associatedabilities: $scope.AssociatedAbilities }\r\n                        );\r\n\r\n                        dlg.result.then(function (res) {\r\n                            $scope.AssociatedAbilities = res;\r\n                        });\r\n                    }\r\n                    else if (data.data.StatusCode == 400) {\r\n                        if (data.data.ShowToUser == true) {\r\n                            toaster.pop('error', data.data.ErrorMessage);\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        $scope.Create = function () {\r\n            $(\"#loading\").css(\"display\", \"block\");\r\n            if ($scope.Properties[0].CharacterItemId != undefined) {\r\n                $scope.InventoryItems.CharacterItems.CharacterProfileId = $scope.CharacterId;\r\n                $scope.InventoryItems.CharacterItems.CharacterItemsProperties = $scope.Properties;\r\n                $scope.InventoryItems.CharacterItems.AssociatedSpells = $scope.AssociatedSpells;\r\n                $scope.InventoryItems.CharacterItems.AssociatedAbilities = $scope.AssociatedAbilities;\r\n            }\r\n            var InventoryItems = [];\r\n            InventoryItems.push($scope.InventoryItems.CharacterItems);\r\n            var items = characterService.CreateCharacterInventoryItems(InventoryItems).then(function (data) {\r\n                if (data.data.StatusCode == 200) {\r\n                    if (data.data.PayLoad.length != 0) {\r\n                        for (var i = 0; i < data.data.PayLoad.length; i++) {\r\n                            $scope.Properties = data.data.PayLoad[i];\r\n                        }\r\n                    }\r\n                    $uibModalInstance.close($scope.Properties);\r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                }\r\n                else if (data.data.StatusCode == 400) {\r\n                    if (data.data.ShowToUser == true)\r\n                    {\r\n                        toaster.pop('error', data.data.ErrorMessage);\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        $scope.ItemcloseDialog = function () {\r\n\r\n            $uibModalInstance.close($scope.CoreStatProperties);\r\n        }\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.close('cancel');\r\n        }\r\n\r\n    }]);\r\n\r\n    module.controller('dialogCreateInventorySpell', ['$scope', '$uibModalInstance', 'data', 'rulesetService', 'characterService', function ($scope, $uibModalInstance, data, rulesetService, characterService) {\r\n\r\n        $scope.Properties = data.scope;\r\n        $scope.tabName = data.tabName;\r\n        $scope.buttontext = data.btntext;\r\n        $scope.IsBtnDisabled = data.IsBtnDisabled;\r\n        $scope.InventorySpells = data.NewInventory;\r\n        $scope.CharacterId = data.CharacterId;\r\n        $scope.Create = function () {\r\n            //$(\"#loading\").css(\"display\", \"block\");\r\n            if ($scope.Properties[0].CharacterSpellId != undefined) {\r\n                $scope.InventorySpells.CharacterSpells.CharacterProfileId = $scope.CharacterId;\r\n                $scope.InventorySpells.CharacterSpells.CharacterSpellsProperties = $scope.Properties;\r\n            }\r\n            var InventorySpells = [];\r\n            InventorySpells.push($scope.InventorySpells.CharacterSpells);\r\n            var items = characterService.CreateCharacterInventorySpells(InventorySpells).then(function (data) {\r\n                if (data.data.StatusCode == 200) {\r\n                    if (data.data.PayLoad.length != 0) {\r\n                        for (var i = 0; i < data.data.PayLoad.length; i++) {\r\n                            $scope.Properties = data.data.PayLoad[i];\r\n                        }\r\n                    }\r\n                    $uibModalInstance.close($scope.Properties);\r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                }\r\n                else if (data.data.StatusCode == 400) {\r\n                    if (data.data.ShowToUser == true) {\r\n                        toaster.pop('error', data.data.ErrorMessage);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        $scope.ItemcloseDialog = function () {\r\n\r\n            $uibModalInstance.close($scope.CoreStatProperties);\r\n        }\r\n        $scope.cancel = function () {\r\n          //  $(\"#loading\").css(\"display\", \"block\");\r\n            $uibModalInstance.close('cancel');\r\n           // $(\"#loading\").fadeOut(\"slow\");\r\n        }\r\n\r\n    }]);\r\n\r\n    module.controller('dialogCreateInventoryAbility', ['$scope', '$uibModalInstance', 'data', 'rulesetService', 'characterService', function ($scope, $uibModalInstance, data, rulesetService, characterService) {\r\n\r\n        $scope.Properties = data.scope;\r\n        $scope.tabName = data.tabName;\r\n        $scope.buttontext = data.btntext;\r\n        $scope.IsBtnDisabled = data.IsBtnDisabled;\r\n        $scope.InventoryAbility = data.NewInventory;\r\n        $scope.CharacterId = data.CharacterId;\r\n        $scope.Create = function () {\r\n            if ($scope.Properties[0].CharacterAbilityId != undefined) {\r\n                $scope.InventoryAbility.CharacterAbilities.CharacterProfileId = $scope.CharacterId;\r\n                $scope.InventoryAbility.CharacterAbilities.CharacterAbilitiesProperties = $scope.Properties;\r\n            }\r\n            var InventoryAbility = [];\r\n            InventoryAbility.push($scope.InventoryAbility.CharacterAbilities);\r\n            var items = characterService.CreateCharacterInventoryAbility(InventoryAbility).then(function (data) {\r\n                if (data.data.StatusCode == 200) {\r\n                    if (data.data.PayLoad.length != 0) {\r\n                        for (var i = 0; i < data.data.PayLoad.length; i++) {\r\n                            $scope.Properties = data.data.PayLoad[i];\r\n                        }\r\n                    }\r\n                    $uibModalInstance.close($scope.Properties);\r\n                }\r\n               else if (data.data.StatusCode == 400) {\r\n                    if (data.data.ShowToUser == true)\r\n                    {\r\n                        toaster.pop('error', data.data.ErrorMessage);\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        $scope.ItemcloseDialog = function () {\r\n\r\n            $uibModalInstance.close($scope.CoreStatProperties);\r\n        }\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.close('cancel');\r\n        }\r\n\r\n    }]);\r\n\r\n    //TileContoller dialogs\r\n\r\n    module.controller('NoteTile', ['$scope', '$uibModalInstance', 'data', 'rulesetService', 'toaster', 'dialogs', 'rulesetDataShareService', function ($scope, $uibModalInstance, data, rulesetService, toaster, dialogs, rulesetDataShareService) {\r\n        $scope.NoteTile = data.scope;\r\n        $scope.LinkExecuteTileContent = rulesetDataShareService.getLinkTileData();\r\n        if (angular.equals({}, $scope.LinkExecuteTileContent) == true) {\r\n            $scope.LinkExecuteTileContent = data.RuleSetContentForLinkExecuteTile;\r\n            if (angular.isUndefined($scope.LinkExecuteTileContent) == true) {\r\n                $scope.LinkExecuteTileContent = data.fullscope;\r\n            }\r\n        }\r\n        $scope.Fullscope = data.fullscope;\r\n        $scope.Modes = data.mode;\r\n       \r\n        $scope.TileBorder = function () {\r\n\r\n            var dlg = dialogs.create('/views/dialogs/SelectTileBorder.html', 'dialogTileBorder',\r\n                { scope: $scope.NoteTile.Styles }\r\n\r\n            );\r\n\r\n            dlg.result.then(function (res) {\r\n                switch (res.shadow) {\r\n                    case \"Use default\":\r\n                        res.shadow = \"10px 10px\";\r\n                        break;\r\n                    case \"Yes\":\r\n                        res.shadow = \"10px 10px 5px grey\";\r\n                        break;\r\n                    case \"No\":\r\n                        res.shadow = \"\";\r\n                        break;\r\n                    default:\r\n                        res.shadow = \"\";\r\n                        break;\r\n\r\n                }\r\n                if (res.shadow == null || res.shadow == \"\") res.shadow = \"\";\r\n                if (res.backgroundColor == null || res.backgroundColor == \"#008fff\" || res.shadow == \"\") res.backgroundColor = \"\";\r\n                if (res.color == null || res.shadow == \"\") res.color = \"\";\r\n                if (res.radius == null || res.shadow == \"\") res.radius = \"\";\r\n                if (res.style == null || res.shadow == \"\") res.style = \"\";\r\n                if (res.width == null || res.shadow == \"\") res.width = \"\";\r\n                $scope.NoteTile.Styles = res;\r\n            });\r\n        }\r\n        $scope.TileTitleBackground = function () {\r\n\r\n            var dlg = dialogs.create('/views/dialogs/SelectTileTitleBackground.html', 'dialogTileBorder',\r\n                { scope: $scope.NoteTile.Styles }\r\n\r\n            );\r\n\r\n            dlg.result.then(function (res) {\r\n               \r\n                $scope.NoteTile.Styles = res;\r\n            });\r\n        }\r\n\r\n        //Getting Unique id\r\n        function uniqId() {\r\n            return Math.round(new Date().getTime() + (Math.random() * 100));\r\n        }\r\n        $scope.SaveTile = function () {\r\n            $(\"#loading\").css(\"display\", \"block\");\r\n            if (angular.isUndefined($scope.NoteTile.Styles) == false) {\r\n                if ($scope.NoteTile.Styles != null) {\r\n                    //$scope.NoteTile.Styles.backgroundColor = $(\"#backgroundcolor\").val();\r\n                }\r\n            }\r\n            if ($scope.NoteTile.EditClientId == 0) {\r\n                $scope.NoteTile.EditClientId = uniqId();\r\n            }\r\n            $uibModalInstance.close($scope.NoteTile);\r\n            $(\"#loading\").fadeOut(\"slow\");\r\n        }\r\n\r\n        $scope.SaveCounterTile = function () {\r\n            $(\"#loading\").css(\"display\", \"block\");\r\n            if ($scope.NoteTile.Value.Counter.Min > $scope.NoteTile.Value.Counter.Max) {\r\n                toaster.pop('error', \"Min Value Should be Less Than Max Value \");\r\n            }\r\n            else {\r\n                if ($scope.NoteTile.Styles != null) {\r\n                    $scope.NoteTile.Styles.backgroundColor = $(\"#backgroundcolor\").val();\r\n                }\r\n                if ($scope.NoteTile.EditClientId == 0) {\r\n                    $scope.NoteTile.EditClientId = uniqId();\r\n                }\r\n                $uibModalInstance.close($scope.NoteTile);\r\n                $(\"#loading\").fadeOut(\"slow\");\r\n            }\r\n        }\r\n        $scope.SaveAttributeTile = function () {\r\n            for (var i = 0; i < $scope.NoteTile.CorestatValues.length; i++) {\r\n                if ($scope.NoteTile.CorestatValues[i].Name != null) {\r\n                    if ($scope.NoteTile.Value.Attribute.CorestatValue == $scope.NoteTile.CorestatValues[i].Name) {\r\n                        $scope.NoteTile.Value.Attribute.CoreStatValue = $scope.NoteTile.CorestatValues[i].Value;\r\n                        if ($scope.NoteTile.CorestatValues[i].Id == 0) {\r\n                            toaster.pop(\"error\", \"CoreStats Values are not saved for \" + $scope.NoteTile.CorestatValues[i].Name + \"  CoreStat\");\r\n                            return false;\r\n                        }\r\n                        $scope.NoteTile.Value.Attribute.CoreStatValueId = $scope.NoteTile.CorestatValues[i].Id;\r\n                        $scope.NoteTile.Value.Attribute.TypeId = $scope.NoteTile.CorestatValues[i].TypeId;\r\n                        $scope.NoteTile.Value.Attribute.CharacterProfileId = $scope.NoteTile.CorestatValues[i].CharacterId;\r\n                        $scope.NoteTile.Value.Attribute.CorestatValue = $scope.NoteTile.CorestatValues[i].Name;\r\n                        $scope.NoteTile.Value.Attribute.AttributeContent = $scope.NoteTile.CorestatValues[i];\r\n                        $scope.NoteTile.Value.Attribute.Name = $scope.NoteTile.CorestatValues[i].Name;\r\n                        $scope.NoteTile.Value.Attribute.SelectedCorestatValue = $scope.NoteTile.CorestatValues[i].Name;\r\n                        if ($scope.NoteTile.Value.Attribute.TypeId == 1) {\r\n                            $scope.NoteTile.Value.Attribute.CorestatValues = \"Text:\" + $scope.NoteTile.CorestatValues[i].Value.Text.value;\r\n                        }\r\n                        else if ($scope.NoteTile.Value.Attribute.TypeId == 2) {\r\n                            $scope.NoteTile.Value.Attribute.CorestatValues = \"Choices:\" + $scope.NoteTile.CorestatValues[i].Value.Choices;\r\n                        }\r\n                        else if ($scope.NoteTile.Value.Attribute.TypeId == 3) {\r\n                            $scope.NoteTile.Value.Attribute.CorestatValues = \"On/Off:\" + $scope.NoteTile.CorestatValues[i].Value.OnOrOff.value;\r\n                        }\r\n                        else if ($scope.NoteTile.Value.Attribute.TypeId == 4) {\r\n                            $scope.NoteTile.Value.Attribute.CorestatValues = \"Yes/No:\" + $scope.NoteTile.CorestatValues[i].Value.YesOrNo.value;\r\n                        }\r\n                        else if ($scope.NoteTile.Value.Attribute.TypeId == 5) {\r\n                            $scope.NoteTile.Value.Attribute.CorestatValues = \"Value:\" + $scope.NoteTile.CorestatValues[i].Value.ValueAndSubValue.value + \" \" + \"Sub Value:\" + $scope.NoteTile.CorestatValues[i].Value.ValueAndSubValue.subvalue;\r\n                        }\r\n                        else if ($scope.NoteTile.Value.Attribute.TypeId == 6) {\r\n                            $scope.NoteTile.Value.Attribute.CorestatValues = \"Current Value:\" + $scope.NoteTile.CorestatValues[i].Value.CurrentAndMaxValue.CurrentValue + \" \" + \"Max Value:\" + $scope.NoteTile.CorestatValues[i].Value.CurrentAndMaxValue.MaxValue;\r\n                        }\r\n                        else if ($scope.NoteTile.Value.Attribute.TypeId == 7) {\r\n                            $scope.NoteTile.Value.Attribute.CorestatValues = \"Weight:\" + $scope.NoteTile.CorestatValues[i].Value.Weight.value\r\n                        }\r\n                        else if ($scope.NoteTile.Value.Attribute.TypeId == 8) {\r\n                            $scope.NoteTile.Value.Attribute.CorestatValues = \"Image:\" + $scope.NoteTile.CorestatValues[i].Value.Image.image\r\n                        }\r\n                        else if ($scope.NoteTile.Value.Attribute.TypeId == 12) {\r\n                            $scope.NoteTile.Value.Attribute.CorestatValues = \"Height:\" + $scope.NoteTile.CorestatValues[i].Value.Height.value + $scope.NoteTile.CorestatValues[i].Value.Height.units.selectedUnit;\r\n                        }\r\n                        else if ($scope.NoteTile.Value.Attribute.TypeId == 13) {\r\n                            $scope.NoteTile.Value.Attribute.CorestatValues = \"Volume:\" + $scope.NoteTile.CorestatValues[i].Value.Volume.value.depthvalue + \"  \" + $scope.NoteTile.CorestatValues[i].Value.Volume.units.selectedUnit;\r\n                        }\r\n                        else if ($scope.NoteTile.Value.Attribute.TypeId == 14) {\r\n                            $scope.NoteTile.Value.Attribute.CorestatValues = \"Number:\" + $scope.NoteTile.CorestatValues[i].Value.Number.value\r\n                        }\r\n                        else if ($scope.NoteTile.Value.Attribute.TypeId == 15) {\r\n                            $scope.NoteTile.Value.Attribute.CorestatValues = \"Dice:\" + $scope.NoteTile.CorestatValues[i].Value.DefaultDice.value\r\n                        }\r\n                        else if ($scope.NoteTile.Value.Attribute.TypeId == 19) {\r\n                            $scope.NoteTile.Value.Attribute.CorestatValues = \"Text Area:\" + $scope.NoteTile.CorestatValues[i].Value.TextArea.value\r\n                        }\r\n                        rulesetDataShareService.setTilelst($scope.NoteTile);\r\n                    }\r\n                }\r\n            }\r\n            if ($scope.NoteTile.EditClientId == 0) {\r\n                $scope.NoteTile.EditClientId = uniqId();\r\n            }\r\n            $uibModalInstance.close($scope.NoteTile);\r\n            $(\"#loading\").fadeOut(\"slow\");\r\n        }\r\n\r\n\r\n        $scope.SaveLinkTile = function () {\r\n\t\t\t$(\"#loading\").css(\"display\", \"block\");\r\n\t\t\tdebugger;\r\n            var IsItem = false; var IsSpell = false; var IsAbility = false;\r\n            if (angular.isUndefined($scope.NoteTile.LinkTileItems) == false) {\r\n                if ($scope.NoteTile.Value.Link.SelectedPropertyValue == \"Items\") {\r\n                    for (var i = 0; i < $scope.NoteTile.LinkTileItems.length; i++) {\r\n                        if ($scope.NoteTile.Value.Link.SelectedProperty == $scope.NoteTile.LinkTileItems[i].ItemProperties[0].Value.Text.value) {\r\n                            IsItem = true;\r\n                        }\r\n                    }\r\n                }\r\n                else if ($scope.NoteTile.Value.Link.SelectedPropertyValue == \"Spells\") {\r\n                    for (var i = 0; i < $scope.NoteTile.LinkTileSpells.length; i++) {\r\n                        if ($scope.NoteTile.Value.Link.SelectedProperty == $scope.NoteTile.LinkTileSpells[i].SpellProperties[0].Value.Text.value) {\r\n                            IsSpell = true;\r\n                        }\r\n                    }\r\n                }\r\n                else if ($scope.NoteTile.Value.Link.SelectedPropertyValue == \"Abilities\") {\r\n                    for (var i = 0; i < $scope.NoteTile.LinkTileAbilities.length; i++) {\r\n                        if ($scope.NoteTile.Value.Link.SelectedProperty == $scope.NoteTile.LinkTileAbilities[i].AbilityProperties[0].Value.Text.value) {\r\n                            IsAbility = true;\r\n                        }\r\n                    }\r\n                }\r\n                if (IsItem == true) {\r\n\t\t\t\t\tfor (var i = 0; i < $scope.NoteTile.LinkTileItems.length; i++) {\r\n\t\t\t\t\t\tconsole.log(\"$scope.NoteTile.Value.Link.SelectedProperty: \", $scope.NoteTile.Value.Link.SelectedProperty);\r\n\t\t\t\t\t\tconsole.log(\"$scope.NoteTile.LinkTileItems[i].ItemProperties[0].Value.Text.value: \", $scope.NoteTile.LinkTileItems[i].ItemProperties[0].Value.Text.value);\r\n                        if ($scope.NoteTile.Value.Link.SelectedProperty == $scope.NoteTile.LinkTileItems[i].ItemProperties[0].Value.Text.value) {\r\n                            $scope.NoteTile.Value.Link.Title = $scope.NoteTile.Value.Link.Title;\r\n                            $scope.NoteTile.Value.Link.SelectedPropertyValueImage = $scope.NoteTile.LinkTileItems[i].ItemProperties[1].Value.Image.image;\r\n                            if ($scope.NoteTile.Value.Link.SelectedPropertyValueImage == null) {\r\n                                $scope.NoteTile.Value.Link.SelectedPropertyValueImage = \"\";\r\n                            }\r\n                            $scope.NoteTile.Value.Link.SelectedProperty = $scope.NoteTile.LinkTileItems[i].ItemProperties[0].Value.Text.value;\r\n                            $scope.NoteTile.Value.Link.Content = $scope.NoteTile.LinkTileItems[i];\r\n                        }\r\n                    }\r\n                }\r\n                else if (IsSpell == true) {\r\n                    for (var i = 0; i < $scope.NoteTile.LinkTileSpells.length; i++) {\r\n                        if ($scope.NoteTile.Value.Link.SelectedProperty == $scope.NoteTile.LinkTileSpells[i].SpellProperties[0].Value.Text.value) {\r\n                            $scope.NoteTile.Value.Link.Title = $scope.NoteTile.Value.Link.Title;\r\n                            $scope.NoteTile.Value.Link.SelectedPropertyValueImage = $scope.NoteTile.LinkTileSpells[i].SpellProperties[1].Value.Image.image;\r\n                            if ($scope.NoteTile.Value.Link.SelectedPropertyValueImage == null) {\r\n                                $scope.NoteTile.Value.Link.SelectedPropertyValueImage = \"\";\r\n                            }\r\n                            $scope.NoteTile.Value.Link.SelectedProperty = $scope.NoteTile.LinkTileSpells[i].SpellProperties[0].Value.Text.value;\r\n                            $scope.NoteTile.Value.Link.Content = $scope.NoteTile.LinkTileSpells[i];\r\n                        }\r\n                    }\r\n                }\r\n                else if (IsAbility == true) {\r\n                    for (var i = 0; i < $scope.NoteTile.LinkTileAbilities.length; i++) {\r\n                        if ($scope.NoteTile.Value.Link.SelectedProperty == $scope.NoteTile.LinkTileAbilities[i].AbilityProperties[0].Value.Text.value) {\r\n                            $scope.NoteTile.Value.Link.Title = $scope.NoteTile.Value.Link.Title;\r\n                            $scope.NoteTile.Value.Link.SelectedPropertyValueImage = $scope.NoteTile.LinkTileAbilities[i].AbilityProperties[1].Value.Image.image;\r\n                            if ($scope.NoteTile.Value.Link.SelectedPropertyValueImage == null) {\r\n                                $scope.NoteTile.Value.Link.SelectedPropertyValueImage = \"\";\r\n                            }\r\n                            $scope.NoteTile.Value.Link.SelectedProperty = $scope.NoteTile.LinkTileAbilities[i].AbilityProperties[0].Value.Text.value;\r\n                            $scope.NoteTile.Value.Link.Content = $scope.NoteTile.LinkTileAbilities[i];\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n                if (angular.isUndefined($scope.LinkExecuteTileContent) == true) {\r\n                    $scope.LinkExecuteTileContent = {};\r\n                    var RuleSetTileContents = rulesetDataShareService.getRulesetData();\r\n                    $scope.LinkExecuteTileContent.Items = RuleSetTileContents.Items;\r\n                    $scope.LinkExecuteTileContent.Spells = RuleSetTileContents.Spells;\r\n                    $scope.LinkExecuteTileContent.Abilities = RuleSetTileContents.Abilities;\r\n                }\r\n                if ($scope.NoteTile.Value.Link.SelectedPropertyValue == \"Items\") {\r\n                    for (var i = 0; i < $scope.LinkExecuteTileContent.Items.length; i++) {\r\n                        if ($scope.NoteTile.Value.Link.SelectedProperty == $scope.LinkExecuteTileContent.Items[i].ItemProperties[0].Value.Text.value) {\r\n                            IsItem = true;\r\n                        }\r\n                    }\r\n                }\r\n                else if ($scope.NoteTile.Value.Link.SelectedPropertyValue == \"Spells\") {\r\n                    for (var i = 0; i < $scope.LinkExecuteTileContent.Spells.length; i++) {\r\n                        if ($scope.NoteTile.Value.Link.SelectedProperty == $scope.LinkExecuteTileContent.Spells[i].SpellProperties[0].Value.Text.value) {\r\n                            IsSpell = true;\r\n                        }\r\n                    }\r\n                }\r\n                else if ($scope.NoteTile.Value.Link.SelectedPropertyValue == \"Abilities\") {\r\n                    for (var i = 0; i < $scope.LinkExecuteTileContent.Abilities.length; i++) {\r\n                        if ($scope.NoteTile.Value.Link.SelectedProperty == $scope.LinkExecuteTileContent.Abilities[i].AbilityProperties[0].Value.Text.value) {\r\n                            IsAbility = true;\r\n                        }\r\n                    }\r\n                }\r\n                if (IsItem == true) {\r\n                    for (var i = 0; i < $scope.LinkExecuteTileContent.Items.length; i++) {\r\n                        if ($scope.NoteTile.Value.Link.SelectedProperty == $scope.LinkExecuteTileContent.Items[i].ItemProperties[0].Value.Text.value) {\r\n                            $scope.NoteTile.Value.Link.Title = $scope.NoteTile.Value.Link.Title;\r\n                            $scope.NoteTile.Value.Link.SelectedPropertyValueImage = $scope.LinkExecuteTileContent.Items[i].ItemProperties[1].Value.Image.image;\r\n                            if ($scope.NoteTile.Value.Link.SelectedPropertyValueImage == null) {\r\n                                $scope.NoteTile.Value.Link.SelectedPropertyValueImage = \"\";\r\n                            }\r\n                            $scope.NoteTile.Value.Link.SelectedProperty = $scope.LinkExecuteTileContent.Items[i].ItemProperties[0].Value.Text.value;\r\n                            $scope.NoteTile.Value.Link.Content = $scope.LinkExecuteTileContent.Items[i];\r\n                        }\r\n                    }\r\n                }\r\n                else if (IsSpell == true) {\r\n                    for (var i = 0; i < $scope.LinkExecuteTileContent.Spells.length; i++) {\r\n                        if ($scope.NoteTile.Value.Link.SelectedProperty == $scope.LinkExecuteTileContent.Spells[i].SpellProperties[0].Value.Text.value) {\r\n                            $scope.NoteTile.Value.Link.Title = $scope.NoteTile.Value.Link.Title;\r\n                            $scope.NoteTile.Value.Link.SelectedPropertyValueImage = $scope.LinkExecuteTileContent.Spells[i].SpellProperties[1].Value.Image.image;\r\n                            if ($scope.NoteTile.Value.Link.SelectedPropertyValueImage == null) {\r\n                                $scope.NoteTile.Value.Link.SelectedPropertyValueImage = \"\";\r\n                            }\r\n                            $scope.NoteTile.Value.Link.SelectedProperty = $scope.LinkExecuteTileContent.Spells[i].SpellProperties[0].Value.Text.value;\r\n                            $scope.NoteTile.Value.Link.Content = $scope.LinkExecuteTileContent.Spells[i];\r\n                        }\r\n                    }\r\n                }\r\n                else if (IsAbility == true) {\r\n                    for (var i = 0; i < $scope.LinkExecuteTileContent.Abilities.length; i++) {\r\n                        if ($scope.NoteTile.Value.Link.SelectedProperty == $scope.LinkExecuteTileContent.Abilities[i].AbilityProperties[0].Value.Text.value) {\r\n                            $scope.NoteTile.Value.Link.Title = $scope.NoteTile.Value.Link.Title;\r\n                            $scope.NoteTile.Value.Link.SelectedPropertyValueImage = $scope.LinkExecuteTileContent.Abilities[i].AbilityProperties[1].Value.Image.image;\r\n                            if ($scope.NoteTile.Value.Link.SelectedPropertyValueImage == null) {\r\n                                $scope.NoteTile.Value.Link.SelectedPropertyValueImage = \"\";\r\n                            }\r\n                            $scope.NoteTile.Value.Link.SelectedProperty = $scope.LinkExecuteTileContent.Abilities[i].AbilityProperties[0].Value.Text.value;\r\n                            $scope.NoteTile.Value.Link.Content = $scope.LinkExecuteTileContent.Abilities[i];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if ($scope.NoteTile.Styles != null) {\r\n                $scope.NoteTile.Styles.backgroundColor = $(\"#backgroundcolor\").val();\r\n            }\r\n            if ($scope.NoteTile.EditClientId == 0) {\r\n                $scope.NoteTile.EditClientId = uniqId();\r\n            }\r\n            $uibModalInstance.close($scope.NoteTile);\r\n            $(\"#loading\").fadeOut(\"slow\");\r\n        }\r\n        $scope.SaveExecuteTile = function () {\r\n            $(\"#loading\").css(\"display\", \"block\");\r\n            var IsItem = false; var IsSpell = false; var IsAbility = false;\r\n            if (angular.isUndefined($scope.NoteTile.ExecuteTileItems) == false) {\r\n                if ($scope.NoteTile.Value.Execute.SelectedPropertyValue == \"Items\") {\r\n                    for (var i = 0; i < $scope.NoteTile.ExecuteTileItems.length; i++) {\r\n                        if ($scope.NoteTile.Value.Execute.SelectedProperty == $scope.NoteTile.ExecuteTileItems[i].ItemProperties[0].Value.Text.value) {\r\n                            IsItem = true;\r\n                        }\r\n                    }\r\n                }\r\n                else if ($scope.NoteTile.Value.Execute.SelectedPropertyValue == \"Spells\") {\r\n                    for (var i = 0; i < $scope.NoteTile.ExecuteTileSpells.length; i++) {\r\n                        if ($scope.NoteTile.Value.Execute.SelectedProperty == $scope.NoteTile.ExecuteTileSpells[i].SpellProperties[0].Value.Text.value) {\r\n                            IsSpell = true;\r\n                        }\r\n                    }\r\n                }\r\n                else if ($scope.NoteTile.Value.Execute.SelectedPropertyValue == \"Abilities\") {\r\n                    for (var i = 0; i < $scope.NoteTile.ExecuteTileAbilities.length; i++) {\r\n                        if ($scope.NoteTile.Value.Execute.SelectedProperty == $scope.NoteTile.ExecuteTileAbilities[i].AbilityProperties[0].Value.Text.value) {\r\n                            IsAbility = true;\r\n                        }\r\n                    }\r\n                }\r\n                if (IsItem == true) {\r\n                    for (var i = 0; i < $scope.NoteTile.ExecuteTileItems.length; i++) {\r\n                        if ($scope.NoteTile.Value.Execute.SelectedProperty == $scope.NoteTile.ExecuteTileItems[i].ItemProperties[0].Value.Text.value) {\r\n                            $scope.NoteTile.Value.Execute.Name = $scope.NoteTile.Value.Execute.Name;\r\n                            $scope.NoteTile.Value.Execute.SelectedPropertyValueImage = $scope.NoteTile.ExecuteTileItems[i].ItemProperties[1].Value.Image.image;\r\n                            if ($scope.NoteTile.Value.Execute.SelectedPropertyValueImage == null) {\r\n                                $scope.NoteTile.Value.Execute.SelectedPropertyValueImage = \"\";\r\n                            }\r\n                            $scope.NoteTile.Value.Execute.SelectedProperty = $scope.NoteTile.ExecuteTileItems[i].ItemProperties[0].Value.Text.value;\r\n                            $scope.NoteTile.Value.Execute.Command = \"\";\r\n                            $scope.NoteTile.Value.Execute.CommandLastResult = \"\";\r\n                            //  rulesetDataShareService.setTilelst($scope.NoteTile);\r\n                            $scope.NoteTile.Value.Execute.Content = $scope.NoteTile.ExecuteTileItems[i];\r\n                        }\r\n                    }\r\n                }\r\n                else if (IsSpell == true) {\r\n                    for (var i = 0; i < $scope.NoteTile.ExecuteTileSpells.length; i++) {\r\n                        if ($scope.NoteTile.Value.Execute.SelectedProperty == $scope.NoteTile.ExecuteTileSpells[i].SpellProperties[0].Value.Text.value) {\r\n                            $scope.NoteTile.Value.Execute.Name = $scope.NoteTile.Value.Execute.Name;\r\n                            $scope.NoteTile.Value.Execute.SelectedPropertyValueImage = $scope.NoteTile.ExecuteTileSpells[i].SpellProperties[1].Value.Image.image;\r\n                            if ($scope.NoteTile.Value.Execute.SelectedPropertyValueImage == null) {\r\n                                $scope.NoteTile.Value.Execute.SelectedPropertyValueImage = \"\";\r\n                            }\r\n                            $scope.NoteTile.Value.Execute.SelectedProperty = $scope.NoteTile.ExecuteTileSpells[i].SpellProperties[0].Value.Text.value;\r\n                            $scope.NoteTile.Value.Execute.Command = \"\";\r\n                            $scope.NoteTile.Value.Execute.CommandLastResult = \"\";\r\n                            $scope.NoteTile.Value.Execute.Content = $scope.NoteTile.ExecuteTileSpells[i];\r\n                            // rulesetDataShareService.setTilelst($scope.NoteTile);\r\n                            $scope.NoteTile.Value.Execute.Content = $scope.NoteTile.ExecuteTileSpells[i];\r\n                        }\r\n                    }\r\n                }\r\n                else if (IsAbility == true) {\r\n                    for (var i = 0; i < $scope.NoteTile.ExecuteTileAbilities.length; i++) {\r\n                        if ($scope.NoteTile.Value.Execute.SelectedPropertyValue == $scope.NoteTile.ExecuteTileAbilities[i].AbilityProperties[0].Value.Text.value) {\r\n                            $scope.NoteTile.Value.Execute.Name = $scope.NoteTile.Value.Execute.Name;\r\n                            $scope.NoteTile.Value.Execute.SelectedPropertyValue = $scope.NoteTile.ExecuteTileAbilities[i].AbilityProperties[1].Value.Image.image;\r\n                            if ($scope.NoteTile.Value.Execute.SelectedPropertyValueImage == null) {\r\n                                $scope.NoteTile.Value.Execute.SelectedPropertyValueImage = \"\";\r\n                            }\r\n                            $scope.NoteTile.Value.Execute.SelectedProperty = $scope.NoteTile.ExecuteTileAbilities[i].AbilityProperties[0].Value.Text.value;\r\n                            $scope.NoteTile.Value.Execute.Command = $scope.NoteTile.Value.Execute.Command;\r\n                            $scope.NoteTile.Value.Execute.CommandLastResult = $scope.NoteTile.Value.Execute.CommandLastResult;\r\n                            //  rulesetDataShareService.setTilelst($scope.NoteTile);\r\n                            $scope.NoteTile.Value.Execute.Content = $scope.NoteTile.ExecuteTileAbilities[i];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (angular.isUndefined($scope.LinkExecuteTileContent) == true) {\r\n                    $scope.LinkExecuteTileContent = {};\r\n                    var RuleSetTileContents = rulesetDataShareService.getRulesetData();\r\n                    $scope.LinkExecuteTileContent.Items = RuleSetTileContents.Items;\r\n                    $scope.LinkExecuteTileContent.Spells = RuleSetTileContents.Spells;\r\n                    $scope.LinkExecuteTileContent.Abilities = RuleSetTileContents.Abilities;\r\n                }\r\n                if ($scope.NoteTile.Value.Execute.SelectedPropertyValue == \"Items\") {\r\n                    for (var i = 0; i < $scope.LinkExecuteTileContent.Items.length; i++) {\r\n                        if ($scope.NoteTile.Value.Execute.SelectedProperty == $scope.LinkExecuteTileContent.Items[i].ItemProperties[0].Value.Text.value) {\r\n                            IsItem = true;\r\n                        }\r\n                    }\r\n                }\r\n                else if ($scope.NoteTile.Value.Execute.SelectedPropertyValue == \"Spells\") {\r\n                    for (var i = 0; i < $scope.LinkExecuteTileContent.Spells.length; i++) {\r\n                        if ($scope.NoteTile.Value.Execute.SelectedProperty == $scope.LinkExecuteTileContent.Spells[i].SpellProperties[0].Value.Text.value) {\r\n                            IsSpell = true;\r\n                        }\r\n                    }\r\n                }\r\n                else if ($scope.NoteTile.Value.Execute.SelectedPropertyValue == \"Abilities\") {\r\n                    for (var i = 0; i < $scope.LinkExecuteTileContent.Abilities.length; i++) {\r\n                        if ($scope.NoteTile.Value.Execute.SelectedProperty == $scope.LinkExecuteTileContent.Abilities[i].AbilityProperties[0].Value.Text.value) {\r\n                            IsAbility = true;\r\n                        }\r\n                    }\r\n                }\r\n                if (IsItem == true) {\r\n                    for (var i = 0; i < $scope.LinkExecuteTileContent.Items.length; i++) {\r\n                        if ($scope.NoteTile.Value.Execute.SelectedProperty == $scope.LinkExecuteTileContent.Items[i].ItemProperties[0].Value.Text.value) {\r\n                            $scope.NoteTile.Value.Execute.Name = $scope.NoteTile.Value.Execute.Title;\r\n                            $scope.NoteTile.Value.Execute.SelectedPropertyValueImage = $scope.LinkExecuteTileContent.Items[i].ItemProperties[1].Value.Image.image;\r\n                            if ($scope.NoteTile.Value.Execute.SelectedPropertyValueImage == null) {\r\n                                $scope.NoteTile.Value.Execute.SelectedPropertyValueImage = \"\";\r\n                            }\r\n                            $scope.NoteTile.Value.Execute.SelectedProperty = $scope.LinkExecuteTileContent.Items[i].ItemProperties[0].Value.Text.value;\r\n                            $scope.NoteTile.Value.Execute.Command = \"\";\r\n                            $scope.NoteTile.Value.Execute.CommandLastResult = \"\";\r\n                            //  rulesetDataShareService.setTilelst($scope.NoteTile);\r\n                            $scope.NoteTile.Value.Execute.Content = $scope.LinkExecuteTileContent.Items[i];\r\n                        }\r\n                    }\r\n                }\r\n                else if (IsSpell == true) {\r\n                    for (var i = 0; i < $scope.LinkExecuteTileContent.Spells.length; i++) {\r\n                        if ($scope.NoteTile.Value.Execute.SelectedProperty == $scope.LinkExecuteTileContent.Spells[i].SpellProperties[0].Value.Text.value) {\r\n                            $scope.NoteTile.Value.Execute.Name = $scope.NoteTile.Value.Execute.Title;\r\n                            $scope.NoteTile.Value.Execute.SelectedPropertyValueImage = $scope.LinkExecuteTileContent.Spells[i].SpellProperties[1].Value.Image.image;\r\n                            if ($scope.NoteTile.Value.Execute.SelectedPropertyValueImage == null) {\r\n                                $scope.NoteTile.Value.Execute.SelectedPropertyValueImage = \"\";\r\n                            }\r\n                            $scope.NoteTile.Value.Execute.SelectedProperty = $scope.LinkExecuteTileContent.Spells[i].SpellProperties[0].Value.Text.value;\r\n                            $scope.NoteTile.Value.Execute.Command = \"\";\r\n                            $scope.NoteTile.Value.Execute.CommandLastResult = \"\";\r\n                            $scope.NoteTile.Value.Execute.Content = $scope.LinkExecuteTileContent.Spells[i];\r\n                            // rulesetDataShareService.setTilelst($scope.NoteTile);\r\n                            $scope.NoteTile.Value.Execute.Content = $scope.LinkExecuteTileContent.Spells[i];\r\n                        }\r\n                    }\r\n                }\r\n                else if (IsAbility == true) {\r\n                    for (var i = 0; i < $scope.LinkExecuteTileContent.Abilities.length; i++) {\r\n                        if ($scope.NoteTile.Value.Execute.SelectedPropertyValue == $scope.LinkExecuteTileContent.Abilities[i].AbilityProperties[0].Value.Text.value) {\r\n                            $scope.NoteTile.Value.Execute.Name = $scope.NoteTile.Value.Execute.Title;\r\n                            $scope.NoteTile.Value.Execute.SelectedPropertyValue = $scope.LinkExecuteTileContent.Abilities[i].AbilityProperties[1].Value.Image.image;\r\n                            if ($scope.NoteTile.Value.Execute.SelectedPropertyValueImage == null) {\r\n                                $scope.NoteTile.Value.Execute.SelectedPropertyValueImage = \"\";\r\n                            }\r\n                            $scope.NoteTile.Value.Execute.SelectedProperty = $scope.LinkExecuteTileContent.Abilities[i].AbilityProperties[0].Value.Text.value;\r\n                            $scope.NoteTile.Value.Execute.Command = $scope.NoteTile.Value.Execute.Command;\r\n                            $scope.NoteTile.Value.Execute.CommandLastResult = $scope.NoteTile.Value.Execute.CommandLastResult;\r\n                            //  rulesetDataShareService.setTilelst($scope.NoteTile);\r\n                            $scope.NoteTile.Value.Execute.Content = $scope.LinkExecuteTileContent.Abilities[i];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if ($scope.NoteTile.Styles != null) {\r\n                $scope.NoteTile.Styles.backgroundColor = $(\"#backgroundcolor\").val();\r\n            }\r\n            if ($scope.NoteTile.EditClientId == 0) {\r\n                $scope.NoteTile.EditClientId = uniqId();\r\n            }\r\n            $uibModalInstance.close($scope.NoteTile)\r\n            $(\"#loading\").fadeOut(\"slow\");\r\n        }\r\n        $scope.SaveCommandTile = function () {\r\n            $(\"#loading\").css(\"display\", \"block\");\r\n            if ($scope.NoteTile.Value.Command.command != null) {\r\n                var command = $scope.NoteTile.Value.Command.command;\r\n                if (!dicenotationvalidator(command)) {\r\n                    toaster.pop('error', \"Invalid Command\");\r\n                }\r\n                else {\r\n                    if ($scope.NoteTile.Styles != null) {\r\n                        $scope.NoteTile.Styles.backgroundColor = $(\"#backgroundcolor\").val();\r\n                    }\r\n                    $scope.NoteTile.Value.Command.commandLastResult = localStorage.getItem(\"rollresult\");\r\n                    if ($scope.NoteTile.EditClientId == 0) {\r\n                        $scope.NoteTile.EditClientId = uniqId();\r\n                    }\r\n                    $uibModalInstance.close($scope.NoteTile);\r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                }\r\n            }\r\n\r\n        }\r\n        $scope.SaveImageTile = function () {\r\n            $(\"#loading\").css(\"display\", \"block\");\r\n            if ($scope.NoteTile.Styles != null) {\r\n                $scope.NoteTile.Styles.backgroundColor = $(\"#backgroundcolor\").val();\r\n            }\r\n            if ($scope.NoteTile.EditClientId == 0) {\r\n                $scope.NoteTile.EditClientId = uniqId();\r\n            }\r\n            $uibModalInstance.close($scope.NoteTile);\r\n            $(\"#loading\").fadeOut(\"slow\");\r\n        }\r\n        $scope.cancel = function () {\r\n          //  $(\"#loading\").css(\"display\", \"block\");\r\n            $uibModalInstance.close('cancel');\r\n          //  $(\"#loading\").fadeOut(\"slow\");\r\n        }\r\n    }]);\r\n    module.controller('ShowAllTileContent', ['$scope', '$uibModalInstance', 'data', 'rulesetService', 'toaster', 'dialogs', 'layoutService', function ($scope, $uibModalInstance, data, rulesetService, toaster, dialogs, layoutService) {\r\n\r\n        $scope.Content = data.scope;\r\n        if ($scope.Content.TileTypeName == \"Attribute\") {\r\n            if ($scope.Content.Value.Attribute.AttributeContent.TypeId == 5) {\r\n                $scope.Value = $scope.Content.Value.Attribute.AttributeContent.Value.ValueAndSubValue.value;\r\n                $scope.Subvalue = $scope.Content.Value.Attribute.AttributeContent.Value.ValueAndSubValue.subvalue;\r\n                $scope.ValueSubValue = true;\r\n                $scope.CurrentMax = false;\r\n                $scope.Number = false;\r\n            }\r\n            else if ($scope.Content.Value.Attribute.AttributeContent.TypeId == 6) {\r\n                $scope.Currentvalue = $scope.Content.Value.Attribute.AttributeContent.Value.CurrentAndMaxValue.CurrentValue;\r\n                $scope.Maxvalue = $scope.Content.Value.Attribute.AttributeContent.Value.CurrentAndMaxValue.MaxValue;\r\n                $scope.ValueSubValue = false;\r\n                $scope.CurrentMax = true;\r\n                $scope.Number = false;\r\n            }\r\n            else if ($scope.Content.Value.Attribute.AttributeContent.TypeId == 14) {\r\n                $scope.Numbers = $scope.Content.Value.Attribute.AttributeContent.Value.Number.value;\r\n                $scope.ValueSubValue = false;\r\n                $scope.CurrentMax = false;\r\n                $scope.Number = true;\r\n            }\r\n        }\r\n        $scope.SaveCounterUpdatedValue = function () {\r\n            if ($scope.Content.Value.Counter.Value > $scope.Content.Value.Counter.Max) {\r\n                toaster.pop('error', \"Value Should Not be Greater Than Max Value \");\r\n            }\r\n            else {\r\n                $uibModalInstance.close($scope.Content);\r\n            }\r\n\r\n        }\r\n\r\n        $scope.Increment = function (val) {\r\n            if (val == 1) {\r\n                var val = $scope.Maxvalue;\r\n                val += 1;\r\n                $scope.Maxvalue = val;\r\n            }\r\n            else if (val == 2) {\r\n                var val = $scope.Currentvalue;\r\n                val += 1;\r\n                $scope.Currentvalue = val;\r\n            }\r\n            else if (val == 3) {\r\n                var val = $scope.Value;\r\n                val += 1;\r\n                $scope.Value = val;\r\n            }\r\n            else if (val == 4) {\r\n                var val = $scope.Subvalue;\r\n                val += 1;\r\n                $scope.Subvalue = val;\r\n            }\r\n            else if (val == 5) {\r\n                var val = $scope.Numbers;\r\n                val += 1;\r\n                $scope.Numbers = val;\r\n            }\r\n        }\r\n        $scope.Decrement = function (val) {\r\n            if (val == 1) {\r\n                var val = $scope.Maxvalue;\r\n                val -= 1;\r\n                $scope.Maxvalue = val;\r\n            }\r\n            else if (val == 2) {\r\n                var val = $scope.Currentvalue;\r\n                val -= 1;\r\n                $scope.Currentvalue = val;\r\n            }\r\n            else if (val == 3) {\r\n                var val = $scope.Value;\r\n                val -= 1;\r\n                $scope.Value = val;\r\n            }\r\n            else if (val == 4) {\r\n                var val = $scope.Subvalue;\r\n                val -= 1;\r\n                $scope.Subvalue = val;\r\n            }\r\n            else if (val == 5) {\r\n                var val = $scope.Numbers;\r\n                val -= 1;\r\n                $scope.Numbers = val;\r\n            }\r\n        }\r\n        $scope.Reset = function (val) {\r\n            if (val == 1) {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Reset',\r\n                    'Are you sure you want to reset Max Value to \"' + $scope.Content.Value.Attribute.AttributeContent.Value.CurrentAndMaxValue.MaxValue + '\"?',\r\n                    { size: 'md' }\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function (res) {\r\n                        if (res == \"yes\") {\r\n                            $scope.Maxvalue = $scope.Content.Value.Attribute.AttributeContent.Value.CurrentAndMaxValue.MaxValue;\r\n                        }\r\n\r\n                    });\r\n            }\r\n            else if (val == 2) {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Reset',\r\n                    'Are you sure you want to reset Current Value to \"' + $scope.Content.Value.Attribute.AttributeContent.Value.CurrentAndMaxValue.CurrentValue + '\"?',\r\n                    { size: 'md' }\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function (res) {\r\n                        if (res == \"yes\") {\r\n                            $scope.Currentvalue = $scope.Content.Value.Attribute.AttributeContent.Value.CurrentAndMaxValue.CurrentValue;\r\n                        }\r\n\r\n                    });\r\n            }\r\n            else if (val == 3) {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Reset',\r\n                    'Are you sure you want to reset Value to \"' + $scope.Content.Value.Attribute.AttributeContent.Value.ValueAndSubValue.value + '\"?',\r\n                    { size: 'md' }\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function (res) {\r\n                        if (res == \"yes\") {\r\n                            $scope.Value = $scope.Content.Value.Attribute.AttributeContent.Value.ValueAndSubValue.value;\r\n                        }\r\n\r\n                    });\r\n            }\r\n            else if (val == 4) {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Reset',\r\n                    'Are you sure you want to reset Sub Value to \"' + $scope.Content.Value.Attribute.AttributeContent.Value.ValueAndSubValue.subvalue + '\"?',\r\n                    { size: 'md' }\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function (res) {\r\n                        if (res == \"yes\") {\r\n                            $scope.Subvalue = $scope.Content.Value.Attribute.AttributeContent.Value.ValueAndSubValue.subvalue;\r\n                        }\r\n\r\n                    });\r\n            }\r\n            else if (val == 5) {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Reset',\r\n                    'Are you sure you want to reset Number to \"' + $scope.Content.Value.Attribute.AttributeContent.Value.Number.value + '\"?',\r\n                    { size: 'md' }\r\n                );\r\n\r\n                dlg.result.then(\r\n                    function (res) {\r\n                        if (res == \"yes\") {\r\n                            $scope.Numbers = $scope.Content.Value.Attribute.AttributeContent.Value.Number.value;\r\n                        }\r\n\r\n                    });\r\n            }\r\n\r\n        }\r\n        $scope.SaveAttributeCorestatValue = function () {\r\n            if ($scope.Content.Value.Attribute.AttributeContent.TypeId == 6) {\r\n              \r\n            }\r\n            else if ($scope.Content.Value.Attribute.AttributeContent.TypeId == 5) {\r\n                //$scope.Content.Value.Attribute.CoreStatValue.ValueAndSubValue = \"value:\" + $scope.Value + \"subvalue:\" + $scope.Subvalue;\r\n                $scope.Content.Value.Attribute.CoreStatValue.ValueAndSubValue.value = $scope.Value;\r\n                $scope.Content.Value.Attribute.CoreStatValue.ValueAndSubValue.subvalue = $scope.Subvalue;\r\n            }\r\n            else if ($scope.Content.Value.Attribute.AttributeContent.TypeId == 14) {\r\n                //$scope.Content.Value.Attribute.CoreStatValue.Number = \"value:\" + $scope.Numbers;\r\n                $scope.Content.Value.Attribute.CoreStatValue.Number.value = $scope.Numbers;\r\n            }\r\n            $uibModalInstance.close($scope.Content);\r\n        }\r\n        $scope.DiceRoll = function (val) {\r\n            if (val == 1) {\r\n                var defaultdice = layoutService.GetDefaultDice($scope.Content.Value.Attribute.AttributeContent.CharacterId).then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        var command = data.data.PayLoad + \"+\" + $scope.Maxvalue;\r\n                        $scope.Content.Command = command;\r\n                        var dlg = dialogs.create('/views/dialogs/defaultdiceselection.html', 'dialogDefaultDiceSelect',\r\n                            { scope: $scope.Content, mode: 2 }\r\n                        );\r\n                        dlg.result.then(function (res) {\r\n                            if (res != \"cancel\") {\r\n\r\n                            }\r\n                        });\r\n                        //dicerollwithcommand(command)\r\n                    }\r\n                    else if (data.data.StatusCode == 400) {\r\n                        alert(data.data.ErrorMessage);\r\n                    }\r\n                })\r\n            }\r\n            else if (val == 2) {\r\n                var defaultdice = layoutService.GetDefaultDice($scope.Content.Value.Attribute.AttributeContent.CharacterId).then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        var command = data.data.PayLoad + \"+\" + $scope.Currentvalue;\r\n                        $scope.Content.Command = command;\r\n                        var dlg = dialogs.create('/views/dialogs/defaultdiceselection.html', 'dialogDefaultDiceSelect',\r\n                            { scope: $scope.Content, mode: 2 }\r\n                        );\r\n                        dlg.result.then(function (res) {\r\n                            if (res != \"cancel\") {\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (data.data.StatusCode == 400) {\r\n                        alert(data.data.ErrorMessage);\r\n                    }\r\n                })\r\n            }\r\n            else if (val == 3) {\r\n                var defaultdice = layoutService.GetDefaultDice($scope.Content.Value.Attribute.AttributeContent.CharacterId).then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        var command = data.data.PayLoad + \"+\" + $scope.Value;\r\n                        $scope.Content.Command = command;\r\n                        var dlg = dialogs.create('/views/dialogs/defaultdiceselection.html', 'dialogDefaultDiceSelect',\r\n                            { scope: $scope.Content, mode: 2 }\r\n                        );\r\n                        dlg.result.then(function (res) {\r\n                            if (res != \"cancel\") {\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (data.data.StatusCode == 400) {\r\n                        alert(data.data.ErrorMessage);\r\n                    }\r\n                })\r\n            }\r\n            else if (val == 4) {\r\n                var defaultdice = layoutService.GetDefaultDice($scope.Content.Value.Attribute.AttributeContent.CharacterId).then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        var command = data.data.PayLoad + \"+\" + $scope.Subvalue;\r\n                        $scope.Content.Command = command;\r\n                        var dlg = dialogs.create('/views/dialogs/defaultdiceselection.html', 'dialogDefaultDiceSelect',\r\n                            { scope: $scope.Content, mode: 2 }\r\n                        );\r\n                        dlg.result.then(function (res) {\r\n                            if (res != \"cancel\") {\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (data.data.StatusCode == 400) {\r\n                        alert(data.data.ErrorMessage);\r\n                    }\r\n                })\r\n            }\r\n            else if (val == 5) {\r\n                var defaultdice = layoutService.GetDefaultDice($scope.Content.Value.Attribute.AttributeContent.CharacterId).then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        var command = data.data.PayLoad + \"+\" + $scope.Numbers;\r\n                        $scope.Content.Command = command;\r\n                        var dlg = dialogs.create('/views/dialogs/defaultdiceselection.html', 'dialogDefaultDiceSelect',\r\n                            { scope: $scope.Content, mode: 2 }\r\n                        );\r\n                        dlg.result.then(function (res) {\r\n                            if (res != \"cancel\") {\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (data.data.StatusCode == 400) {\r\n                        alert(data.data.ErrorMessage);\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.close('cancel');\r\n        }\r\n\r\n    }]);\r\n\r\n    module.controller('dialogTileBorder', ['$scope', '$uibModalInstance', 'data', 'dialogs', function ($scope, $uibModalInstance, data, dialogs, tileService) {\r\n\r\n        $scope.TileBorders = data.scope;\r\n        $scope.cancel = function () {\r\n          //  $(\"#loading\").css(\"display\", \"block\");\r\n            $uibModalInstance.dismiss('Canceled');\r\n            //$(\"#loading\").fadeOut(\"slow\");\r\n        };\r\n\r\n        $scope.SaveTileBorder = function () {\r\n            $scope.TileBorders.color = $(\"#bordercolor\").val();\r\n            $uibModalInstance.close($scope.TileBorders);\r\n\r\n        }\r\n        $scope.SaveTileBackgrounds = function () {\r\n            $scope.TileBorders.titletextcolor = $(\"#titletextcolor\").val();\r\n            $scope.TileBorders.titlebackgroundcolor = $(\"#titlebackgroundcolor\").val();\r\n            $scope.TileBorders.bodytextcolor = $(\"#bodytextcolor\").val();\r\n            $scope.TileBorders.bodybackgroundColor = $(\"#bodybackgroundColor\").val();\r\n            $uibModalInstance.close($scope.TileBorders);\r\n        }\r\n\r\n    }]);\r\n    module.controller('dialogImportRulesetinCharecter', ['$scope', '$uibModalInstance', 'data', 'characterService', 'toaster', function ($scope, $uibModalInstance, data, characterService, toaster) {\r\n        var characterProfileId = data.characterProfileId;\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.close('cancel');\r\n        }\r\n\r\n\r\n        $scope.rulesetFileUpload = function (input) {\r\n            if (input.files && input.files[0]) {\r\n                var reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    $scope.file = e.target.result\r\n                };\r\n                reader.readAsDataURL(input.files[0]);\r\n                $scope.fileName = input.files[0].name;\r\n            }\r\n        }\r\n\r\n\r\n        $scope.uploadFile = function () {\r\n            var importRuleSet = {\r\n                RuleSetId: characterProfileId,\r\n                File: $scope.file,\r\n            };\r\n\r\n         \r\n            characterService.uploadFileToUrl(characterProfileId, $scope.file, $scope.fileName).then(function (data) {\r\n\r\n                if (data.data.StatusCode == 200) {\r\n                    if (data.data.PayLoad == \"Sucess\") {\r\n                        toaster.pop('success', 'Ruleset Imported Sucessfully');\r\n                        $uibModalInstance.close(data.data.PayLoad);\r\n                    }\r\n                    else {\r\n                        toaster.pop('error', data.data.ErrorMessage);\r\n                        // $uibModalInstance.close(data.data.PayLoad);\r\n                    }\r\n\r\n                }\r\n                else if (data.data.StatusCode == 400) {\r\n                    toaster.pop('error', data.data.ErrorMessage);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n    }]);\r\n\r\n\r\n\r\n    module.controller('dialogImportRuleset', ['$scope', '$uibModalInstance', 'data', 'rulesetService', 'toaster', function ($scope, $uibModalInstance, data, rulesetService, toaster) {\r\n\r\n        var ruleSetId = data.ruleSetId;\r\n\r\n        $scope.rulesetFileUpload = function (input) {\r\n            if (input.files && input.files[0]) {\r\n                var reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                   \r\n                    $scope.file = e.target.result\r\n                    //$scope.character.file = $scope.file;\r\n                };\r\n                reader.readAsDataURL(input.files[0]);\r\n                $scope.fileName = input.files[0].name;\r\n            }\r\n        }\r\n\r\n        $scope.uploadFile = function () {\r\n\r\n            var importRuleSet = {\r\n                RuleSetId: ruleSetId,\r\n                File: $scope.file,\r\n            };\r\n            if (angular.isUndefined($scope.file) == true)\r\n            {\r\n                toaster.pop('error', 'Please select zip file');\r\n                return false;\r\n            }\r\n            rulesetService.uploadFileToUrl(ruleSetId, $scope.file, $scope.fileName, $scope.RuleSetName).then(function (data) {\r\n                if (data.data.StatusCode == 200) {\r\n\r\n                    toaster.pop('success', 'Ruleset Imported Sucessfully');\r\n                    $uibModalInstance.close(data.data.PayLoad);\r\n                }\r\n\r\n                else {\r\n                    toaster.pop('error', data.data.ErrorMessage);\r\n                   \r\n                }\r\n            });\r\n\r\n        \r\n        }\r\n        $scope.cancel = function () {\r\n\r\n            $uibModalInstance.close('');\r\n        }\r\n    }]);\r\n\r\n  \r\n\r\n    module.controller('dialogDefaultDiceSelect', ['$scope', '$uibModalInstance', 'data', 'rulesetService', 'layoutService', 'dialogs', 'rulesetDataShareService', function ($scope, $uibModalInstance, data, rulesetService, layoutService, dialogs, rulesetDataShareService) {\r\n        $scope.Result = data.scope;\r\n        $scope.CharacterId = data.CharacterId;\r\n        $scope.Dicelist = data.Dice;\r\n        $scope.Lastresult = data.LastResult;\r\n        $scope.Corestats = rulesetDataShareService.getLayoutData();\r\n        if ($scope.Result != undefined && $scope.Result != null) {\r\n            if ($scope.Result.length <= 0) {\r\n                $scope.ShowNonNumericCorestats = true;\r\n            }\r\n        }\r\n        $uibModalInstance.rendered.then(function () {\r\n            if (data.mode == 1) {\r\n                //dice_initialize(document.body);\r\n                if ($scope.Result != undefined && $scope.Result != null && $scope.Result != \"\")\r\n                {\r\n                    $(\"#customset\").val($scope.Result);\r\n                }\r\n                diceselectcommand();\r\n            }\r\n            else if (data.mode == 2) {\r\n\r\n                if ($scope.Result.length <= 0) {\r\n                    $scope.ShowNonNumericCorestats = true;\r\n                }\r\n\r\n                $scope.DiceVisible = false;\r\n                if ($scope.Result.TileTypeName == \"Execute\") {\r\n                    if ($scope.Result.ItemProperties != null) {\r\n                        if ($scope.Result.ItemProperties[10].Value.Text.value != null) {\r\n                            var command = $scope.Result.ItemProperties[10].Value.Text.value;\r\n                            $(\"#customset\").val(command);\r\n                        }\r\n                        else {\r\n                            var command = \"4d6 + d20\";\r\n                            $(\"#customset\").val(command);\r\n                        }\r\n                    }\r\n                }\r\n                else if ($scope.Result.TileTypeName == \"Command\") {\r\n                    if ($scope.Result.Value.Command.command != null) {\r\n                        var command = $scope.Result.Value.Command.command;\r\n                        $(\"#customset\").val(command);\r\n                    }\r\n                }\r\n                else if ($scope.Result.TileTypeName == \"Attribute\") {\r\n                    var command = $scope.Result.Command;\r\n                    $(\"#customset\").val(command);\r\n                }\r\n                else {\r\n                    var command = \"4d6 + d20\";\r\n                    $(\"#customset\").val(command);\r\n                }\r\n\r\n                dicerollwithcommand(command)\r\n            }\r\n            else if (data.mode == 3) {\r\n\r\n                var dice = layoutService.GetDice($scope.Result);\r\n                dice.then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        $scope.DiceList = data.data.PayLoad;\r\n                        $scope.DiceVisible = true;\r\n                    }\r\n                });\r\n\r\n                dicerollwithoutcommand();\r\n\r\n            }\r\n        });\r\n\r\n        $scope.DefaultDiceSelect = function () {\r\n\r\n            var dice = $(\"#customset\").val();\r\n            $uibModalInstance.close(dice);\r\n        }\r\n\r\n        $scope.DiceSaveCommand = function () {\r\n\r\n            var dice = $(\"#customset\").val();\r\n            //var result = $(\"div#sethelp\")[0].innerHTML;\r\n            if (dicenotationvalidator(dice)) {\r\n                var dlg = dialogs.create('/views/dialogs/adddicename.html', 'dialogDefaultDiceSelect',\r\n                    { scope: dice, Dice: $scope.DiceList, LastResult: $scope.Lastresult, CharacterId: $scope.Result }\r\n                );\r\n                dlg.result.then(function (res) {\r\n\r\n                    $scope.DiceList = res;\r\n                })\r\n            } else {\r\n                alert('Invalid Command');\r\n            }\r\n        }\r\n\r\n        $scope.save = function () {\r\n            var dicesave =\r\n                {\r\n                    CharacterId: $scope.CharacterId,\r\n                    Name: $scope.Name,\r\n                    Command: $scope.Result,\r\n                    LastRunResult: $scope.Lastresult\r\n                };\r\n            var savedice = layoutService.SaveDice(dicesave);\r\n            savedice.then(function (data) {\r\n                if (data.data.StatusCode == 200) {\r\n                    $scope.Dicelist.push(dicesave);\r\n                    $uibModalInstance.close($scope.Dicelist);\r\n                }\r\n            })\r\n\r\n        }\r\n        $scope.ShowCommand = function (name) {\r\n            for (var i = 0; i < $scope.DiceList.length; i++) {\r\n                if (name == $scope.DiceList[i].Name) {\r\n                    $(\"#customset\").val($scope.DiceList[i].Command);\r\n                }\r\n            }\r\n        }\r\n        $scope.AddNumericCorestats = function () {\r\n            $scope.NumericCorestats = [];\r\n            for (var i = 0; i < $scope.Corestats.CorestatValues.length; i++) {\r\n                if ($scope.Corestats.CorestatValues[i].TypeId == 5 || $scope.Corestats.CorestatValues[i].TypeId == 6 || $scope.Corestats.CorestatValues[i].TypeId == 14)\r\n                    $scope.NumericCorestats.push($scope.Corestats.CorestatValues[i].Name);\r\n            }\r\n            var dlg = dialogs.create('/views/dialogs/addnumericcorestats.html', 'dialogDefaultDiceSelect',\r\n                { scope: $scope.NumericCorestats }\r\n            );\r\n            dlg.result.then(function (res) {\r\n            })\r\n\r\n        }\r\n        \r\n\r\n        $scope.ShowCorestatValue = function () {\r\n            $scope.CurrentMaxValue = false;\r\n            $scope.ValueSubValue = false;\r\n            $scope.Number = false;\r\n            for (var i = 0; i < $scope.Corestats.CorestatValues.length; i++) {\r\n                if ($scope.corestattype == $scope.Corestats.CorestatValues[i].CorestatName) {\r\n                    if ($scope.Corestats.CorestatValues[i].Value.CurrentAndMaxValue != null) {\r\n                        $scope.CurrentMaxValue = true;\r\n                        $scope.ValueSubValue = false;\r\n                        $scope.Number = false;\r\n                        $scope.currenttext = false;\r\n                        $scope.maxtext = false;\r\n                        $scope.subvaltext = false;\r\n                        $scope.valtext = false;\r\n                        $scope.CurrentMaxVal = false;\r\n                    }\r\n                    else if ($scope.Corestats.CorestatValues[i].Value.ValueAndSubValue != null) {\r\n                        $scope.CurrentMaxValue = false;\r\n                        $scope.ValueSubValue = true;\r\n                        $scope.Number = false;\r\n                        $scope.currenttext = false;\r\n                        $scope.maxtext = false;\r\n                        $scope.subvaltext = false;\r\n                        $scope.valtext = false;\r\n                        $scope.ValSub = false;\r\n                    }\r\n                    else if ($scope.Corestats.CorestatValues[i].Value.Number != null) {\r\n                        $scope.CurrentMaxValue = false;\r\n                        $scope.ValueSubValue = false;\r\n                        $scope.Number = true;\r\n                        $scope.currenttext = false;\r\n                        $scope.maxtext = false;\r\n                        $scope.subvaltext = false;\r\n                        $scope.valtext = false;\r\n                        $scope.number = $scope.Corestats.CorestatValues[1].Value.Number.value;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n       \r\n        $scope.showcurrentmax = function (value) {\r\n            $scope.currenttext = true;\r\n            $scope.maxtext = false;\r\n            $scope.subvaltext = false;\r\n            $scope.valtext = false;\r\n            for (var i = 0; i < $scope.Corestats.CorestatValues.length; i++) {\r\n                if ($scope.corestattype == $scope.Corestats.CorestatValues[i].CorestatName) {\r\n                    if (value == 'MaxValue') {\r\n                        $scope.value = 'MaxValue';\r\n                        $scope.maxtext = true;\r\n                        $scope.currenttext = false;\r\n                        $scope.max = $scope.Corestats.CorestatValues[i].Value.CurrentAndMaxValue.MaxValue;\r\n                    }\r\n                    else if (value == 'CurrentValue') {\r\n                        $scope.value = 'CurrentValue';\r\n                        $scope.maxtext = false;\r\n                        $scope.currenttext = true;\r\n                        $scope.current = $scope.Corestats.CorestatValues[i].Value.CurrentAndMaxValue.CurrentValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n       \r\n        $scope.showValueSubvalue = function (value) {\r\n            $scope.currenttext = false;\r\n            $scope.maxtext = false;\r\n            $scope.subvaltext = true;\r\n            $scope.valtext = false;\r\n            for (var i = 0; i < $scope.Corestats.CorestatValues.length; i++) {\r\n                if ($scope.corestattype == $scope.Corestats.CorestatValues[i].CorestatName) {\r\n                    if (value == 'Value') {\r\n                        $scope.value = 'Value';\r\n                        $scope.valtext = true;\r\n                        $scope.subvaltext = false;\r\n                        $scope.val = $scope.Corestats.CorestatValues[i].Value.ValueAndSubValue.value;\r\n                    }\r\n                    else if (value == 'SubValue') {\r\n                        $scope.value = 'SubValue';\r\n                        $scope.valtext = false;\r\n                        $scope.subvaltext = true;\r\n                        $scope.subval = $scope.Corestats.CorestatValues[i].Value.ValueAndSubValue.subvalue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        $scope.SaveCorestatValues = function () {\r\n\r\n            //if ($scope.checked && !$scope.subvalue && !$scope.currentvalue) {\r\n            for (var i = 0; i < $scope.Corestats.CorestatValues.length; i++) {\r\n                if ($scope.corestatype == $scope.Corestats.CorestatValues[i].Name) {\r\n                    var diceresult = $(\"#customset\").val();\r\n                    if ($scope.Corestats.CorestatValues[i].Value.CurrentAndMaxValue != null) {\r\n                        if ($scope.value == 'MaxValue' && $scope.Corestats.CorestatValues[i].Value.CurrentAndMaxValue.MaxValue != null) {\r\n                            $scope.value = diceresult + \" +\" + $scope.Corestats.CorestatValues[i].Value.CurrentAndMaxValue.MaxValue;\r\n                        }\r\n                        else if ($scope.value == 'CurrentValue' && $scope.Corestats.CorestatValues[i].Value.CurrentAndMaxValue.CurrentValue != null) {\r\n                            $scope.value = diceresult + \" +\" + $scope.Corestats.CorestatValues[i].Value.CurrentAndMaxValue.CurrentValue;\r\n                        }\r\n                        $(\"#customset\").val($scope.value);\r\n                        $uibModalInstance.dismiss($(\"#customset\").val($scope.value));\r\n                    }\r\n                    else if ($scope.Corestats.CorestatValues[i].Value.ValueAndSubValue != null) {\r\n                        if ($scope.value == 'Value' && $scope.Corestats.CorestatValues[i].Value.ValueAndSubValue.value != null) {\r\n                            $scope.value = diceresult + \" +\" + $scope.Corestats.CorestatValues[i].Value.ValueAndSubValue.value;\r\n                        }\r\n                        else if ($scope.value == 'SubValue' && $scope.Corestats.CorestatValues[i].Value.ValueAndSubValue.subvalue != null) {\r\n                            $scope.value = diceresult + \" +\" + $scope.Corestats.CorestatValues[i].Value.ValueAndSubValue.subvalue;\r\n                        }\r\n                        $(\"#customset\").val($scope.value);\r\n                        $uibModalInstance.dismiss($(\"#customset\").val($scope.value));\r\n                    }\r\n                    else if ($scope.corestatype == $scope.Corestats.CorestatValues[i].Name) {\r\n                        var diceresult = $(\"#customset\").val();\r\n                        $scope.value = diceresult + \"+\" + $scope.Corestats.CorestatValues[i].Value.Number.value;\r\n                        $(\"#customset\").val($scope.value);\r\n                        $uibModalInstance.dismiss($(\"#customset\").val($scope.value));\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        \r\n        $scope.Tracing = function () {\r\n            diceselectcommandtrace();\r\n        }\r\n        $scope.cancel = function () {\r\n\r\n            $uibModalInstance.close('');\r\n        }\r\n\r\n\r\n\r\n\r\n    }]);\r\n\r\n\r\n    //For New Design\r\n\r\n    module.controller('dialogGeneralSettings', ['$scope', '$uibModalInstance', 'data', 'rulesetService', 'toaster', 'dialogs', function ($scope, $uibModalInstance, data, rulesetService, toaster, dialogs) {\r\n        //if (data.btntext == \"Copy\")\r\n        //{\r\n        //    data.scope[0].RulesetName = \"\";\r\n        //}\r\n\t\t$scope.showimagebtns = false;\r\n\t\t$scope.GeneralSettings = data.scope;\r\n\t\t$scope.imageLoaded = false;\r\n\t\tconsole.log(\"$scope.GeneralSettings : \", $scope.GeneralSettings);\r\n\t\t$scope.buttontext = data.btntext;\r\n        $scope.pageName = data.tabname;\r\n        $scope.Disabled = data.Disabled;\r\n        $scope.DisableName = data.DisableName;\r\n        $scope.RulesetData = function () {\r\n            rulesetService.GetRuleSets().then(function (data) {\r\n                if (data.data.StatusCode == 200) {\r\n                    $scope.RuleSets = data.data.PayLoad;\r\n                    $scope.HeaderContents = rulesetDataShareService.getDisplayCharacterRulesetCount();\r\n                    $scope.HeaderContents.TotalRuleSetCount = $scope.RuleSets.length;\r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                }\r\n            });\r\n        }\r\n\t\t$scope.OpenFile = function () {\r\n\t\t\t$(\"#newRulesetImage\").click();\r\n\t\t\t//var input = $('input[type=file]');//.val();\r\n\t\t\t//input.click();\r\n\t\t\t//return false;\r\n\t\t}\r\n\t\t$scope.ItemImageUpload = function (input) {\r\n\t\t\tconsole.log(\"File Input: \", input);\r\n\t\t\t$scope.showimagebtns = false;\r\n\t\t\tif (input.files && input.files[0]) {\r\n\t\t\t\tvar reader = new FileReader();\r\n\t\t\t\treader.onload = function (e) {\r\n\t\t\t\t\t//console.log(\"e.target.result: \"+e.target.result);\r\n\t\t\t\t\t$scope.$apply(function () {\r\n\t\t\t\t\t\t$scope.GeneralSettings[2].Value.Image.image = e.target.result;\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t};\r\n\t\t\t\treader.readAsDataURL(input.files[0]);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$scope.OpenManageRuleset = function () {\r\n\t\t\tconsole.log(\"OPenManageRuleSet\");\r\n\t\t\tdata.openManageRuleset($scope.GeneralSettings[0].RulesetId);\r\n\t\t}\r\n\r\n\t\t$scope.OpenBingSearch = function () {\r\n\t\t\tconsole.log(\"OPenManageRuleSet\");\r\n\t\t\tdata.OpenBingSearch();\r\n\t\t}\r\n\r\n\t\t$scope.ManageRuleset = function () {\r\n\t\t\tconsole.log(\"$Scope.generalsettings: \"+ $scope.GeneralSettings[0].RulesetId);\r\n            $(\"#loading\").css(\"display\", \"block\");\r\n            if ($scope.GeneralSettings[0].RulesetId == 0) {\r\n                var savesettings = rulesetService.CreateGeneralSettings($scope.GeneralSettings);\r\n                savesettings.then(function (data) {\r\n                    //$(\"#loading\").fadeOut(\"slow\");\r\n                    if (data.data.StatusCode == 200)\r\n                    {\r\n                        $scope.GeneralSettings = data.data.PayLoad;\r\n                        $uibModalInstance.close($scope.GeneralSettings);\r\n                        $(\"#loading\").fadeOut(\"slow\");\r\n                    }\r\n                    else if (data.data.StatusCode == 400) {\r\n                        if (data.data.ShowToUser == true) {\r\n                            toaster.pop('error', data.data.ErrorMessage);\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n            else if ($scope.GeneralSettings[0].RulesetId != 0 && $scope.buttontext == \"Update\") {\r\n                var updategeneralsettings = rulesetService.UpdateGeneralSettings($scope.GeneralSettings);\r\n                updategeneralsettings.then(function (data) {\r\n           \r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                    if (data.data.StatusCode == 200) {\r\n                        $scope.GeneralSettings = data.data.PayLoad;\r\n                        $uibModalInstance.close($scope.GeneralSettings);\r\n                        $(\"#loading\").fadeOut(\"slow\");\r\n                    }\r\n                })\r\n            }\r\n\r\n            else if ($scope.GeneralSettings[0].RulesetId != 0 && $scope.buttontext == \"Copy\") {\r\n                var _rulesetID = $scope.GeneralSettings[0].RulesetId;\r\n                var Name = $scope.GeneralSettings[0].RulesetName;\r\n                var CopyRuleset = rulesetService.CopyRulesetByRulesetId(_rulesetID, Name);\r\n                CopyRuleset.then(function (data) {\r\n           \r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                    if (data.data.StatusCode == 200) {\r\n                        //$scope.GeneralSettings = data.data.PayLoad.Result;\r\n                        $uibModalInstance.close(data.data.PayLoad.Result);\r\n                        $(\"#loading\").fadeOut(\"slow\");\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        $scope.cancel = function () {\r\n           // $(\"#loading\").css(\"display\", \"block\");\r\n            $uibModalInstance.close('cancel');\r\n           // $(\"#loading\").fadeOut(\"slow\");\r\n        }\r\n\r\n    }]);\r\n    module.controller('dialogManageRuleset', ['$scope', '$uibModalInstance', 'data', 'rulesetService', 'toaster', 'dialogs', 'rulesetDataShareService', '$interval', function ($scope, $uibModalInstance, data, rulesetService, toaster, dialogs, rulesetDataShareService, $interval) {\r\n\r\n\t\tconsole.log(\"RulesetGeneralSettings: \", data.scope);\r\n\t\t$scope.GeneralSettings = data.scope;\r\n\t\t//$scope.RulesetID = data.scope;\r\n        $scope.ShowAllRulesetContent = function (value) {\r\n            $scope.Response = value;\r\n            //$scope.Response.RulesetID = $scope.RulesetID;\r\n            $uibModalInstance.close($scope.Response);\r\n\r\n        }\r\n\r\n        $scope.ExportRuleSet = function () {\r\n            var rulesetId = rulesetDataShareService.getRulesetsData();\r\n            rulesetService.ExportRuleset(rulesetId);\r\n           // $interval(toaster.pop(\"success\", \"RuleSet Exported Successfully.\"), 45000);\r\n        }\r\n\r\n        $scope.cancel = function () {\r\n            $uibModalInstance.close('cancel');\r\n        }\r\n\r\n    }]);\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-controllers');\r\n\r\n    app.controller('attributesPageController', ['$scope', '$q', '$timeout', '$transition', 'dialogs', 'toaster', 'navService', 'dataService',\r\n        function ($scope, $q, $timeout, $transition, dialogs, toaster, navService, dataService) {\r\n            \r\n            $scope.data = null;\r\n\r\n            $scope.menuHamburger = {\r\n                opened: false,\r\n                menus: navService.getCommonHamburger([]),\r\n                menuClick: function (item) {\r\n                    $scope.menuCharacter.opened = false;\r\n                }\r\n            };\r\n\r\n            $scope.menuCharacter = {\r\n                opened: false,\r\n                menus: navService.getCommonCharacterNav([]),\r\n                menuClick: function (item) {\r\n                    $scope.menuCharacter.opened = false;\r\n                }\r\n            };\r\n\r\n            navService.registerNav('hamburger', $scope.menuHamburger);\r\n            navService.registerNav('character', $scope.menuCharacter);\r\n            \r\n            (function () {                \r\n                navService.updateBody(true, false);\r\n\r\n                $timeout(function () {                    \r\n                    $scope.data = {\r\n                        corestats: dataService.character.campaign.coreStats\r\n                    };\r\n                });\r\n\r\n            })();\r\n        }\r\n    ]);\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-controllers');\r\n    app.controller('charactersPageController', ['$scope', '$state', '$window', 'dialogs', '$timeout', '$transition', 'toaster', 'navService', 'characterService', 'rulesetService', 'rulesetDataShareService', 'authService',\r\n        function ($scope, $state, $window, dialogs, $timeout, $transition, toaster, navService, characterService, rulesetService, rulesetDataShareService, authService) {\r\n            //Event Handlers for Characters Page.\r\n            $scope.file = \"\";\r\n            $scope.showBtn = false;\r\n            $scope.Imagesrc = \"http://www.advacto.com/images/user.jpg\";\r\n            $scope.characterAdd = function () {\r\n                $state.go('profile.addnewcharacterdialog');\r\n            };\r\n\r\n            $scope.characterSubmitForm = function (valid) {\r\n                valid = false;\r\n            }\r\n            $scope.CharacterRuleSetOnChange = function () {\r\n                if ($scope.character.RulesetID > 0) {\r\n\r\n                    $scope.character.Button = false;\r\n                }\r\n                else {\r\n                    $scope.character.Button = true;\r\n                }\r\n            }\r\n            $scope.newCharacter = function () {\r\n\r\n                var newCharacterData = {\r\n                    id: 0,\r\n                    name: \"\",\r\n                    file: null,\r\n                    RulesetID: 0\r\n                }\r\n\r\n                var dlg = dialogs.create('/views/dialogs/character-addnew.html', 'dialogAddNewCharacter',\r\n                    { mode: 1, characterData: newCharacterData }\r\n                );\r\n\r\n                dlg.result.then(function (res) {\r\n                    if (res != 'cancel') {\r\n                        $scope.characters.push(res);\r\n                        toaster.pop('success', 'Character Created Successfully');\r\n                    }\r\n                });\r\n            };\r\n            $scope.GetRulesets = function () {\r\n                $state.go('profile.AddNewRuleSet');\r\n            };\r\n            $scope.EditData = function () {\r\n                $state.go('profile.EditProfile');\r\n            }\r\n            $scope.ReSetPassword = function () {\r\n                $state.go('profile.ResetPassword');\r\n            }\r\n            $scope.newstyles = function (c) {\r\n                if (c.Portrait) {\r\n                    return {\r\n                        'background-size': '100% 100%',\r\n                        'background-repeat': 'no-repeat',\r\n                        'width': '120px',\r\n                        'height': '120px'\r\n                    }\r\n                }\r\n                return {\r\n                    'background-color': 'transparent',\r\n                    'background-repeat': 'no-repeat',\r\n                    'width': '120px',\r\n                    'height': '120px'\r\n                }\r\n            };\r\n            $scope.getStyles = function (c) {\r\n                if (c.Portrait) {\r\n                    return {\r\n                        'background-image': 'url(' + c.Id + '/' + c.Portrait + ')',\r\n                        'background-color': 'white',\r\n                        'width': '10%',\r\n                        'height': '10%'\r\n                    }\r\n                }\r\n                else {\r\n                    return {\r\n                        'background-color': 'transparent',\r\n                        'width': '10%',\r\n                        'height': '10%'\r\n                    }\r\n                }\r\n\r\n            };\r\n            //characterService.GetHeaderContentsCounts();\r\n            characterService.GetCharacters().then(function (data) {\r\n                if (data.data.StatusCode == 200) {\r\n                    $scope.characters = data.data.PayLoad;\r\n                    //$scope.HeaderContents = rulesetDataShareService.getDisplayCharacterRulesetCount();\r\n                    //$scope.HeaderContents.TotalCharactersCount = $scope.characters.length;\r\n                }\r\n                else {\r\n                    if (data.data.StatusCode == 400) {\r\n                        if (data.data.ShowToUser == true) {\r\n                            alert(data.data.ErrorMessage);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            $scope.GetCharacters = function () {\r\n                characterService.GetCharacters().then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        $scope.characters = data.data.PayLoad;\r\n                        //$scope.HeaderContents = rulesetDataShareService.getDisplayCharacterRulesetCount();\r\n                        //$scope.HeaderContents.TotalCharactersCount = $scope.characters.length;\r\n                        $(\"#loading\").fadeOut(\"slow\");\r\n                    }\r\n                    else {\r\n                        if (data.data.StatusCode == 400) {\r\n                            if (data.data.ShowToUser == true) {\r\n                                alert(data.data.ErrorMessage);\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            rulesetService.GetRuleSets().then(function (data) {\r\n                if (data.data.StatusCode == 200) {\r\n                    $scope.RuleSets = data.data.PayLoad;\r\n                    $scope.HeaderContents = rulesetDataShareService.getDisplayCharacterRulesetCount();\r\n                    $scope.HeaderContents.TotalRuleSetCount = $scope.RuleSets.length;\r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                }\r\n                else {\r\n                    if (data.data.StatusCode == 400) {\r\n                        if (data.data.ShowToUser == true) {\r\n                            alert(data.data.ErrorMessage);\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            $scope.GetRuleset = function () {\r\n                rulesetService.GetRuleSets().then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        $scope.RuleSets = data.data.PayLoad;\r\n                        //$scope.HeaderContents = rulesetDataShareService.getDisplayCharacterRulesetCount();\r\n                        //$scope.HeaderContents.TotalRuleSetCount = $scope.RuleSets.length;\r\n                        $(\"#loading\").fadeOut(\"slow\");\r\n                    }\r\n                    else {\r\n                        if (data.data.StatusCode == 400) {\r\n                            if (data.data.ShowToUser == true) {\r\n                                alert(data.data.ErrorMessage);\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            $scope.getThumbNail = function () {\r\n                if ($scope.varRoot.file)\r\n                    return $scope.varRoot.file;\r\n                return null;\r\n            }\r\n            $scope.characterImageUpload = function (input) {\r\n                if (input.files && input.files[0]) {\r\n                    var reader = new FileReader();\r\n                    reader.onload = function (e) {\r\n                        $('#characterImage')\r\n                            .attr('src', e.target.result)\r\n                            .width(120)\r\n                            .height(120);\r\n                        $scope.file = e.target.result\r\n                        $scope.character.file = $scope.file;\r\n                    };\r\n                    reader.readAsDataURL(input.files[0]);\r\n                }\r\n            }\r\n            $scope.tilePickerApi = {\r\n                messageId: null,\r\n                beforeSelect: function () {\r\n                    toaster.clear('*');\r\n                    $scope.tilePickerApi.messageId = toaster.pop({\r\n                        type: 'note',\r\n                        body: 'Click a character to ' + $scope.tilePickerApi.action + ' it.',\r\n                        timeout: 0\r\n                    });\r\n                },\r\n                onClose: function () {\r\n                    if ($scope.tilePickerApi.messageId)\r\n                        toaster.clear($scope.tilePickerApi.messageId);\r\n                }\r\n            };\r\n            $scope.addNewRuleSet = function () {\r\n                $state.go('profile.NewRuleSet');\r\n            }\r\n            $scope.cancel = function () {\r\n                //$(\"#loading\").css(\"display\", \"block\");\r\n                $window.history.back();\r\n                $scope.character.name = \"\";\r\n                $scope.character.file = \"\";\r\n                $scope.character.RulesetID = \"\";\r\n\r\n            }\r\n            $scope.save = function () {\r\n                $(\"#loading\").css(\"display\", \"block\");\r\n                var character = {\r\n                    Id: $scope.character.id,\r\n                    Name: $scope.character.name,\r\n                    Portrait: $scope.character.file,\r\n                    RulesetID: $scope.character.RulesetID,\r\n                    Heading: $scope.character.Heading,\r\n                    Action: $scope.character.Action\r\n                };\r\n\r\n                if ($scope.character.RulesetID > 0) {\r\n                    if ($scope.character.id == 0) {\r\n                        var addcharacter = characterService.saveCharacter(character);\r\n                        addcharacter.then(function (res) {\r\n                            if (res.data.StatusCode == 200) {\r\n                                $scope.character.name = \"\";\r\n                                $scope.character.file = \"\";\r\n                                $scope.character.RulesetID = \"\";\r\n                                $scope.createcharacter = res.PayLoad;\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                toaster.pop('success', \"Character Created Successfully\");\r\n                            }\r\n                            else {\r\n                                if (res.data.StatusCode == 400) {\r\n\r\n                                    if (res.data.ShowToUser == true) {\r\n                                        toaster.pop('error', res.data.ErrorMessage);\r\n                                        $(\"#loading\").fadeOut(\"slow\");\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        });\r\n                    }\r\n                    else {\r\n                        var data;\r\n                        if ($scope.character.Action == \"New\") {\r\n                            data = characterService.saveCharacter(character);\r\n                        }\r\n                        else if ($scope.character.Action == \"edit\") {\r\n                            data = characterService.EditCharacter(character);\r\n                        }\r\n                        else {\r\n                            data = characterService.CopyCharacter(character);\r\n                        }\r\n                        data.then(function (res) {\r\n                            if (res.data.StatusCode == 200) {\r\n                                $scope.character.name = \"\";\r\n                                $scope.character.file = \"\";\r\n                                $scope.character.RulesetID = \"\";\r\n                                $scope.createcharacter = res.PayLoad;\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                toaster.pop('success', \"Character Created Successfully\");\r\n                            }\r\n                            else {\r\n                                if (res.data.StatusCode == 400) {\r\n\r\n                                    if (res.data.ShowToUser == true) {\r\n                                        //alert(res.data.ErrorMessage);\r\n                                        toaster.pop('error', res.data.ErrorMessage);\r\n                                        $(\"#loading\").fadeOut(\"slow\");\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        })\r\n                    }\r\n\r\n                } else {\r\n                    toaster.pop('error', 'Please select one ruleset');\r\n                }\r\n            }\r\n\r\n\r\n\r\n            $scope.copyCharacter = function (characterData) {\r\n\r\n                var copyCharacterData = {\r\n                    id: characterData.Id,\r\n                    name: characterData.Name,\r\n                    file: characterData.Portrait,\r\n                    RulesetID: characterData.RulesetId,\r\n                };\r\n\r\n                var dlg = dialogs.create('/views/dialogs/character-addnew.html', 'dialogAddNewCharacter',\r\n                    { mode: 3, characterData: copyCharacterData }\r\n                );\r\n\r\n                dlg.result.then(function (res) {\r\n                    if (res != 'cancel') {\r\n                        $scope.characters.push(res);\r\n                        toaster.pop('success', 'Character Copied Successfully');\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            $scope.editCharacter = function (characterData) {\r\n\r\n                var editCharacterData = {\r\n                    id: characterData.Id,\r\n                    name: characterData.Name,\r\n                    file: characterData.Portrait,\r\n                    RulesetID: characterData.RulesetId,\r\n                }\r\n\r\n                var dlg = dialogs.create('/views/dialogs/character-addnew.html', 'dialogAddNewCharacter',\r\n                    { mode: 2, characterData: editCharacterData }\r\n                );\r\n\r\n                dlg.result.then(function (res) {\r\n                    if (res != 'cancel') {\r\n\r\n                        var editedCharacterIndex = -1;\r\n                        for (var i = 0; i < $scope.characters.length; i++) {\r\n                            if ($scope.characters[i].Id == editCharacterData.id) {\r\n                                editedCharacterIndex = i;\r\n                            }\r\n                        }\r\n                        if (editedCharacterIndex > -1) {\r\n                            $scope.characters[editedCharacterIndex] = res;\r\n                            toaster.pop('success', \"Character Edited Successfully\");\r\n                        }\r\n                        \r\n                    }\r\n                });\r\n            }\r\n\r\n            $scope.selectCharacter = function (c) {\r\n                if ($scope.tilePickerApi.selecting) {\r\n                    $scope.tilePickerApi.endSelect(c);\r\n                }\r\n                else {\r\n                    if ($scope.tilePickerApi.selecting)\r\n                        $scope.tilePickerApi.endSelect(c);\r\n\r\n                    else {\r\n                        $state.go('profile.character.layout', { characterId: c.Id, action: 1, isNew: 1 });\r\n                        //$transition.router.stateService.go('profile.character.layout', { characterId: c.Id, action: 1, isNew: 1 });\r\n                        //$(\"#loading\").css(\"display\", \"block\");\r\n                    }\r\n\r\n                }\r\n            };\r\n\r\n\r\n            $scope.showContextMenu = function (c) {\r\n                var cardActionsHover = angular.element(c.target).parents(\".card\").find(\".card-actions\");\r\n\r\n                if (cardActionsHover.hasClass(\"hide\")) {\r\n                    cardActionsHover.removeClass(\"hide\");\r\n                    cardActionsHover.addClass(\"show\");\r\n                }\r\n                else {\r\n                    cardActionsHover.removeClass(\"show\");\r\n                    cardActionsHover.addClass(\"hide\");\r\n                }\r\n\r\n            };\r\n\r\n\r\n            $scope.hideContextMenu = function (c) {\r\n                var cardActionsHover = angular.element(c.target).parents(\".card\").find(\".card-actions\");\r\n                cardActionsHover.removeClass(\"show\");\r\n                cardActionsHover.addClass(\"hide\");\r\n            };\r\n\r\n\r\n            $scope.characterDelete = function (item) {\r\n                var dlg = dialogs.confirm(\r\n                    'Confirm Delete',\r\n                    'Are you sure you want to delete this Character, \"' + item.Name + '\", and all associated pages, tabs, and tiles?',\r\n                    { size: \"sm\" }\r\n                );\r\n                dlg.result.then(\r\n                    function (res) {\r\n                        if (res == \"yes\") {\r\n                            $(\"#loading\").css(\"display\", \"block\");\r\n                            var characterId = item.Id;\r\n                            var deletes = characterService.Deletecharacter(characterId);\r\n                            deletes.then(function (res) {\r\n                                if (res.data.StatusCode == 200) {\r\n                                    var deletedCharacterIndex = -1;\r\n                                    for (var i = 0; i < $scope.characters.length; i++) {\r\n                                        if ($scope.characters[i].Id == characterId) \r\n                                        {\r\n                                            deletedCharacterIndex = i;\r\n                                        }\r\n                                    }\r\n                                    if (deletedCharacterIndex > -1) {\r\n                                        $scope.characters.splice(deletedCharacterIndex, 1);\r\n                                        toaster.pop('success', \"Character Deleted Successfully\");\r\n                                    }\r\n                                    $(\"#loading\").fadeOut(\"slow\");\r\n                                }\r\n                                else {\r\n                                    if (res.data.StatusCode == 400) {\r\n                                        if (res.data.ShowToUser == true) {\r\n                                            toaster.pop('error', res.data.ErrorMessage);\r\n                                            $(\"#loading\").fadeOut(\"slow\");\r\n                                        }\r\n                                    }\r\n                                }\r\n                            })\r\n                        }\r\n\r\n                    });\r\n            }\r\n            \r\n        }\r\n    ])\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-controllers');\r\n\r\n    app.controller('commandsPageController', ['$scope', '$transition', '$q', '$timeout', 'dialogs', 'toaster', 'navService', 'tileService',\r\n        function ($scope, $transition, $q, $timeout, dialogs, toaster, navService, tileService) {\r\n\r\n            $scope.data = null;\r\n\r\n            $scope.menuHamburger = {\r\n                opened: false,\r\n                menus: navService.getCommonHamburger([]),\r\n                menuClick: function (item) {\r\n                    $scope.menuCharacter.opened = false;\r\n                }\r\n            };\r\n\r\n            $scope.menuCharacter = {\r\n                opened: false,\r\n                menus: navService.getCommonCharacterNav([]),\r\n                menuClick: function (item) {\r\n                    $scope.menuCharacter.opened = false;\r\n                }\r\n            };\r\n\r\n            navService.registerNav('hamburger', $scope.menuHamburger);\r\n            navService.registerNav('character', $scope.menuCharacter);\r\n\r\n            (function () {\r\n                debugger;\r\n                navService.updateBody(true, false);\r\n                debugger;\r\n                var characterId = $transition.params().characterId;\r\n                var result = tileService.GetAllTileTypesRelatedCharacter(characterId);\r\n                result.then(function (data) {\r\n                    debugger;\r\n                    if (data.data.StatusCode == 200) {\r\n                        debugger;\r\n                        $scope.AllTilesData = data.data.PayLoad;\r\n                        $scope.commands = data.data.PayLoad.Commands;\r\n                        $scope.data = {\r\n                            notes: $scope.commands\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (data.data.StatusCode == 400) {\r\n                            if (data.data.ShowToUser == true) {\r\n                                alert(data.data.ErrorMessage);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                })\r\n\r\n\r\n            })();\r\n        }\r\n    ]);\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-controllers');\r\n\r\n    app.controller('countersPageController', ['$scope', '$transition', '$q', '$timeout', 'dialogs', 'toaster', 'navService', 'tileService',\r\n        function ($scope, $transition, $q, $timeout, dialogs, toaster, navService,tileService) {\r\n\r\n            $scope.data = null;\r\n\r\n            $scope.menuHamburger = {\r\n                opened: false,\r\n                menus: navService.getCommonHamburger([]),\r\n                menuClick: function (item) {\r\n                    $scope.menuCharacter.opened = false;\r\n                }\r\n            };\r\n\r\n            $scope.menuCharacter = {\r\n                opened: false,\r\n                menus: navService.getCommonCharacterNav([]),\r\n                menuClick: function (item) {\r\n                    $scope.menuCharacter.opened = false;\r\n                }\r\n            };\r\n\r\n            navService.registerNav('hamburger', $scope.menuHamburger);\r\n            navService.registerNav('character', $scope.menuCharacter);\r\n\r\n            (function () {\r\n\r\n                navService.updateBody(true, false);\r\n                var characterId = $transition.params().characterId;\r\n                var result = tileService.GetAllTileTypesRelatedCharacter(characterId);\r\n                result.then(function (data) {\r\n                    debugger;\r\n                    if (data.data.StatusCode == 200) {\r\n                        $scope.AllTilesData = data.data.PayLoad;\r\n                        $scope.counters = data.data.PayLoad.Counters;\r\n                        $scope.data = {\r\n                            counters: $scope.counters\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (data.data.StatusCode == 400) {\r\n                            if (data.data.ShowToUser == true) {\r\n                                alert(data.data.ErrorMessage);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                })\r\n               \r\n\r\n            })();\r\n        }\r\n    ]);\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-controllers');\r\n\r\n    app.controller('executesPageController', ['$scope', '$transition', '$q', '$timeout', 'dialogs', 'toaster', 'navService', 'tileService',\r\n        function ($scope, $transition, $q, $timeout, dialogs, toaster, navService, tileService) {\r\n\r\n            $scope.data = null;\r\n\r\n            $scope.menuHamburger = {\r\n                opened: false,\r\n                menus: navService.getCommonHamburger([]),\r\n                menuClick: function (item) {\r\n                    $scope.menuCharacter.opened = false;\r\n                }\r\n            };\r\n\r\n            $scope.menuCharacter = {\r\n                opened: false,\r\n                menus: navService.getCommonCharacterNav([]),\r\n                menuClick: function (item) {\r\n                    $scope.menuCharacter.opened = false;\r\n                }\r\n            };\r\n\r\n            navService.registerNav('hamburger', $scope.menuHamburger);\r\n            navService.registerNav('character', $scope.menuCharacter);\r\n\r\n            (function () {\r\n                debugger;\r\n                navService.updateBody(true, false);\r\n                debugger;\r\n                var characterId = $transition.params().characterId;\r\n                var result = tileService.GetAllTileTypesRelatedCharacter(characterId);\r\n                result.then(function (data) {\r\n                    debugger;\r\n                    if (data.data.StatusCode == 200) {\r\n                        debugger;\r\n                        $scope.AllTilesData = data.data.PayLoad;\r\n                        $scope.executes = data.data.PayLoad.Executes;\r\n                        $scope.data = {\r\n                            notes: $scope.executes\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (data.data.StatusCode == 400) {\r\n                            if (data.data.ShowToUser == true) {\r\n                                alert(data.data.ErrorMessage);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                })\r\n\r\n\r\n            })();\r\n        }\r\n    ]);\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-controllers');\r\n\r\n    app.controller('layoutPageController', ['$scope', 'characterService', '$q', '$window', '$transition', '$state', '$timeout', '$interval', '$log', 'dialogs', 'navService', 'rulesetDataShareService', 'layoutService', 'tabService', '$compile', 'rulesetService', 'toaster', 'tileService',\r\n        function ($scope, characterService, $q, $window, $transition, $state, $timeout, $interval, $log, dialogs, navService, rulesetDataShareService, layoutService, tabService, $compile, rulesetService, toaster, tileService) {\r\n\r\n            $scope.$on(\"$destroy\", function () {\r\n                //if ($scope.ClientScopeChange == true) {\r\n                //    var dlg = dialogs.confirm(\r\n                //        'Confirm Delete',\r\n                //        'The updated data is not saved yet. Do you want to save before exiting?',\r\n                //        { size: 'sm' }\r\n                //    );\r\n\r\n                //    dlg.result.then(\r\n                //        function (btn) {\r\n\r\n                //            //saveLayoutwithTimer();\r\n                //        }\r\n                //    );\r\n                //}\r\n                //else {\r\n\r\n                //}\r\n            });\r\n\t\t\t\r\n            $scope.initialClientObjectId = 1000;\r\n\r\n            $scope.ClientScopeChange = false;\r\n\r\n            if ($state.params.action == 1) {\r\n\r\n                $scope.isLayoutSavingInProgress = false;\r\n\r\n                if ($state.params.isNew == 1) {\r\n\r\n                    rulesetDataShareService.setLayoutData({});\r\n\r\n                    rulesetDataShareService.setCharacterLayoutsData({});\r\n\r\n                    rulesetDataShareService.setcorestatvalue({});\r\n\r\n                    rulesetDataShareService.setLayoutItemInventoryMetaData({});\r\n                    rulesetDataShareService.setLayoutSpellInventoryMetaData({});\r\n                    rulesetDataShareService.setLayoutAbilityInventoryMetaData({});\r\n\r\n                    rulesetDataShareService.setLayoutItemInventoryData({});\r\n                    rulesetDataShareService.setLayoutSpellInventoryData({});\r\n                    rulesetDataShareService.setLayoutAbilityInventoryData({});\r\n                    rulesetDataShareService.setLayoutRulesetItemInventoryData({});\r\n                    rulesetDataShareService.setLayoutRulesetSpellInventoryData({});\r\n                    rulesetDataShareService.setLayoutRulesetAbilityInventoryData({});\r\n\r\n                    var defaultLayout = layoutService.GetCharacterLayouts($state.params.characterId);\r\n\r\n                    defaultLayout.then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            var layouts = setClientObjectId(data.data.PayLoad);\r\n                            $scope.Layouts = layouts;\r\n                            $scope.NewLayout = $scope.Layouts[0];    \r\n                            $scope.LinkExecuteTileContent = $scope.NewLayout.RulesetViewModel;\r\n                            rulesetDataShareService.setLinkTileData($scope.LinkExecuteTileContent);\r\n                            $scope.selectedLayoutName = $scope.NewLayout.Name;\r\n\r\n                            $scope.selectedPageName = $scope.NewLayout.TabList[0].TabName;\r\n\r\n                            rulesetDataShareService.setLayoutData($scope.NewLayout);\r\n\r\n                            rulesetDataShareService.setCharacterLayoutsData($scope.Layouts);\r\n                        }\r\n                        else {\r\n                            if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                     toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                   \r\n                }\r\n                else {\r\n                    if (angular.equals({}, rulesetDataShareService.getLayoutData()) == false) {\r\n                        $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n\r\n                        $scope.selectedLayoutName = $scope.NewLayout.Name;\r\n                        $scope.selectedPageName = $scope.NewLayout.TabList[0].TabName;\r\n                    }\r\n                    if (angular.equals({}, rulesetDataShareService.getCharacterLayoutsData()) == false) {\r\n                        $scope.Layouts = rulesetDataShareService.getCharacterLayoutsData();\r\n                    }\r\n                    if (angular.equals({}, rulesetDataShareService.getCharacterLayoutsData()) == false) {\r\n                        $scope.characters = rulesetDataShareService.setcorestatvalue();\r\n                    }\r\n\r\n\r\n                }\r\n\r\n                \r\n                var layoutAdd = function () {\r\n                    var Scope = $scope.NewLayout;\r\n                    Scope.LayoutId = $scope.NewLayout.LayoutId;\r\n                    $scope.TabHeading = \"Add Layout Name\";\r\n                    $scope.Buttontext = \"Save\";\r\n                    var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n                        { scope: Scope, State: $scope.TabHeading, btntext: $scope.Buttontext }\r\n                    );\r\n\r\n                    dlg.result.then(function (name) {\r\n                        name.LayoutId = 0;\r\n                        name.Name = name.TabName;\r\n                        name.TabName = \"\";\r\n                        var FirstTabArray;\r\n                        for (var i = 0; i < name.TabList.length; i++) {\r\n                            if (i == 0) {\r\n                                FirstTabArray = name.TabList[i];\r\n                            }\r\n                        }\r\n                        name.TabList = [];\r\n                        name.TabList.push(FirstTabArray)\r\n                        name.TabList[0].LayoutId = 0;\r\n                        name.TabList[0].TabId = 0;\r\n                        name.TabList[0].TabName = \"Default\";\r\n                        name.TabList[0].TabOrder = 0;\r\n                        name.TabList[0].TileList = [];\r\n                        name.IsDefault = true;\r\n\r\n                        layoutService.create(name).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n\r\n                                //FillCharacterLayoutsInLeftSideMenu();\r\n                                $scope.NewLayout = data.data.PayLoad;\r\n\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                toaster.pop('success', \"Layout Added Successfully.\");\r\n\r\n                            }\r\n                            else {\r\n                                if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        $(\"#loading\").fadeOut(\"slow\");\r\n                                         toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                        //$timeout(function () {\r\n\r\n                        //    var tab = dataService.createTab({\r\n                        //        name: name,\r\n                        //        order: $scope.LayoutTabs.length\r\n                        //    });\r\n\r\n                        //    $scope.LayoutTabs.push(tab);\r\n                        //    $scope.state.tilesEditing = false;\r\n\r\n                        //    $timeout(function () {\r\n                        //        $scope.tabSet.index = tab.order;\r\n                        //        updateTabs();\r\n                        //    });\r\n                        //});\r\n                    });\r\n                };\r\n\r\n\r\n\r\n                var tabAdd = function () {\r\n                    var Scope = $scope.NewLayout.LayoutMetaData.Tab;\r\n                    Scope.LayoutId = $scope.NewLayout.LayoutId;\r\n                    $scope.TabHeading = \"Add Page Name\";\r\n                    $scope.Buttontext = \"Save\";\r\n                    var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n                        { scope: Scope, State: $scope.TabHeading, btntext: $scope.Buttontext }\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if ($scope.NewLayout.TabList == null || $scope.NewLayout.TabList == undefined) {\r\n                            $scope.NewLayout.TabList = [];\r\n                        }\r\n                        else {\r\n                            res.ClientObjectId = $scope.initialClientObjectId;\r\n                            res.IsSync = false;\r\n                            res.SyncDate = Date.now();\r\n                            $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                            $scope.NewLayout.TabList.push(res);\r\n                            $scope.onTabSelected(res, $scope.NewLayout.TabList.length - 1);\r\n                            $scope.ClientScopeChange = true;\r\n                        }\r\n\r\n                    });\r\n                };\r\n\r\n                $scope.AddNewtab = function () {\r\n                    var Scope = $scope.NewLayout.LayoutMetaData.Tab;\r\n                    Scope.LayoutId = $scope.NewLayout.LayoutId;\r\n                    $scope.TabHeading = \"Add Page Name\";\r\n                    $scope.Buttontext = \"Save\";\r\n                    var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n                        { scope: Scope, State: $scope.TabHeading, btntext: $scope.Buttontext }\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if ($scope.NewLayout.TabList == null || $scope.NewLayout.TabList == undefined) {\r\n                            $scope.NewLayout.TabList = [];\r\n                        }\r\n                        else {\r\n                            res.ClientObjectId = $scope.initialClientObjectId;\r\n                            res.IsSync = false;\r\n                            res.SyncDate = Date.now();\r\n                            $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n\r\n                            tabService.AddTab(res).then(function (data) {\r\n                                if (data.data.StatusCode == 200) {\r\n\r\n                                    //$scope.NewLayout.TabList.push(res);\r\n\r\n                                    for (var i = 0; i < $scope.Layouts.length; i++) {\r\n                                        if ($scope.Layouts[i].LayoutId == data.data.PayLoad.LayoutId) {\r\n                                            $scope.Layouts[i].TabList.push(data.data.PayLoad);\r\n                                            $scope.NewLayout = $scope.Layouts[i];\r\n                                        }\r\n                                    }\r\n                                    $scope.onTabSelected(res, $scope.NewLayout.TabList.length - 1);\r\n                                    $(\"#loading\").fadeOut(\"slow\");\r\n                                    toaster.pop('success', \"Tab Added Successfully.\");\r\n\r\n                                }\r\n                                else {\r\n                                    if (data.data.StatusCode == 400) {\r\n                                        if (data.data.ShowToUser == true) {\r\n                                            $(\"#loading\").fadeOut(\"slow\");\r\n                                             toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                            $scope.ClientScopeChange = true;\r\n\r\n                        }\r\n\r\n                    });\r\n                }\r\n\r\n                $scope.layoutAdd = function () {\r\n                    var Scope = $scope.NewLayout;\r\n                    Scope.LayoutId = $scope.NewLayout.LayoutId;\r\n                    $scope.TabHeading = \"Add Layout Name\";\r\n                    $scope.Buttontext = \"Save\";\r\n                    var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n                        { scope: Scope, State: $scope.TabHeading, btntext: $scope.Buttontext }\r\n                    );\r\n\r\n                    dlg.result.then(function (name) {\r\n                        name.LayoutId = 0;\r\n                        name.Name = name.TabName;\r\n                        name.TabName = \"\";\r\n                        var FirstTabArray;\r\n                        for (var i = 0; i < name.TabList.length; i++) {\r\n                            if (i == 0) {\r\n                                FirstTabArray = name.TabList[i];\r\n                            }\r\n                        }\r\n                        name.TabList = [];\r\n                        name.TabList.push(FirstTabArray)\r\n                        name.TabList[0].LayoutId = 0;\r\n                        name.TabList[0].TabId = 0;\r\n                        name.TabList[0].TabName = \"Default\";\r\n                        name.TabList[0].TabOrder = 0;\r\n                        name.TabList[0].TileList = [];\r\n                        name.IsDefault = true;\r\n\r\n                        layoutService.create(name).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n\r\n                                //FillCharacterLayoutsInLeftSideMenu();\r\n                                $scope.NewLayout = data.data.PayLoad;\r\n                                $scope.Layouts.push(data.data.PayLoad);\r\n                                $scope.selectedLayoutName = $scope.NewLayout.Name;\r\n                                $scope.onTabSelected($scope.NewLayout.TabList[0], 0);\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                toaster.pop('success', \"Layout Added Successfully.\");\r\n\r\n                            }\r\n                            else {\r\n                                if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        $(\"#loading\").fadeOut(\"slow\");\r\n                                        toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                   }\r\n                                }\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n\r\n                $scope.layoutLoad = function (layout) {\r\n                    debugger;\r\n                    $scope.state.tilesEditing = false;\r\n                  \r\n                    $scope.NewLayout = layout;\r\n                    $scope.selectedLayoutName = $scope.NewLayout.Name;\r\n                    $scope.onTabSelected($scope.NewLayout.TabList[0], 0);\r\n                  \r\n                };\r\n\r\n                var tabRename = function () {\r\n\r\n                    //var tabedit = $scope.NewLayout.TabList[$scope.tabSet.index];\r\n                    $scope.TabHeading = \"Rename\";\r\n                    $scope.Buttontext = \"Update\";\r\n                    var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n                        { scope: $scope.NewLayout.TabList[$scope.tabSet.index], State: $scope.TabHeading, btntext: $scope.Buttontext }\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n\r\n                        res.IsSync = false;\r\n                        res.SyncDate = Date.now();\r\n                        $scope.NewLayout.TabList[$scope.tabSet.index] = res;\r\n                    });\r\n\r\n                }\r\n\r\n                $scope.EditTab = function (tab) {\r\n                    //var tabedit = $scope.NewLayout.TabList[$scope.tabSet.index];\r\n                    $scope.TabHeading = \"Edit\";\r\n                    $scope.Buttontext = \"Update\";\r\n                    var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n                        { scope: tab, State: $scope.TabHeading, btntext: $scope.Buttontext }\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        var edittab = tabService.UpdateTab(res).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                data.data.PayLoad.IsSync = false;\r\n                                data.data.PayLoad.SyncDate = Date.now();\r\n                                for (var i = 0; i < $scope.Layouts.length; i++) {\r\n                                    for (var j = 0; j < $scope.Layouts[i].TabList.length; j++) {\r\n                                        if ($scope.Layouts[i].TabList[j].ClientObjectId == data.data.PayLoad.ClientObjectId) {\r\n                                            $scope.Layouts[i].TabList[j] = data.data.PayLoad;\r\n                                        }\r\n                                    }\r\n\r\n                                }\r\n\r\n                                //$scope.NewLayout.TabList[$scope.tabSet.index] = data.data.PayLoad;\r\n                                $scope.ClientScopeChange = true;\r\n                            }\r\n                        })\r\n\r\n                    });\r\n\r\n                }\r\n\r\n                $scope.DeleteTab = function (tab) {\r\n                    //var tab = getActiveTab();\r\n\r\n                    if (tab) {\r\n\r\n                        var dlg = dialogs.confirm(\r\n                            'Confirm Delete',\r\n                            'Are you sure you want to delete \"' + tab.TabName + '\" and all its content?',\r\n                            { size: 'sm' }\r\n                        );\r\n\r\n                        dlg.result.then(\r\n                            function (res) {\r\n                                if (res == 'yes') {\r\n                                    if (tab.TabId > 0) {\r\n                                        tabService.deleteTab(tab).then(function (data) {\r\n                                            if (data.data.StatusCode == 200) {\r\n                                                var deletedTabID = data.data.PayLoad.ClientObjectId;\r\n                                                //var layoutId = data.data.PayLoad.Result.ClientObjectId;\r\n                                                var requiredlayoutindex = -1;\r\n                                                var requiredtabIndexId = -1;\r\n\r\n                                                for (var i = 0; i < $scope.Layouts.length; i++) {\r\n\r\n                                                    for (var j = 0; j < $scope.Layouts[i].TabList.length; j++) {\r\n                                                        if ($scope.Layouts[i].TabList[j].ClientObjectId == deletedTabID) {\r\n                                                            requiredlayoutindex = i;\r\n                                                            requiredtabIndexId = j;\r\n                                                        }\r\n                                                    }\r\n\r\n                                                   \r\n                                                }\r\n                                                if (requiredlayoutindex > -1 && requiredtabIndexId > -1) {\r\n                                                    $scope.Layouts[requiredlayoutindex].TabList.splice(requiredtabIndexId, 1);\r\n                                                   \r\n                                                    if (requiredtabIndexId == $scope.selectedPageIndex && $scope.Layouts.length > 0) {\r\n                                                        $scope.NewLayout = $scope.Layouts[requiredlayoutindex];\r\n                                                        $scope.selectedPageIndex = 0;\r\n                                                        $scope.selectedPageName = $scope.Layouts[requiredlayoutindex].TabList[0].TabName;\r\n                                                    }\r\n                                                    else if ($scope.NewLayout.TabList.length == 0)\r\n                                                    {\r\n                                                        $scope.NewLayout = $scope.Layouts[0];\r\n                                                        $scope.selectedPageIndex = 0;\r\n                                                        $scope.selectedPageName = $scope.NewLayout.TabList[0].TabName;\r\n                                                    }\r\n                                                }\r\n                                               \r\n                                                $(\"#loading\").fadeOut(\"slow\");\r\n                                                toaster.pop('success', \"Tab deleted Successfully.\");\r\n                                            }\r\n                                            else {\r\n                                                if (data.data.StatusCode == 400) {\r\n                                                    if (data.data.ShowToUser == true) {\r\n                                                         toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                                    }\r\n                                                }\r\n                                            }\r\n\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                \r\n                            })\r\n                    }\r\n\r\n                }\r\n                $scope.SaveLayout = function (NewLayout) {\r\n\r\n                    if ($scope.isLayoutSavingInProgress == false) {\r\n\r\n                        $scope.isLayoutSavingInProgress = true;\r\n                       \r\n                        for (var i = 0; i < NewLayout.TabList.length; i++) {\r\n                            var tab = NewLayout.TabList[i];\r\n                            for (var j = 0; j < tab.TileList.length; j++) {\r\n                                var tile = tab.TileList[j];\r\n                                if (angular.equals({}, rulesetDataShareService.getTilelst()) == false) {\r\n                                    //Getting saved edited Tile List from memory\r\n                                    var EditTiles = JSON.parse(localStorage.getItem(\"Tilelst\"));\r\n                                    if (EditTiles != null) {\r\n                                        for (var k = 0; k < EditTiles.length; k++) {\r\n                                            var editTile = EditTiles[k];\r\n                                            if (tile.EditClientId == editTile.EditClientId && tile.TileTypeName == editTile.TileTypeName) {\r\n                                                tile.Value = editTile.Value;\r\n                                                tile.Styles = editTile.Styles;\r\n\r\n                                            }\r\n                                            else if (angular.isUndefined(tile.TileId) == false && tile.TileId != null) {\r\n                                                if (tile.TileId == editTile.TileId && tile.TileTypeName == editTile.TileTypeName) {\r\n                                                    tile.Value = editTile.Value;\r\n                                                    tile.Styles = editTile.Styles;\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                tile.TileLocationId = 1;\r\n                            }\r\n                        }\r\n                        //Deleting Tile List from memory\r\n                        localStorage.removeItem(\"Tilelst\");\r\n                        layoutService.update(NewLayout).then(function (data) {\r\n\r\n                            $scope.isLayoutSavingInProgress = false\r\n\r\n                            if (data.data.StatusCode == 200) {\r\n\r\n                                var savedLayout = data.data.PayLoad;\r\n\r\n                                for (var i = 0; i < $scope.Layouts.length; i++) {\r\n                                    if ($scope.Layouts[i].LayoutId == savedLayout.LayoutId) {\r\n                                        $scope.Layouts[i] = savedLayout;\r\n                                    }\r\n                                }\r\n\r\n                                $scope.NewLayout = savedLayout;\r\n                                $scope.state.tilesEditing = false;\r\n                                toaster.pop('success', \"Layout Updated Successfully.\");\r\n\r\n                            }\r\n                            else {\r\n                                if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                $scope.layoutRename = function (index, layout) {\r\n                    var Scope = layout;\r\n                    Scope.TabName = Scope.Name;\r\n                    Scope.LayoutId = layout.LayoutId;\r\n                    $scope.TabHeading = \"Update Layout Name\";\r\n                    $scope.Buttontext = \"Update\";\r\n                    var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n                        { scope: Scope, State: $scope.TabHeading, btntext: $scope.Buttontext }\r\n                    );\r\n                    dlg.result.then(function (res) {\r\n                        res.Name = res.TabName;\r\n                        layoutService.update(res).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n\r\n                                //$scope.Layouts[index] = layout;\r\n\r\n                                var renamedLayoutID = data.data.PayLoad.ClientObjectId;\r\n                                var requiredlayoutindex = -1;\r\n\r\n                                for (var i = 0; i < $scope.Layouts.length; i++) {\r\n                                    var layout = $scope.Layouts[i];\r\n                                    if (layout.ClientObjectId == renamedLayoutID) {\r\n                                        requiredlayoutindex = i;\r\n                                    }\r\n                                }\r\n\r\n\r\n                                if (requiredlayoutindex > -1) {\r\n                                    $scope.Layouts[requiredlayoutindex] = data.data.PayLoad;\r\n                                    toaster.pop('success', \"Layout Updated Successfully.\");\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                         toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                    })\r\n                };\r\n\r\n                $scope.layoutCopy = function (index, layout) {\r\n                    var Scope = layout;\r\n                    Scope.TabName = Scope.Name;\r\n                    Scope.LayoutId = layout.LayoutId;\r\n                    $scope.TabHeading = \"Copy Layout Name\";\r\n                    $scope.Buttontext = \"Copy\";\r\n                    var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n                        { scope: Scope, State: $scope.TabHeading, btntext: $scope.Buttontext }\r\n                    );\r\n                    dlg.result.then(function (name) {\r\n                        name.Name = name.TabName;\r\n                        name.LayoutId = 0;\r\n                        if (name.TabList != null) {\r\n                            for (var i = 0; i < name.TabList.length; i++) {\r\n                                var data = name.TabList[i];\r\n                                data.LayoutId = 0;\r\n                                data.TabId = 0;\r\n                                if (data.TileList != null) {\r\n                                    for (var j = 0; j < data.TileList.length; j++) {\r\n                                        var dataTile = data.TileList[j];\r\n                                        dataTile.EntityId = 0;\r\n                                        dataTile.TabId = 0;\r\n                                        dataTile.TileId = 0;\r\n                                        if (dataTile.Value.Attribute != null) {\r\n                                            dataTile.Value.Attribute.AttributeId = 0;\r\n                                        }\r\n                                        else if (dataTile.Value.Command != null) {\r\n                                            dataTile.Value.Command.CommandId = 0;\r\n                                        }\r\n                                        else if (dataTile.Value.Counter != null) {\r\n                                            dataTile.Value.Counter.CounterId = 0;\r\n                                        }\r\n                                        else if (dataTile.Value.Execute != null) {\r\n                                            dataTile.Value.Execute.ExecuteId = 0;\r\n                                        }\r\n                                        else if (dataTile.Value.Link != null) {\r\n                                            dataTile.Value.Link.LinkId = 0;\r\n                                        }\r\n                                        else if (dataTile.Value.Note != null) {\r\n                                            dataTile.Value.Note.NoteId = 0;\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                        layoutService.copyLayout(name).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n\r\n                                $scope.NewLayout = data.data.PayLoad;\r\n\r\n                                $scope.Layouts.push(data.data.PayLoad);\r\n                                $scope.selectedLayoutName = $scope.NewLayout.Name;\r\n                                $scope.onTabSelected($scope.NewLayout.TabList[0], 0);\r\n                                //FillCharacterLayoutsInLeftSideMenu();\r\n                                toaster.pop('success', \"Layout Copied Successfully.\");\r\n                                $transition.router.stateService.go('profile.character.layout', { characterId: $scope.NewLayout.CharacterProfileId, layoutId: $scope.NewLayout.LayoutId });\r\n\r\n                            }\r\n                            else {\r\n                                if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                         toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n\r\n                $scope.layoutDelete = function (index, layout) {\r\n                    var dlg = dialogs.confirm(\r\n                        'Confirm Delete',\r\n                        'Are you sure you want to delete this view, \"' + layout.Name + '\", and all associated pages, tabs, and tiles?',\r\n                        { size: 'sm' }\r\n                    );\r\n\r\n                    dlg.result.then(\r\n                        function (res) {\r\n                            if (res == 'yes') {\r\n                                layoutService.deleteLayout(layout).then(function (data) {\r\n                                    if (data.data.StatusCode == 200) {\r\n                                        var deleteLayoutId = data.data.PayLoad.ClientObjectId;\r\n                                        var requiredLayoutIndexId = -1;\r\n                                        for (var i = 0; i < $scope.Layouts.length; i++) {\r\n                                            if ($scope.Layouts[i].ClientObjectId == deleteLayoutId) {\r\n                                                requiredLayoutIndexId = i;\r\n                                            }\r\n                                        }\r\n                                        if (requiredLayoutIndexId > -1) {\r\n                                            $scope.Layouts.splice(requiredLayoutIndexId, 1);\r\n                                        }\r\n                                        if ($scope.Layouts.length == 0) {\r\n                                            $state.go(\"profile.characters\");\r\n\r\n                                        }\r\n                                        else {\r\n\r\n                                            $scope.selectedLayoutName = $scope.Layouts[0].Name;\r\n\r\n                                            $scope.selectedPageName = $scope.Layouts[0].TabList[0].TabName;\r\n\r\n                                        }\r\n                                        //FillCharacterLayoutsInLeftSideMenu();\r\n                                        toaster.pop('success', \"Layout deletedSuccessfully.\");\r\n\r\n                                    }\r\n                                    else {\r\n                                        if (data.data.StatusCode == 400) {\r\n                                            if (data.data.ShowToUser == true) {\r\n                                                 toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                        }\r\n                    );\r\n                };\r\n\r\n\r\n                $scope.state = {\r\n                    tilesEditing: false,\r\n                    tileDragging: false,\r\n                    useOrEditMode: false,\r\n                    tileDeleteId: null\r\n                };\r\n\r\n                $scope.ManageTiles = function () {\r\n                    $scope.state.tilesEditing = !$scope.state.tilesEditing;\r\n                    $scope.state.useOrEditMode = !$scope.state.useOrEditMode;\r\n                }\r\n\r\n                $scope.ManageTilesCompleted = function () {\r\n                    $scope.state.tilesEditing = !$scope.state.tilesEditing;\r\n                    $scope.state.useOrEditMode = !$scope.state.useOrEditMode;\r\n                }\r\n\r\n                $scope.ShowTiles = function () {\r\n                    var dlg = dialogs.create('/views/dialogs/tile-type-picker.html', 'dialogTileTypes',\r\n                        { scope: $scope.NewLayout.LayoutMetaData.TileTypes }\r\n                    );\r\n                    dlg.result.then(function (res) {\r\n                        if (res.TileType == \"Note\") {\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TileTypeId = res.TileId;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TileTypeName = res.TileType;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.Value = res.Value;\r\n                            //$scope.NewLayout.LayoutMetaData.Tile.Value = res.Value;\r\n                            // $scope.NewLayout.LayoutMetaData.Tile.Mode = \"Edit\";\r\n                            var SelectedTab;\r\n                            for (var i = 0; i < $scope.NewLayout.TabList.length; i++) {\r\n                                if (i == $scope.selectedPageIndex) {\r\n                                    SelectedTab = $scope.NewLayout.TabList[i];\r\n                                }\r\n                            }\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TabId = angular.isUndefined(SelectedTab) == false ? SelectedTab.TabId : $scope.NewLayout.TabList[$scope.tabSet.index].TabId;\r\n                            var dlg = dialogs.create('/views/dialogs/tile-editor-1.html', 'NoteTile',\r\n                                { scope: $scope.NewLayout.LayoutMetaData.Tile, Tablist: $scope.NewLayout.TabList }\r\n                            );\r\n                            dlg.result.then(function (res) {\r\n                                if (res != \"cancel\") {\r\n                                    if ($scope.NewLayout.TabList[$scope.tabSet.index].TileList == null || $scope.NewLayout.TabList[$scope.tabSet.index].TileList == undefined) {\r\n                                        $scope.NewLayout.TabList[$scope.tabSet.index].TileList = [];\r\n                                        res.Height = \"5\";\r\n                                        res.Width = \"5\";\r\n                                        res.X = \"0\";\r\n                                        res.Y = \"0\";\r\n                                        res.CharacterProfileId = $scope.NewLayout.CharacterProfileId;\r\n                                        res.IsSync = false;\r\n                                        res.SyncDate = Date.now();\r\n                                        res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                        //$scope.NewLayout.TabList[$scope.tabSet.index].TileList.push(res);\r\n                                        $scope.NewLayout.TabList[$scope.selectedPageIndex > 0 ? $scope.selectedPageIndex : $scope.tabSet.index].TileList.push(res);\r\n                                        $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                                    }\r\n                                    else {\r\n                                        res.Height = \"5\";\r\n                                        res.Width = \"5\";\r\n                                        res.X = \"0\";\r\n                                        res.Y = \"0\";\r\n                                        res.CharacterProfileId = $scope.NewLayout.CharacterProfileId;\r\n                                        res.IsSync = false;\r\n                                        res.SyncDate = Date.now();\r\n                                        res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                        //$scope.NewLayout.TabList[$scope.tabSet.index].TileList.push(res);\r\n                                        $scope.NewLayout.TabList[$scope.selectedPageIndex > 0 ? $scope.selectedPageIndex : $scope.tabSet.index].TileList.push(res);\r\n                                        $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n\r\n                                    }\r\n                                }\r\n                                $scope.ClientScopeChange = true;\r\n                            });\r\n                        }\r\n                        else if (res.TileType == \"Counter\") {\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TileTypeId = res.TileId;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TileTypeName = res.TileType;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.Value = res.Value;\r\n\r\n                            $scope.NewLayout.LayoutMetaData.Tile.Mode = \"Edit\";\r\n                            // $scope.NewLayout.LayoutMetaData.Tile.TabId = $scope.NewLayout.TabList[$scope.tabSet.index].TabId;\r\n                            var SelectedTab;\r\n                            for (var i = 0; i < $scope.NewLayout.TabList.length; i++) {\r\n                                if (i == $scope.selectedPageIndex) {\r\n                                    SelectedTab = $scope.NewLayout.TabList[i];\r\n                                }\r\n                            }\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TabId = angular.isUndefined(SelectedTab) == false ? SelectedTab.TabId : $scope.NewLayout.TabList[$scope.tabSet.index].TabId;\r\n\r\n                            var dlg = dialogs.create('/views/dialogs/tile-editor-2.html', 'NoteTile',\r\n                                { scope: $scope.NewLayout.LayoutMetaData.Tile }\r\n                            );\r\n                            dlg.result.then(function (res) {\r\n\r\n                                if (res != \"cancel\") {\r\n                                    if ($scope.NewLayout.TabList[$scope.tabSet.index].TileList == null || $scope.NewLayout.TabList[$scope.tabSet.index].TileList == undefined) {\r\n                                        $scope.NewLayout.TabList[$scope.tabSet.index].TileList = [];\r\n                                        res.Height = \"5\";\r\n                                        res.Width = \"5\";\r\n                                        res.X = \"0\";\r\n                                        res.Y = \"0\";\r\n                                        res.CharacterProfileId = $scope.NewLayout.CharacterProfileId;\r\n                                        res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                        res.IsSync = false;\r\n                                        res.SyncDate = Date.now();\r\n                                        $scope.NewLayout.TabList[$scope.selectedPageIndex > 0 ? $scope.selectedPageIndex : $scope.tabSet.index].TileList.push(res);\r\n                                        $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                                    }\r\n                                    else {\r\n                                        res.Height = \"5\";\r\n                                        res.Width = \"5\";\r\n                                        res.X = \"0\";\r\n                                        res.Y = \"0\";\r\n                                        res.CharacterProfileId = $scope.NewLayout.CharacterProfileId;\r\n                                        res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                        res.IsSync = false;\r\n                                        res.SyncDate = Date.now();\r\n                                        $scope.NewLayout.TabList[$scope.selectedPageIndex > 0 ? $scope.selectedPageIndex : $scope.tabSet.index].TileList.push(res);\r\n                                        $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                                    }\r\n                                }\r\n                                $scope.ClientScopeChange = true;\r\n\r\n                            });\r\n                        }\r\n                        else if (res.TileType == \"Attribute\") {\r\n                            $scope.CorestatValues = rulesetDataShareService.getLayoutData();\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TileTypeId = res.TileId;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TileTypeName = res.TileType;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.Value = res.Value;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.Value.Attribute.CoreStatValue = res.Value.Attribute.CoreStatValue;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.CorestatValues = $scope.CorestatValues.CorestatValues;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.Mode = \"Edit\";\r\n                            //  $scope.NewLayout.LayoutMetaData.Tile.TabId = $scope.NewLayout.TabList[$scope.tabSet.index].TabId;\r\n                            var SelectedTab;\r\n                            for (var i = 0; i < $scope.NewLayout.TabList.length; i++) {\r\n                                if (i == $scope.selectedPageIndex) {\r\n                                    SelectedTab = $scope.NewLayout.TabList[i];\r\n                                }\r\n                            }\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TabId = angular.isUndefined(SelectedTab) == false ? SelectedTab.TabId : $scope.NewLayout.TabList[$scope.tabSet.index].TabId;\r\n                            var dlg = dialogs.create('/views/dialogs/tile-editor-3.html', 'NoteTile',\r\n                                { scope: $scope.NewLayout.LayoutMetaData.Tile }\r\n                            );\r\n                            dlg.result.then(function (res) {\r\n\r\n                                if (res != \"cancel\") {\r\n                                    if ($scope.NewLayout.TabList[$scope.tabSet.index].TileList == null || $scope.NewLayout.TabList[$scope.tabSet.index].TileList == undefined) {\r\n                                        $scope.NewLayout.TabList[$scope.tabSet.index].TileList = [];\r\n                                        res.Height = \"5\";\r\n                                        res.Width = \"5\";\r\n                                        res.X = \"0\";\r\n                                        res.Y = \"0\";\r\n                                        res.CharacterProfileId = $scope.NewLayout.CharacterProfileId;\r\n                                        res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                        res.IsSync = false;\r\n                                        res.SyncDate = Date.now();\r\n                                        $scope.NewLayout.TabList[$scope.selectedPageIndex > 0 ? $scope.selectedPageIndex : $scope.tabSet.index].TileList.push(res);\r\n                                        $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                                    }\r\n                                    else {\r\n                                        res.Height = \"5\";\r\n                                        res.Width = \"5\";\r\n                                        res.X = \"0\";\r\n                                        res.Y = \"0\";\r\n                                        res.CharacterProfileId = $scope.NewLayout.CharacterProfileId;\r\n                                        res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                        res.IsSync = false;\r\n                                        res.SyncDate = Date.now();\r\n                                        $scope.NewLayout.TabList[$scope.selectedPageIndex > 0 ? $scope.selectedPageIndex : $scope.tabSet.index].TileList.push(res);\r\n                                        $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                                    }\r\n                                }\r\n                                $scope.ClientScopeChange = true;\r\n\r\n                            });\r\n                        }\r\n                        else if (res.TileType == \"Link\") {\r\n                           \r\n                            $scope.NewLayout.LayoutMetaData.Tile.TileTypeId = res.TileId;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TileTypeName = res.TileType;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.Value = res.Value;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.Mode = \"Edit\";\r\n                            // $scope.NewLayout.LayoutMetaData.Tile.TabId = $scope.NewLayout.TabList[$scope.tabSet.index].TabId;\r\n                            var SelectedTab;\r\n                            for (var i = 0; i < $scope.NewLayout.TabList.length; i++) {\r\n                                if (i == $scope.selectedPageIndex) {\r\n                                    SelectedTab = $scope.NewLayout.TabList[i];\r\n                                }\r\n                            }\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TabId = angular.isUndefined(SelectedTab) == false ? SelectedTab.TabId : $scope.NewLayout.TabList[$scope.tabSet.index].TabId;\r\n                            var dlg = dialogs.create('/views/dialogs/tile-editor-4.html', 'NoteTile',\r\n                                { scope: $scope.NewLayout.LayoutMetaData.Tile }\r\n                            );\r\n                            dlg.result.then(function (res) {\r\n\r\n                                if (res != \"cancel\") {\r\n                                    if ($scope.NewLayout.TabList[$scope.tabSet.index].TileList == null || $scope.NewLayout.TabList[$scope.tabSet.index].TileList == undefined) {\r\n                                        $scope.NewLayout.TabList[$scope.tabSet.index].TileList = [];\r\n                                        res.Height = \"5\";\r\n                                        res.Width = \"5\";\r\n                                        res.X = \"0\";\r\n                                        res.Y = \"0\";\r\n                                        res.CharacterProfileId = $scope.NewLayout.CharacterProfileId;\r\n                                        res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                        res.IsSync = false;\r\n                                        res.SyncDate = Date.now();\r\n                                        $scope.NewLayout.TabList[$scope.selectedPageIndex > 0 ? $scope.selectedPageIndex : $scope.tabSet.index].TileList.push(res);\r\n                                        $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                                    }\r\n                                    else {\r\n                                        res.Height = \"5\";\r\n                                        res.Width = \"5\";\r\n                                        res.X = \"0\";\r\n                                        res.Y = \"0\";\r\n                                        res.CharacterProfileId = $scope.NewLayout.CharacterProfileId;\r\n                                        res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                        res.IsSync = false;\r\n                                        res.SyncDate = Date.now();\r\n                                        $scope.NewLayout.TabList[$scope.selectedPageIndex > 0 ? $scope.selectedPageIndex : $scope.tabSet.index].TileList.push(res);\r\n                                        $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                                    }\r\n                                }\r\n                                $scope.ClientScopeChange = true;\r\n\r\n                            });\r\n                            //}\r\n\r\n                            //});\r\n                        }\r\n                        else if (res.TileType == \"Execute\") {\r\n                            \r\n                            $scope.NewLayout.LayoutMetaData.Tile.TileTypeId = res.TileId;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TileTypeName = res.TileType;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.Value = res.Value;\r\n\r\n                            $scope.NewLayout.LayoutMetaData.Tile.Mode = \"Edit\";\r\n                            // $scope.NewLayout.LayoutMetaData.Tile.TabId = $scope.NewLayout.TabList[$scope.tabSet.index].TabId;\r\n                            var SelectedTab;\r\n                            for (var i = 0; i < $scope.NewLayout.TabList.length; i++) {\r\n                                if (i == $scope.selectedPageIndex) {\r\n                                    SelectedTab = $scope.NewLayout.TabList[i];\r\n                                }\r\n                            }\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TabId = angular.isUndefined(SelectedTab) == false ? SelectedTab.TabId : $scope.NewLayout.TabList[$scope.tabSet.index].TabId;\r\n\r\n                            var dlg = dialogs.create('/views/dialogs/tile-editor-5.html', 'NoteTile',\r\n                                { scope: $scope.NewLayout.LayoutMetaData.Tile, fullscope: $scope.NewLayout.TabList }\r\n                            );\r\n                            dlg.result.then(function (res) {\r\n                                if (res != \"cancel\") {\r\n                                    if ($scope.NewLayout.TabList[$scope.tabSet.index].TileList == null || $scope.NewLayout.TabList[$scope.tabSet.index].TileList == undefined) {\r\n                                        $scope.NewLayout.TabList[$scope.tabSet.index].TileList = [];\r\n                                        res.Height = \"5\";\r\n                                        res.Width = \"5\";\r\n                                        res.X = \"0\";\r\n                                        res.Y = \"0\";\r\n                                        res.CharacterProfileId = $scope.NewLayout.CharacterProfileId;\r\n                                        res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                        res.IsSync = false;\r\n                                        res.SyncDate = Date.now();\r\n                                        $scope.NewLayout.TabList[$scope.selectedPageIndex > 0 ? $scope.selectedPageIndex : $scope.tabSet.index].TileList.push(res);\r\n                                        $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                                    }\r\n                                    else {\r\n                                        res.Height = \"5\";\r\n                                        res.Width = \"5\";\r\n                                        res.X = \"0\";\r\n                                        res.Y = \"0\";\r\n                                        res.CharacterProfileId = $scope.NewLayout.CharacterProfileId;\r\n                                        res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                        res.IsSync = false;\r\n                                        res.SyncDate = Date.now();\r\n                                        $scope.NewLayout.TabList[$scope.selectedPageIndex > 0 ? $scope.selectedPageIndex : $scope.tabSet.index].TileList.push(res);\r\n                                        $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                                    }\r\n                                }\r\n                            })\r\n                            //}\r\n                            $scope.ClientScopeChange = true;\r\n\r\n                            //});\r\n\r\n                        }\r\n                        else if (res.TileType == \"Command\") {\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TileTypeId = res.TileId;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TileTypeName = res.TileType;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.Value = res.Value;\r\n\r\n                            $scope.NewLayout.LayoutMetaData.Tile.Mode = \"Edit\";\r\n                            // $scope.NewLayout.LayoutMetaData.Tile.TabId = $scope.NewLayout.TabList[$scope.tabSet.index].TabId;\r\n                            var SelectedTab;\r\n                            for (var i = 0; i < $scope.NewLayout.TabList.length; i++) {\r\n                                if (i == $scope.selectedPageIndex) {\r\n                                    SelectedTab = $scope.NewLayout.TabList[i];\r\n                                }\r\n                            }\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TabId = angular.isUndefined(SelectedTab) == false ? SelectedTab.TabId : $scope.NewLayout.TabList[$scope.tabSet.index].TabId;\r\n                            var dlg = dialogs.create('/views/dialogs/tile-editor-6.html', 'NoteTile',\r\n                                { scope: $scope.NewLayout.LayoutMetaData.Tile }\r\n                            );\r\n                            dlg.result.then(function (res) {\r\n\r\n                                if (res != \"cancel\") {\r\n                                    if ($scope.NewLayout.TabList[$scope.tabSet.index].TileList == null || $scope.NewLayout.TabList[$scope.tabSet.index].TileList == undefined) {\r\n                                        $scope.NewLayout.TabList[$scope.tabSet.index].TileList = [];\r\n                                        res.Height = \"5\";\r\n                                        res.Width = \"5\";\r\n                                        res.X = \"0\";\r\n                                        res.Y = \"0\";\r\n                                        res.CharacterProfileId = $scope.NewLayout.CharacterProfileId;\r\n                                        res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                        res.IsSync = false;\r\n                                        res.SyncDate = Date.now();\r\n                                        $scope.NewLayout.TabList[$scope.selectedPageIndex > 0 ? $scope.selectedPageIndex : $scope.tabSet.index].TileList.push(res);\r\n                                        $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                                    }\r\n                                    else {\r\n                                        res.Height = \"5\";\r\n                                        res.Width = \"5\";\r\n                                        res.X = \"0\";\r\n                                        res.Y = \"0\";\r\n                                        res.CharacterProfileId = $scope.NewLayout.CharacterProfileId;\r\n                                        res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                        res.IsSync = false;\r\n                                        res.SyncDate = Date.now();\r\n                                        $scope.NewLayout.TabList[$scope.selectedPageIndex > 0 ? $scope.selectedPageIndex : $scope.tabSet.index].TileList.push(res);\r\n                                        $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                                    }\r\n                                }\r\n\r\n                                $scope.ClientScopeChange = true;\r\n\r\n                            });\r\n                        }\r\n                        else if (res.TileType == \"Image\") {\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TileTypeId = res.TileId;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TileTypeName = res.TileType;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.Value = res.Value;\r\n                            $scope.NewLayout.LayoutMetaData.Tile.Mode = \"Edit\";\r\n                            // $scope.NewLayout.LayoutMetaData.Tile.TabId = $scope.NewLayout.TabList[$scope.tabSet.index].TabId;\r\n                            var SelectedTab;\r\n                            for (var i = 0; i < $scope.NewLayout.TabList.length; i++) {\r\n                                if (i == $scope.selectedPageIndex) {\r\n                                    SelectedTab = $scope.NewLayout.TabList[i];\r\n                                }\r\n                            }\r\n                            $scope.NewLayout.LayoutMetaData.Tile.TabId = angular.isUndefined(SelectedTab) == false ? SelectedTab.TabId : $scope.NewLayout.TabList[$scope.tabSet.index].TabId;\r\n                            var dlg = dialogs.create('/views/dialogs/tile-editor-7.html', 'NoteTile',\r\n                                { scope: $scope.NewLayout.LayoutMetaData.Tile }\r\n                            );\r\n                            dlg.result.then(function (res) {\r\n                                if (res != \"cancel\") {\r\n                                    if ($scope.NewLayout.TabList[$scope.tabSet.index].TileList == null || $scope.NewLayout.TabList[$scope.tabSet.index].TileList == undefined) {\r\n                                        $scope.NewLayout.TabList[$scope.tabSet.index].TileList = [];\r\n                                        res.Height = \"5\";\r\n                                        res.Width = \"5\";\r\n                                        res.X = \"0\";\r\n                                        res.Y = \"0\";\r\n                                        res.CharacterProfileId = $scope.NewLayout.CharacterProfileId;\r\n                                        res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                        res.IsSync = false;\r\n                                        res.SyncDate = Date.now();\r\n                                        $scope.NewLayout.TabList[$scope.selectedPageIndex > 0 ? $scope.selectedPageIndex : $scope.tabSet.index].TileList.push(res);\r\n                                        $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                                    }\r\n                                    else {\r\n                                        res.Height = \"5\";\r\n                                        res.Width = \"5\";\r\n                                        res.X = \"0\";\r\n                                        res.Y = \"0\";\r\n                                        res.CharacterProfileId = $scope.NewLayout.CharacterProfileId;\r\n                                        res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                        res.IsSync = false;\r\n                                        res.SyncDate = Date.now();\r\n                                        $scope.NewLayout.TabList[$scope.selectedPageIndex > 0 ? $scope.selectedPageIndex : $scope.tabSet.index].TileList.push(res);\r\n                                        $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                                    }\r\n                                }\r\n\r\n                                $scope.ClientScopeChange = true;\r\n                            });\r\n\r\n                        }\r\n\r\n\r\n\r\n                    });\r\n                }\r\n                $scope.state = {\r\n                    tilesEditing: false,\r\n                    tileDragging: false,\r\n                    tileDeleteId: null\r\n                };\r\n\r\n                $scope.stackOptions = {\r\n                    height: 150,\r\n                    width: 400,\r\n                    cellHeight: 30,\r\n                    minWidth: 1,\r\n\r\n                    pixelWidth: 35,\r\n                    verticalMargin: 5,\r\n                    alwaysShowResizeHandle: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),\r\n\r\n                    resizable: {\r\n                        handles: 'e, se, s, sw, w'\r\n                    },\r\n                    draggable: {\r\n                        refreshPositions: true,\r\n                        handle: '.grid-stack-item-content'\r\n                    }\r\n                };\r\n\r\n                $scope.tabSet = {\r\n                    api: {},\r\n                    index: 0\r\n                };\r\n\r\n                $scope.tilePickerApi = {\r\n                    messageId: null,\r\n                    beforeSelect: function () {\r\n                    },\r\n                    onClose: function () {\r\n                    }\r\n                };\r\n\r\n                var updateTabs = function () {\r\n                    //$scope.navService.updateBody(true, $scope.NewLayout.TabList.length);\r\n                    $scope.tabSet.api.doRecalculate();\r\n                    $scope.tabSet.api.scrollTabIntoView();\r\n                };\r\n\r\n                var getActiveTab = function () {\r\n\r\n                    if ($scope.tabSet.index >= 0)\r\n                        return $scope.NewLayout.TabList[$scope.tabSet.index];\r\n                    return null;\r\n                };\r\n\r\n                var tabsSort = function (arr) {\r\n                    (arr || []).sort(function (a, b) { return a.order - b.order; });\r\n                };\r\n\r\n                var layoutRename = function () {\r\n\r\n                    var Scope = $scope.NewLayout;\r\n                    Scope.TabName = Scope.Name;\r\n                    Scope.LayoutId = $scope.NewLayout.LayoutId;\r\n                    $scope.TabHeading = \"Update Layout Name\";\r\n                    $scope.Buttontext = \"Update\";\r\n                    var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n                        { scope: Scope, State: $scope.TabHeading, btntext: $scope.Buttontext }\r\n                    );\r\n                    dlg.result.then(function (name) {\r\n\r\n                        name.Name = name.TabName;\r\n                        layoutService.update(name).then(function (data) {\r\n\r\n                            if (data.data.StatusCode == 200) {\r\n\r\n                                $scope.NewLayout.Name = name.Name;\r\n                                //FillCharacterLayoutsInLeftSideMenu();\r\n                                toaster.pop('success', \"Layout Updated Successfully.\");\r\n\r\n                            }\r\n                            else {\r\n                                if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                         toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n\r\n                var layoutDelete = function () {\r\n\r\n                    var dlg = dialogs.confirm(\r\n                        'Confirm Delete',\r\n                        'Are you sure you want to delete this view, \"' + $scope.NewLayout.Name + '\", and all associated pages, tabs, and tiles?',\r\n                        { size: 'sm' }\r\n                    );\r\n\r\n                    dlg.result.then(\r\n                        function (btn) {\r\n\r\n                            layoutService.deleteLayout($scope.NewLayout.LayoutId).then(function (data) {\r\n\r\n                                if (data.data.StatusCode == 200) {\r\n\r\n                                    //FillCharacterLayoutsInLeftSideMenu();\r\n                                    $state.go(\"profile.characters\");\r\n                                    toaster.pop('success', \"Layout deleted Successfully.\");\r\n\r\n                                }\r\n                                else {\r\n                                    if (data.data.StatusCode == 400) {\r\n                                        if (data.data.ShowToUser == true) {\r\n                                             toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    );\r\n                };\r\n\r\n                var layoutCopy = function () {\r\n                    var Scope = $scope.NewLayout;\r\n                    Scope.TabName = Scope.Name;\r\n                    Scope.LayoutId = $scope.NewLayout.LayoutId;\r\n                    $scope.TabHeading = \"Copy Layout Name\";\r\n                    $scope.Buttontext = \"Copy\";\r\n                    var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n                        { scope: Scope, State: $scope.TabHeading, btntext: $scope.Buttontext }\r\n                    );\r\n                    dlg.result.then(function (name) {\r\n\r\n                        name.Name = name.TabName;\r\n                        name.LayoutId = 0;\r\n                        for (var i = 0; i < name.TabList.length; i++) {\r\n                            var data = name.TabList[i];\r\n                            data.LayoutId = 0;\r\n                            data.TabId = 0;\r\n                            for (var j = 0; j < data.TileList.length; j++) {\r\n                                var dataTile = data.TileList[j];\r\n                                dataTile.EntityId = 0;\r\n                                dataTile.TabId = 0;\r\n                                dataTile.TileId = 0;\r\n                                if (dataTile.Value.Attribute != null) {\r\n                                    dataTile.Value.Attribute.AttributeId = 0;\r\n                                }\r\n                                else if (dataTile.Value.Command != null) {\r\n                                    dataTile.Value.Command.CommandId = 0;\r\n                                }\r\n                                else if (dataTile.Value.Counter != null) {\r\n                                    dataTile.Value.Counter.CounterId = 0;\r\n                                }\r\n                                else if (dataTile.Value.Execute != null) {\r\n                                    dataTile.Value.Execute.ExecuteId = 0;\r\n                                }\r\n                                else if (dataTile.Value.Link != null) {\r\n                                    dataTile.Value.Link.LinkId = 0;\r\n                                }\r\n                                else if (dataTile.Value.Note != null) {\r\n                                    dataTile.Value.Note.NoteId = 0;\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        layoutService.copyLayout(name).then(function (data) {\r\n\r\n                            if (data.data.StatusCode == 200) {\r\n\r\n                                $scope.NewLayout = data.data.PayLoad;\r\n                                //FillCharacterLayoutsInLeftSideMenu();\r\n                                toaster.pop('success', \"Layout Copied Successfully.\");\r\n                                $transition.router.stateService.go('profile.character.layout', { characterId: $scope.NewLayout.CharacterProfileId, layoutId: $scope.NewLayout.LayoutId });\r\n\r\n                            }\r\n                            else {\r\n                                if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                         toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n\r\n                $scope.CopyTab = function (tab) {\r\n                    $scope.TabHeading = \"Copy Page\";\r\n                    $scope.Buttontext = \"Copy\";\r\n                    var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n                        { scope: tab, State: $scope.TabHeading, btntext: $scope.Buttontext }\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        res.ClientObjectId = $scope.initialClientObjectId;\r\n                        res.IsSync = false;\r\n                        res.SyncDate = Date.now();\r\n                        $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n\r\n                        res.TabId = 0;\r\n                        var copytab = tabService.AddTab(res).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                data.data.PayLoad.IsSync = false;\r\n                                data.data.PayLoad.SyncDate = Date.now();\r\n                                $scope.NewLayout.TabList.push(data.data.PayLoad);\r\n                                for (var i = 0; i < $scope.Layouts.length; i++) {\r\n                                    if ($scope.Layouts[i].LayoutId == data.data.PayLoad.LayoutId) {\r\n                                        $scope.Layouts[i].TabList.push(data.data.PayLoad);\r\n                                    }\r\n                                }\r\n\r\n                                //$scope.NewLayout.TabList[$scope.tabSet.index] = data.data.PayLoad;\r\n                                $scope.ClientScopeChange = true;\r\n                            }\r\n                        })\r\n                    });\r\n                };\r\n\r\n                var tabReorder = function () {\r\n\r\n                    var tab = getActiveTab(),\r\n                        currentIdx = $scope.tabSet.index;\r\n\r\n                    var dlg = dialogs.create('/views/dialogs/tab-reorder.html', 'dialogTabReorder',\r\n                        {\r\n                            items: $scope.NewLayout.TabList,\r\n                            sorter: tabsSort\r\n                        },\r\n                        { size: 'sm', copy: false }\r\n                    );\r\n\r\n                    dlg.result.then(function (items) {\r\n\r\n                        $timeout(function () {\r\n\r\n                            items.forEach(function (item, idx) {\r\n                                item.order = idx;\r\n                                if (item === tab)\r\n                                    currentIdx = idx;\r\n                            });\r\n\r\n                            tabsSort($scope.NewLayout.TabList);\r\n                            $scope.tabSet.index = currentIdx;\r\n\r\n                            updateTabs();\r\n\r\n                        });\r\n                    });\r\n                }\r\n\r\n                $scope.getTileClass = function (tile) {\r\n\r\n                    var arr = [];\r\n\r\n                    if ($scope.state.tilesEditing)\r\n                        arr.push(tile.__randomShake);\r\n\r\n                    if (tile.id === $scope.state.tileDeleteId)\r\n                        arr.push('over-delete');\r\n\r\n                    return arr.join(' ');\r\n                };\r\n\r\n                $scope.getAutoPosition = function (tile) {\r\n                    var x = tile.id > 0 ? false : _autoPosition;\r\n                    return x;\r\n                };\r\n\r\n                $scope.tileSelect = function (tile) {\r\n                    if ($scope.tilePickerApi.selecting)\r\n                        $scope.tilePickerApi.endSelect(tile);\r\n                };\r\n\r\n                $scope.tileEdit = function () {\r\n                    $scope.tilePickerApi.beginSelect(function (tile) {\r\n\r\n                    });\r\n                }\r\n\r\n                $scope.onDragStart = function (event, ui) {\r\n                    $timeout(function () {\r\n                        $scope.state.tileDragging = true;\r\n                    });\r\n                };\r\n\r\n                $scope.onDragStop = function (event, ui) {\r\n                    $timeout(function () {\r\n                        $scope.state.tileDragging = false;\r\n                    });\r\n                };\r\n\r\n                $scope.onDeleteDrop = function (event, ui) {\r\n                    var requiredtabindex = -1;\r\n                    var requiredtileIndexId = -1;\r\n                    var tile = GridStackUI.Utils.getNodeData(ui.helper);\r\n                    var clientobjectId = ui.helper[0].dataset.gsId;\r\n\r\n                    $scope.Layout = $scope.NewLayout;\r\n                    for (var i = 0; i < $scope.Layout.TabList.length; i++) {\r\n                        var Tab = $scope.Layout.TabList[i];\r\n                        var TabTiles = Tab.TileList;\r\n                        for (var j = 0; j < TabTiles.length; j++) {\r\n                            if (TabTiles[j].ClientObjectId == clientobjectId) {\r\n                                requiredtabindex = i;\r\n                                requiredtileIndexId = j;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n                    if (requiredtabindex > -1 && requiredtileIndexId > -1) {\r\n                        if ($scope.Layout.TabList[requiredtabindex].TileList[requiredtileIndexId].TileId == 0) {\r\n                            $scope.Layout.TabList[requiredtabindex].TileList.splice(requiredtileIndexId, 1);\r\n                            $scope.NewLayout = [];\r\n                            $scope.NewLayout = $scope.Layout;\r\n                            toaster.pop('success', \"Tile deleted Successfully.\");\r\n                        }\r\n                        else {\r\n                            tileService.deleteTile($scope.Layout.TabList[requiredtabindex].TileList[requiredtileIndexId]).then(function (data) {\r\n                                if (data.data.StatusCode == 200) {\r\n\r\n                                    var deletedTileID = data.data.PayLoad.Result.TileId;\r\n                                    var requiredtabindex = -1;\r\n                                    var requiredtileIndexId = -1;\r\n\r\n                                    for (var i = 0; i < $scope.Layout.TabList.length; i++) {\r\n                                        var Tab = $scope.Layout.TabList[i];\r\n                                        var TabTiles = Tab.TileList;\r\n                                        for (var j = 0; j < TabTiles.length; j++) {\r\n                                            if (TabTiles[j].TileId == deletedTileID) {\r\n                                                requiredtabindex = i;\r\n                                                requiredtileIndexId = j;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    if (requiredtabindex > -1 && requiredtileIndexId > -1) {\r\n                                        $scope.Layout.TabList[requiredtabindex].TileList.splice(requiredtileIndexId, 1);\r\n                                    }\r\n                                    $scope.NewLayout = [];\r\n                                    $scope.NewLayout = $scope.Layout;\r\n                                    toaster.pop('success', \"Tile deleted Successfully.\");\r\n                                }\r\n                                else {\r\n                                    if (data.data.StatusCode == 400) {\r\n                                        if (data.data.ShowToUser == true) {\r\n                                             toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                };\r\n\r\n                $scope.onDeleteOver = function (event, ui) {\r\n                    var node = GridStackUI.Utils.getNodeData(ui.helper);\r\n                    if (node) {\r\n                        $timeout(function () {\r\n                            $scope.state.tileDeleteId = node.id;\r\n                        });\r\n                    }\r\n                };\r\n\r\n                $scope.onDeleteOut = function (event) {\r\n                    if ($scope.state.tileDeleteId) {\r\n                        $timeout(function () {\r\n                            $scope.state.tileDeleteId = null;\r\n                        });\r\n                    }\r\n                };\r\n                $scope.selectedPageIndex = 0;\r\n                $scope.onTabSelected = function (tab, index) {\r\n                    debugger;\r\n                    $scope.selectedPageIndex = index;\r\n                    $scope.selectedPageName = tab.TabName;\r\n                };\r\n\r\n                var layoutRender = function (pageIndex) {\r\n\r\n                    $scope.state.tilesEditing = false;\r\n                    var layoutId = $scope.NewLayout.LayoutId;\r\n                    var layout = layoutService.loadLayout(layoutId);\r\n                    layout.then(function (data) {\r\n\r\n                        if (data.data.StatusCode == 200) {\r\n\r\n                            $scope.Layout = data.data.PayLoad;\r\n                            tabsSort($scope.Layout.tabs);\r\n\r\n                            if ($scope.Layout.tabs.length) {\r\n\r\n                                if (pageIndex || pageIndex === 0) {\r\n                                    pageIndex = Math.clamp(0, $scope.Layout.tabs.length - 1);\r\n                                }\r\n                                else {\r\n                                    pageIndex = 0;\r\n\r\n                                    var pageId = $state.params.pageId;\r\n                                    if (pageId) {\r\n                                        pageIndex = $scope.Layout.tabs.findIndex(function (element, index) {\r\n                                            return element.id === pageId;\r\n                                        });\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                pageIndex = -1;\r\n                            }\r\n\r\n                            $scope.tabSet.index = pageIndex;\r\n                            updateTabs();\r\n                            //  rulesetDataShareService.setlayoutmetadata($scope.Layout);\r\n                            // $transition.router.stateService.go('profile.character.layout', { characterId: $window.localStorage.getItem(\"CharacterProfileId\"), layoutId: layoutId });\r\n                        }\r\n                        else {\r\n                            if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                     toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                };\r\n\r\n                var layoutLoad = function (layoutId) {\r\n                    $scope.state.tilesEditing = false;\r\n                    var layout = layoutService.loadLayout(layoutId);\r\n\r\n\r\n                    layout.then(function (data) {\r\n\r\n                        if (data.data.StatusCode == 200) {\r\n                            $scope.NewLayout = data.data.PayLoad;\r\n                            $transition.router.stateService.go('profile.character.layout', { characterId: $scope.NewLayout.CharacterProfileId, layoutId: layoutId });\r\n                        }\r\n                        else {\r\n                            if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                     toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                };\r\n\r\n               \r\n\r\n                $scope.ToggleMenu = function (e) {\r\n                    var actions = angular.element(e.target).find(\".page-toolbar-wrapper-toggle-trigger .btn\")\r\n                    var button = actions;\r\n                    var wrapper = \".page-toolbar-wrapper.initial\";\r\n                    var button_text = angular.element(\"#showAction\").text();\r\n\r\n                    if (angular.element(wrapper).hasClass(\"hide\")) {\r\n                        angular.element(wrapper).removeClass(\"hide\");\r\n                        angular.element(wrapper).addClass(\"show\");\r\n                    }\r\n                    else {\r\n                        angular.element(wrapper).removeClass(\"show\");\r\n                        angular.element(wrapper).addClass(\"hide\");\r\n                    }\r\n\r\n                    angular.element(button).toggleClass(\"icon-arrow-down icon-arrow-up\");\r\n                    //wrapper.toggleClass(\"show\");\r\n\r\n                    if (button_text === \"Show actions\") {\r\n                        angular.element(\"#showAction\").text(\"Hide actions\");\r\n\r\n                    } else {\r\n                        angular.element(\"#showAction\").text(\"Show actions\");\r\n                    }\r\n\r\n                };\r\n\r\n                $scope.showContextMenu = function (e) {\r\n                    var trigger = angular.element(e.target).parent();\r\n                    //angular.element(e.target).parent(\".dropdown-menu-item\").find(\".dropdown-menu-item-actions\")\r\n                    var actions = angular.element(e.target).parents(\".dropdown-menu-item\").find(\".dropdown-menu-item-actions\")\r\n\r\n                    e.stopPropagation();\r\n\r\n                    trigger.addClass(\"hide\");\r\n                    actions.addClass(\"show\");\r\n\r\n                    actions\r\n                        .find(\"[data-action=close]\")\r\n                        .click(function (e) {\r\n                            e.stopPropagation();\r\n                            trigger.removeClass(\"hide\");\r\n                            actions.removeClass(\"show\");\r\n                        });\r\n\r\n\r\n\r\n                };\r\n\r\n\r\n              \r\n\r\n                $scope.hideConteextMenu = function (c) {\r\n                    var cardActionsHover = angular.element(c.target).parents(\".dropdown-menu-item\").find(\".dropdown-menu-item-actions\");\r\n                    cardActionsHover.removeClass(\"show\");\r\n                    cardActionsHover.addClass(\"hide\");\r\n                };\r\n\r\n\r\n\r\n\r\n            }\r\n            else if ($state.params.action == 2) {\r\n\r\n                if ($state.params.contentType == 1) {\r\n                    $scope.ShowItems = true;\r\n                    if (angular.equals({}, rulesetDataShareService.getLayoutItemInventoryData()) == false) {\r\n                        $scope.NewItemInventory = rulesetDataShareService.getLayoutItemInventoryData();\r\n                        $scope.CharacterInventoryMetaData = rulesetDataShareService.getLayoutItemInventoryMetaData();\r\n                        if ($scope.NewItemInventory.CharacterItems.length == 0) {\r\n                            $scope.ShowItems = true;\r\n                            $scope.ShowItem = false;\r\n                        }\r\n                        else {\r\n                            $scope.ShowItems = false;\r\n                            $scope.ShowItem = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        var itemcontent = characterService.GetCharacterItemContent($state.params.characterId).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                $scope.NewItemInventory = data.data.PayLoad;\r\n                                rulesetDataShareService.setLayoutItemInventoryData($scope.NewItemInventory);\r\n                                rulesetDataShareService.setLayoutItemInventoryMetaData($scope.NewItemInventory.CharacterInventoryMetaData);\r\n                                if ($scope.NewItemInventory.CharacterItems.length == 0) {\r\n                                    $scope.ShowItems = true;\r\n                                    $scope.ShowItem = false;\r\n                                }\r\n                                else {\r\n                                    $scope.ShowItems = false;\r\n                                    $scope.ShowItem = true;\r\n                                }\r\n\r\n                            }\r\n                            else if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                     toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                }\r\n                            }\r\n\r\n                        });\r\n                    }\r\n                }\r\n\r\n                else if ($state.params.contentType == 2) {\r\n                    $scope.ShowSpells = true;\r\n                    if (angular.equals({}, rulesetDataShareService.getLayoutSpellInventoryData()) == false) {\r\n                        $scope.NewSpellInventory = rulesetDataShareService.getLayoutSpellInventoryData();\r\n                        $scope.CharacterInventoryMetaSpellData = rulesetDataShareService.getLayoutSpellInventoryMetaData();\r\n                        if ($scope.NewSpellInventory.CharacterSpells.length == 0) {\r\n                            $scope.ShowSpells = true;\r\n                            $scope.ShowSpell = false;\r\n                        }\r\n                        else {\r\n                            $scope.ShowSpells = false;\r\n                            $scope.ShowSpell = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        var spellcontent = characterService.GetCharacterSpellContent($state.params.characterId).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                $scope.NewSpellInventory = data.data.PayLoad;\r\n                                rulesetDataShareService.setLayoutSpellInventoryData($scope.NewSpellInventory);\r\n                                rulesetDataShareService.setLayoutSpellInventoryMetaData($scope.NewSpellInventory.CharacterInventoryMetaData);\r\n                                if ($scope.NewSpellInventory.CharacterSpells.length == 0) {\r\n                                    $scope.ShowSpells = true;\r\n                                    $scope.ShowSpell = false;\r\n                                }\r\n                                else {\r\n                                    $scope.ShowSpells = false;\r\n                                    $scope.ShowSpell = true;\r\n                                }\r\n\r\n                            }\r\n                            else if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                     toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                }\r\n                            }\r\n\r\n                        });\r\n                    }\r\n                }\r\n                else if ($state.params.contentType == 3) {\r\n                    $scope.ShowAbilities = true;\r\n                    if (angular.equals({}, rulesetDataShareService.getLayoutAbilityInventoryData()) == false) {\r\n                        $scope.NewAbilityInventory = rulesetDataShareService.getLayoutAbilityInventoryData();\r\n                        $scope.CharacterInventoryAbilityMetaData = rulesetDataShareService.getLayoutAbilityInventoryMetaData();\r\n                        if ($scope.NewAbilityInventory.CharacterAbilities.length == 0) {\r\n                            $scope.ShowAbilities = true;\r\n                            $scope.ShowAbility = false;\r\n                        }\r\n                        else {\r\n                            $scope.ShowAbilities = false;\r\n                            $scope.ShowAbility = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        var abilitycontent = characterService.GetCharacterAbilityContent($state.params.characterId).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                $scope.NewAbilityInventory = data.data.PayLoad;\r\n                                rulesetDataShareService.setLayoutAbilityInventoryData($scope.NewAbilityInventory);\r\n                                rulesetDataShareService.setLayoutAbilityInventoryMetaData($scope.NewAbilityInventory.CharacterInventoryMetaData);\r\n                                if ($scope.NewAbilityInventory.CharacterAbilities.length == 0) {\r\n                                    $scope.ShowAbilities = true;\r\n                                    $scope.ShowAbility = false;\r\n                                }\r\n                                else {\r\n                                    $scope.ShowAbilities = false;\r\n                                    $scope.ShowAbility = true;\r\n                                }\r\n\r\n                            }\r\n                            else if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                     toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                }\r\n                            }\r\n\r\n                        });\r\n                    }\r\n                }\r\n\r\n                $scope.GridViewTrigger = function (e) {\r\n                    var gridViewTrigger = angular.element(e.target);\r\n                    gridViewTrigger.parent().children().removeClass(\"selected\");\r\n                    gridViewTrigger.addClass(\"selected\");\r\n\r\n                    angular.element(\".card-list\").removeClass(\"view-list\");\r\n                }\r\n\r\n                $scope.ListViewTrigger = function (e) {\r\n                    var listViewTrigger = angular.element(e.target);\r\n                    listViewTrigger.parent().children().removeClass(\"selected\");\r\n                    listViewTrigger.addClass(\"selected\");\r\n\r\n                    angular.element(\".card-list\").addClass(\"view-list\");\r\n                }\r\n\r\n\r\n\r\n\r\n                $scope.hideConteextMenu = function (c) {\r\n\r\n                    var cardActionsHover = angular.element(c.target).parents(\".card\").find(\".card-actions\");\r\n                    cardActionsHover.removeClass(\"show\");\r\n                    cardActionsHover.addClass(\"hide\");\r\n                };\r\n\r\n                $scope.showContextMenu = function (e) {\r\n\r\n                    var cardActionsHover = angular.element(e.target).parents(\".card\").find(\".card-actions\");\r\n\r\n                    if (cardActionsHover.hasClass(\"hide\")) {\r\n                        cardActionsHover.removeClass(\"hide\");\r\n                        cardActionsHover.addClass(\"show\");\r\n                    }\r\n                    else {\r\n                        cardActionsHover.removeClass(\"show\");\r\n                        cardActionsHover.addClass(\"hide\");\r\n                    }\r\n\r\n                };\r\n\r\n            }\r\n            else if ($state.params.action == 3) {\r\n                if ($state.params.contentType == 1) {\r\n                    if (angular.equals({}, rulesetDataShareService.getLayoutRulesetItemInventoryData()) == false) {\r\n                        $scope.RulesetItems = rulesetDataShareService.getLayoutRulesetItemInventoryData();\r\n                        if ($scope.RulesetItems.length == 0) {\r\n                            $scope.ShowItems = true;\r\n                            $scope.ShowItem = false;\r\n                        }\r\n                        else {\r\n                            $scope.ShowItems = false;\r\n                            $scope.ShowItem = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        var rulesetitemcontent = rulesetService.GetRuleSetItemsForItemInventory($state.params.characterId);\r\n                        rulesetitemcontent.then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                $scope.RulesetItems = data.data.PayLoad.Items;\r\n                                rulesetDataShareService.setLayoutRulesetItemInventoryData($scope.RulesetItems);\r\n                                if ($scope.RulesetItems.length == 0) {\r\n                                    $scope.ShowItems = true;\r\n                                    $scope.ShowItem = false;\r\n                                }\r\n                                else {\r\n                                    $scope.ShowItems = false;\r\n                                    $scope.ShowItem = true;\r\n                                }\r\n\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                }\r\n                else if ($state.params.contentType == 2) {\r\n                    if (angular.equals({}, rulesetDataShareService.getLayoutRulesetSpellInventoryData()) == false) {\r\n                        $scope.RulesetSpells = rulesetDataShareService.getLayoutRulesetSpellInventoryData();\r\n                        if ($scope.RulesetSpells.length == 0) {\r\n                            $scope.ShowSpells = true;\r\n                            $scope.ShowSpell = false;\r\n                        }\r\n                        else {\r\n                            $scope.ShowSpells = false;\r\n                            $scope.ShowSpell = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        var rulesetspellcontent = rulesetService.GetRuleSetSpellsForSpellInventory($state.params.characterId);\r\n                        rulesetspellcontent.then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                $scope.RulesetSpells = data.data.PayLoad.Spells;\r\n                                rulesetDataShareService.setLayoutRulesetSpellInventoryData($scope.RulesetSpells);\r\n                                if ($scope.RulesetSpells.length == 0) {\r\n                                    $scope.ShowSpells = true;\r\n                                    $scope.ShowSpell = false;\r\n                                }\r\n                                else {\r\n                                    $scope.ShowSpells = false;\r\n                                    $scope.ShowSpell = true;\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                else if ($state.params.contentType == 3) {\r\n                    if (angular.equals({}, rulesetDataShareService.getLayoutRulesetAbilityInventoryData()) == false) {\r\n                        $scope.RulesetAbilities = rulesetDataShareService.getLayoutRulesetAbilityInventoryData();\r\n                        if ($scope.RulesetAbilities.length == 0) {\r\n                            $scope.ShowAbilities = true;\r\n                            $scope.ShowAbility = false;\r\n                        }\r\n                        else {\r\n                            $scope.ShowAbilities = false;\r\n                            $scope.ShowAbility = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        var rulesetabilitycontent = rulesetService.GetRuleSetAbilitiesForAbilityInventory($state.params.characterId);\r\n                        rulesetabilitycontent.then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                $scope.RulesetAbilities = data.data.PayLoad.Abilities;\r\n                                rulesetDataShareService.setLayoutRulesetAbilityInventoryData($scope.RulesetAbilities);\r\n                                if ($scope.RulesetAbilities.length == 0) {\r\n                                    $scope.ShowAbilities = true;\r\n                                    $scope.ShowAbility = false;\r\n                                }\r\n                                else {\r\n                                    $scope.ShowAbilities = false;\r\n                                    $scope.ShowAbility = true;\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n            else if ($state.params.action == 4) {\r\n\r\n                if ($state.params.contentType == 1) {\r\n                    $scope.NewItemInventory = rulesetDataShareService.getLayoutItemInventoryData();\r\n                    $scope.CharacterContent = $scope.NewItemInventory.CharacterItems[$state.params.index];\r\n                    // Setting ClientObjectId For Tiles.\r\n                    for (var i = 0; i < $scope.CharacterContent.CharacterItemsProperties.length; i++) {\r\n                        var ItemPropertyLst = $scope.CharacterContent.CharacterItemsProperties[i];\r\n                        if (ItemPropertyLst.CharacterItemId == 0 || ItemPropertyLst.CharacterItemId == undefined || ItemPropertyLst.CharacterItemId == \"\") {\r\n                            $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                            ItemPropertyLst.tile.ClientObjectId = $scope.initialClientObjectId;\r\n                            $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                        }\r\n                    }\r\n\r\n                    $scope.CharacterContent.Index = $state.params.index;\r\n                }\r\n                else if ($state.params.contentType == 2) {\r\n\r\n                    $scope.NewSpellInventory = rulesetDataShareService.getLayoutSpellInventoryData();\r\n                    $scope.CharacterContent = $scope.NewSpellInventory.CharacterSpells[$state.params.index];\r\n                    // Setting ClientObjectId For Tiles.\r\n                    for (var i = 0; i < $scope.CharacterContent.CharacterSpellsProperties.length; i++) {\r\n                        var spellPropertyLst = $scope.CharacterContent.CharacterSpellsProperties[i];\r\n                        if (spellPropertyLst.CharacterSpellId == 0 || spellPropertyLst.CharacterSpellId == undefined || spellPropertyLst.CharacterSpellId == \"\") {\r\n                            $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                            spellPropertyLst.tile.ClientObjectId = $scope.initialClientObjectId;\r\n                            $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                        }\r\n                    }\r\n                    $scope.CharacterContent.Index = $state.params.index;\r\n                }\r\n                else if ($state.params.contentType == 3) {\r\n\r\n                    $scope.NewAbilityInventory = rulesetDataShareService.getLayoutAbilityInventoryData();\r\n                    $scope.CharacterContent = $scope.NewAbilityInventory.CharacterAbilities[$state.params.index];\r\n                    // Setting ClientObjectId For Tiles.\r\n                    for (var i = 0; i < $scope.CharacterContent.CharacterAbilitiesProperties.length; i++) {\r\n                        var abilityPropertyLst = $scope.CharacterContent.CharacterAbilitiesProperties[i];\r\n                        if (abilityPropertyLst.CharacterAbilityId == 0 || abilityPropertyLst.CharacterAbilityId == undefined || abilityPropertyLst.CharacterAbilityId == \"\") {\r\n                            $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                            abilityPropertyLst.tile.ClientObjectId = $scope.initialClientObjectId;\r\n                            $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                        }\r\n                    }\r\n                    $scope.CharacterContent.Index = $state.params.index;\r\n                }\r\n            }\r\n            \r\n\r\n            function setClientObjectId(Layouts) {\r\n                for (var k = 0; k < Layouts.length; k++) {\r\n\r\n                    Layouts[k].ClientObjectId = $scope.initialClientObjectId;\r\n                    $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                    for (var i = 0; i < Layouts[k].TabList.length; i++) {\r\n                        Layouts[k].TabList[i].ClientObjectId = $scope.initialClientObjectId;\r\n                        $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                        Layouts[k].TabList[i].IsSync = true;\r\n                        Layouts[k].TabList[i].UpdateDate = Date.now();\r\n                        for (var j = 0; j < Layouts[k].TabList[i].TileList.length; j++) {\r\n                            Layouts[k].TabList[i].TileList[j].ClientObjectId = $scope.initialClientObjectId;\r\n                            Layouts[k].TabList[i].TileList[j].IsSync = true;\r\n                            Layouts[k].TabList[i].TileList[j].UpdateDate = Date.now();\r\n                            $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                        }\r\n                    }\r\n                }\r\n                return Layouts;\r\n            }\r\n\r\n\r\n\r\n            function saveLayoutwithTimer() {\r\n\r\n                if ($scope.ClientScopeChange == true) {\r\n                    for (var i = 0; i < $scope.NewLayout.TabList.length; i++) {\r\n                        if ($scope.NewLayout.TabList[i].IsSync == false) {\r\n                            syncLayoutTabwithTimer($scope.NewLayout.TabList[i]);\r\n                        }\r\n                        for (var j = 0; j < $scope.NewLayout.TabList[i].TileList.length; j++) {\r\n                            if ($scope.NewLayout.TabList[i].TileList[j].IsSync == false) {\r\n                                syncLayoutTilewithTimer($scope.NewLayout.TabList[i].TileList[j]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                $scope.ClientScopeChange = false;\r\n            }\r\n\r\n            function syncLayoutTabwithTimer(tabObjectforUpdate) {\r\n\r\n\r\n                if (tabObjectforUpdate.TabId == null || tabObjectforUpdate.TabId == \"\" || tabObjectforUpdate.TabId == 0) {\r\n                    tabService.AddTab(tabObjectforUpdate).then(function (data) {\r\n\r\n                        if (data.data.StatusCode == 200) {\r\n\r\n                            var UpdatedTabObject = data.data.PayLoad;\r\n\r\n                            for (var i = 0; i < $scope.NewLayout.TabList.length; i++) {\r\n                                if ($scope.NewLayout.TabList[i].ClientObjectId == UpdatedTabObject.ClientObjectId) {\r\n                                    if ($scope.NewLayout.TabList[i].UpdateDate <= UpdatedTabObject.UpdateDate) {\r\n                                        $scope.NewLayout.TabList[i] = UpdatedTabObject;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                    // toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                    toaster.pop('error', \"Problem in saving the data, please check your internet connection.\");\r\n                                }\r\n                                $scope.ClientScopeChange = true;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    tabService.UpdateTab(tabObjectforUpdate).then(function (data) {\r\n\r\n                        if (data.data.StatusCode == 200) {\r\n\r\n                            var UpdatedTabObject = data.data.PayLoad;\r\n\r\n                            for (var i = 0; i < $scope.NewLayout.TabList.length; i++) {\r\n                                if ($scope.NewLayout.TabList[i].ClientObjectId == UpdatedTabObject.ClientObjectId) {\r\n                                    if ($scope.NewLayout.TabList[i].UpdateDate <= UpdatedTabObject.UpdateDate) {\r\n                                        $scope.NewLayout.TabList[i] = UpdatedTabObject;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                    // toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                    toaster.pop('error', \"Problem in saving the data, please check your internet connection.\");\r\n                                }\r\n                                $scope.ClientScopeChange = true;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            function syncLayoutTilewithTimer(tileObjectforUpdate) {\r\n\r\n\r\n                if (tileObjectforUpdate.TileId == null || tileObjectforUpdate.TileId == \"\" || tileObjectforUpdate.TileId == 0) {\r\n                    tileService.AddTile(tileObjectforUpdate).then(function (data) {\r\n\r\n                        if (data.data.StatusCode == 200) {\r\n\r\n                            var UpdatedObject = data.data.PayLoad;\r\n\r\n                            for (var i = 0; i < $scope.NewLayout.TabList.length; i++) {\r\n\r\n                                for (var j = 0; j < $scope.NewLayout.TabList[i].TileList.length; j++) {\r\n\r\n                                    if ($scope.NewLayout.TabList[i].TileList[j].ClientObjectId == UpdatedObject.ClientObjectId) {\r\n                                        if ($scope.NewLayout.TabList[i].TileList[j].UpdateDate <= UpdatedObject.UpdateDate) {\r\n                                            $scope.NewLayout.TabList[i].TileList[j] = UpdatedObject;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                    // toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                    toaster.pop('error', \"Problem in saving the data, please check your internet connection.\");\r\n                                }\r\n                                $scope.ClientScopeChange = true;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    tileService.UpdateTile(tileObjectforUpdate).then(function (data) {\r\n\r\n                        if (data.data.StatusCode == 200) {\r\n\r\n                            var UpdatedTabObject = data.data.PayLoad;\r\n\r\n                            for (var i = 0; i < $scope.NewLayout.TabList.length; i++) {\r\n                                for (var j = 0; j < $scope.NewLayout.TabList[i].TileList.length; j++) {\r\n                                    if ($scope.NewLayout.TabList[i].TileList[j].ClientObjectId == UpdatedObject.ClientObjectId) {\r\n                                        if ($scope.NewLayout.TabList[i].TileList[j].UpdateDate <= UpdatedObject.UpdateDate) {\r\n                                            $scope.NewLayout.TabList[i].TileList[j] = UpdatedObject;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                    // toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                    toaster.pop('error', \"Problem in saving the data, please check your internet connection.\");\r\n                                }\r\n                                $scope.ClientScopeChange = true;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n\r\n            var _autoPosition = false;\r\n\r\n            var _menuOptionView = {\r\n                id: 'nav.layouts.open',\r\n                name: 'Switch Layout',\r\n                icon: 'fa-fw fa-random',\r\n                menus: []\r\n            };\r\n            $scope.menuCharacter = {\r\n                opened: false,\r\n                menus: navService.getCommonCharacterNav([]),\r\n                menuClick: function (item) {\r\n                    $scope.menuCharacter.opened = false;\r\n                }\r\n            };\r\n\r\n            navService.registerNav('character', $scope.menuCharacter);\r\n\r\n\r\n\r\n            function SearchDialogCtrl(dep1, dep2) {\r\n\r\n                $scope.cancel = function () {\r\n                    $scope.modalInstance.close(); // the same instance that was created in element.on('click',...)\r\n                }\r\n\r\n                // you can call it from the template:  search.dialog.tpl.html\r\n                $scope.someFunction = function () { }\r\n\r\n                // it can bind to it in the search.dialog.tpl.html\r\n                $scope.someProperty;\r\n\r\n                // this will be two-way bound with some property from the parent field (look below)\r\n                // if you want to perform some action on it just use $scope.$watch\r\n                $scope.searchDialog;\r\n            }\r\n\r\n\r\n            $scope.ShowDice = function () {\r\n\r\n                var dlg = dialogs.create('/views/dialogs/defaultdiceselection.html', 'dialogDefaultDiceSelect',\r\n                    { \"mode\": 3, scope: $scope.NewLayout.CharacterProfileId }\r\n                );\r\n                dlg.result.then(function (res, result) {\r\n\r\n                })\r\n            }\r\n\r\n            $scope.AddCorestatvalues = function () {\r\n                $scope.characters = [];\r\n                if (angular.equals({}, rulesetDataShareService.getLayoutData()) == false) {\r\n                    $scope.characters = rulesetDataShareService.getLayoutData();\r\n                    //$scope.characters = rulesetDataShareService.getcorestatvalue();\r\n                    if ($scope.characters == null) {\r\n                        toaster.pop('error', \"No CoreStat Available.\");\r\n                    }\r\n                    $scope.characters.CorestatValuesHeading = \"Add CoreStat Values\";\r\n                    $scope.characters.CorestatValuesIcon = \"fa fa-floppy-o\";\r\n                    $scope.characters.CorestatValuesBtnText = \"Save\";\r\n                    if ($scope.characters.CorestatValues != null && angular.isUndefined($scope.characters.CorestatValues) == false) {\r\n                        for (var i = 0; i < $scope.characters.CorestatValues.length; i++) {\r\n                            var result = $scope.characters.CorestatValues[i];\r\n                            \r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    toaster.pop('error', \"No CoreStat Available.\");\r\n                }\r\n                // $scope.characters = rulesetDataShareService.getcorestatvalue();\r\n\r\n                var dlg = dialogs.create('/views/dialogs/addcorestatvalues.html', 'dialogAddCorestatValues',\r\n                    { scope: $scope.characters }\r\n\r\n                );\r\n\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        res.Id = res.CharacterProfileId;\r\n                        var values = characterService.AddCorestatValues(res);\r\n                        values.then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                $scope.characters = rulesetDataShareService.getLayoutData();\r\n                                $scope.characters.CorestatValues = [];\r\n                                for (var i = 0; i < data.data.PayLoad.CorestatValues.length; i++) {\r\n                                    $scope.characters.CorestatValues.push(data.data.PayLoad.CorestatValues[i]);\r\n                                }\r\n                                rulesetDataShareService.setcorestatvalue($scope.characters);\r\n                                toaster.pop('success', \"CoreStat Values are Updated Successfully.\");\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                            }\r\n                            else {\r\n                                if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                         toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                    }\r\n                                    $(\"#loading\").fadeOut(\"slow\");\r\n                                }\r\n                            }\r\n\r\n                        })\r\n                    }\r\n                });\r\n            }\r\n\r\n            $scope.ShowTilesforInventory = function (item) {\r\n                $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n                var dlg = dialogs.create('/views/dialogs/tile-type-picker.html', 'dialogTileTypes',\r\n                    { scope: $scope.NewLayout.LayoutMetaData.TileTypes }\r\n                );\r\n                dlg.result.then(function (res) {\r\n                    if (res.TileType == \"Note\") {\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TileTypeId = res.TileId;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TileTypeName = res.TileType;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.Value = res.Value;\r\n                        //$scope.NewLayout.LayoutMetaData.Tile.Value = res.Value;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.Mode = \"Edit\";\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TabId = 0;\r\n                        var dlg = dialogs.create('/views/dialogs/tile-editor-1.html', 'NoteTile',\r\n                            { scope: $scope.NewLayout.LayoutMetaData.Tile, Tablist: $scope.NewLayout.TabList }\r\n                        );\r\n                        dlg.result.then(function (res) {\r\n                            if (res != \"cancel\") {\r\n                               \r\n                                res.Height = \"5\";\r\n                                res.Width = \"5\";\r\n                                res.X = \"0\";\r\n                                res.Y = \"0\";\r\n                                res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                res.IsSync = false;\r\n                                res.SyncDate = Date.now();\r\n                                //$scope.NewLayout.TabList[$scope.tabSet.index].TileList.push(res);\r\n                                var tile = { \"tile\": res };\r\n                                item.push(tile);\r\n                                $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                                //}\r\n                            }\r\n                            $scope.ClientScopeChange = true;\r\n                        });\r\n                    }\r\n                    else if (res.TileType == \"Counter\") {\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TileTypeId = res.TileId;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TileTypeName = res.TileType;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.Value = res.Value;\r\n\r\n                        $scope.NewLayout.LayoutMetaData.Tile.Mode = \"Edit\";\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TabId = 0;\r\n\r\n\r\n                        var dlg = dialogs.create('/views/dialogs/tile-editor-2.html', 'NoteTile',\r\n                            { scope: $scope.NewLayout.LayoutMetaData.Tile }\r\n                        );\r\n                        dlg.result.then(function (res) {\r\n                            if (res != \"cancel\") {\r\n                               \r\n                                res.Height = \"5\";\r\n                                res.Width = \"5\";\r\n                                res.X = \"0\";\r\n                                res.Y = \"0\";\r\n                                res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                res.IsSync = false;\r\n                                res.SyncDate = Date.now();\r\n                                //$scope.NewLayout.TabList[$scope.tabSet.index].TileList.push(res);\r\n                                var tile = { \"tile\": res };\r\n                                item.push(tile);\r\n                                $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                            }\r\n                            //}\r\n                            $scope.ClientScopeChange = true;\r\n\r\n                        });\r\n                    }\r\n                    else if (res.TileType == \"Attribute\") {\r\n                        $scope.Attributecorestats = rulesetDataShareService.getLayoutData();\r\n                        $scope.CorestatValues = $scope.Attributecorestats.CorestatValues;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TileTypeId = res.TileId;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TileTypeName = res.TileType;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.Value = res.Value;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.Value.Attribute.CoreStatValue = res.Value.Attribute.CoreStatValue;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.CorestatValues = angular.isDefined($scope.CorestatValues.CorestatValues)\r\n                            == true ? $scope.CorestatValues.CorestatValues :\r\n                            $scope.CorestatValues;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.Mode = \"Edit\";\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TabId = 0;\r\n\r\n                        var dlg = dialogs.create('/views/dialogs/tile-editor-3.html', 'NoteTile',\r\n                            { scope: $scope.NewLayout.LayoutMetaData.Tile }\r\n                        );\r\n                        dlg.result.then(function (res) {\r\n\r\n                            if (res != \"cancel\") {\r\n                             \r\n                                res.Height = \"5\";\r\n                                res.Width = \"5\";\r\n                                res.X = \"0\";\r\n                                res.Y = \"0\";\r\n                                res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                res.IsSync = false;\r\n                                res.SyncDate = Date.now();\r\n                                //$scope.NewLayout.TabList[$scope.tabSet.index].TileList.push(res);\r\n                                var tile = { \"tile\": res };\r\n                                item.push(tile);\r\n                                $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                                //}\r\n                            }\r\n                            $scope.ClientScopeChange = true;\r\n\r\n                        });\r\n                    }\r\n                    else if (res.TileType == \"Link\") {\r\n                       \r\n                        $scope.NewLayout.LayoutMetaData.Tile.TileTypeId = res.TileId;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TileTypeName = res.TileType;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.Value = res.Value;\r\n                        //$scope.NewLayout.LayoutMetaData.Tile.Mode = \"Edit\";\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TabId = 0;\r\n\r\n                        var dlg = dialogs.create('/views/dialogs/tile-editor-4.html', 'NoteTile',\r\n                            { scope: $scope.NewLayout.LayoutMetaData.Tile }\r\n                        );\r\n                        dlg.result.then(function (res) {\r\n                            if (res != \"cancel\") {\r\n                              \r\n                                res.Height = \"5\";\r\n                                res.Width = \"5\";\r\n                                res.X = \"0\";\r\n                                res.Y = \"0\";\r\n                                res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                res.IsSync = false;\r\n                                res.SyncDate = Date.now();\r\n                               \r\n                                var tile = { \"tile\": res };\r\n                                item.push(tile);\r\n                                $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                                $scope.LinkExecuteTileContent = rulesetDataShareService.getLinkTileData();\r\n                               \r\n                            }\r\n                            $scope.ClientScopeChange = true;\r\n\r\n                        });\r\n                       \r\n                    }\r\n                    else if (res.TileType == \"Execute\") {\r\n                      es;\r\n\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TileTypeId = res.TileId;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TileTypeName = res.TileType;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.Value = res.Value;\r\n\r\n                        //$scope.NewLayout.LayoutMetaData.Tile.Mode = \"Edit\";\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TabId = 0;\r\n\r\n\r\n                        var dlg = dialogs.create('/views/dialogs/tile-editor-5.html', 'NoteTile',\r\n                            { scope: $scope.NewLayout.LayoutMetaData.Tile, fullscope: $scope.NewLayout.TabList }\r\n                        );\r\n                        dlg.result.then(function (res) {\r\n                            if (res != \"cancel\") {\r\n                             \r\n                                res.Height = \"5\";\r\n                                res.Width = \"5\";\r\n                                res.X = \"0\";\r\n                                res.Y = \"0\";\r\n                                res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                res.IsSync = false;\r\n                                res.SyncDate = Date.now();\r\n                                //$scope.NewLayout.TabList[$scope.tabSet.index].TileList.push(res);\r\n                                var tile = { \"tile\": res };\r\n                                item.push(tile);\r\n                                $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                                $scope.LinkExecuteTileContent = rulesetDataShareService.getLinkTileData();\r\n                                \r\n                            }\r\n                        })\r\n                      \r\n                        $scope.ClientScopeChange = true;\r\n\r\n                       \r\n\r\n                    }\r\n                    else if (res.TileType == \"Command\") {\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TileTypeId = res.TileId;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TileTypeName = res.TileType;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.Value = res.Value;\r\n\r\n                        $scope.NewLayout.LayoutMetaData.Tile.Mode = \"Edit\";\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TabId = 0;\r\n\r\n                        var dlg = dialogs.create('/views/dialogs/tile-editor-6.html', 'NoteTile',\r\n                            { scope: $scope.NewLayout.LayoutMetaData.Tile }\r\n                        );\r\n                        dlg.result.then(function (res) {\r\n                            if (res != \"cancel\") {\r\n                              \r\n                                res.Height = \"5\";\r\n                                res.Width = \"5\";\r\n                                res.X = \"0\";\r\n                                res.Y = \"0\";\r\n                                res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                res.IsSync = false;\r\n                                res.SyncDate = Date.now();\r\n                                //$scope.NewLayout.TabList[$scope.tabSet.index].TileList.push(res);\r\n                                var tile = { \"tile\": res };\r\n                                item.push(tile);\r\n                                $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                               \r\n                            }\r\n\r\n                            $scope.ClientScopeChange = true;\r\n\r\n                        });\r\n                    }\r\n                    else if (res.TileType == \"Image\") {\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TileTypeId = res.TileId;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TileTypeName = res.TileType;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.Value = res.Value;\r\n                        $scope.NewLayout.LayoutMetaData.Tile.Mode = \"Edit\";\r\n                        $scope.NewLayout.LayoutMetaData.Tile.TabId = 0;\r\n                        var dlg = dialogs.create('/views/dialogs/tile-editor-7.html', 'NoteTile',\r\n                            { scope: $scope.NewLayout.LayoutMetaData.Tile }\r\n                        );\r\n                        dlg.result.then(function (res) {\r\n                            if (res != \"cancel\") {\r\n                              \r\n                                res.Height = \"5\";\r\n                                res.Width = \"5\";\r\n                                res.X = \"0\";\r\n                                res.Y = \"0\";\r\n                                res.ClientObjectId = $scope.initialClientObjectId + 1;\r\n                                res.IsSync = false;\r\n                                res.SyncDate = Date.now();\r\n                                //$scope.NewLayout.TabList[$scope.tabSet.index].TileList.push(res);\r\n                                var tile = { \"tile\": res };\r\n                                item.push(tile);\r\n                                $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                             \r\n                            }\r\n\r\n                            $scope.ClientScopeChange = true;\r\n                        });\r\n\r\n                    }\r\n\r\n\r\n\r\n                });\r\n            }\r\n            $scope.SaveInventoryTiles = function (tilecontent, Num) {\r\n                //$scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n\r\n                if (Num == 1) {\r\n                    $scope.CharacterInventoryMetaData = rulesetDataShareService.getLayoutItemInventoryMetaData();\r\n                    $scope.CharacterInventoryMetaData.CharacterItems.CharacterItemId = tilecontent.CharacterItemId;\r\n                    $scope.CharacterInventoryMetaData.CharacterItems.CharacterProfileId = tilecontent.CharacterProfileId;\r\n                    $scope.CharacterInventoryMetaData.CharacterItems.CharacterItemsProperties = tilecontent.CharacterItemsProperties;\r\n                    $scope.CharacterInventoryMetaData.CharacterItems.AssociatedSpells = tilecontent.AssociatedSpells;\r\n                    $scope.CharacterInventoryMetaData.CharacterItems.AssociatedAbilities = tilecontent.AssociatedAbilities;\r\n                    var InventoryItems = [];\r\n                    InventoryItems.push($scope.CharacterInventoryMetaData.CharacterItems);\r\n                    var items = characterService.CreateItemInventorytile(InventoryItems).then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            $scope.CharacterContent = data.data.PayLoad.CharacterItems[0];\r\n                            toaster.pop('success', \"Tile Added Successfully\");\r\n                        }\r\n                    });\r\n                }\r\n                else if (Num == 2) {\r\n                    $scope.CharacterInventoryMetaSpellData = rulesetDataShareService.getLayoutSpellInventoryMetaData();\r\n                    $scope.CharacterInventoryMetaSpellData.CharacterSpells.CharacterSpellId = tilecontent.CharacterSpellId;\r\n                    $scope.CharacterInventoryMetaSpellData.CharacterSpells.CharacterProfileId = tilecontent.CharacterProfileId;\r\n                    $scope.CharacterInventoryMetaSpellData.CharacterSpells.CharacterSpellsProperties = tilecontent.CharacterSpellsProperties;\r\n                    var InventorySpells = [];\r\n                    InventorySpells.push($scope.CharacterInventoryMetaSpellData.CharacterSpells);\r\n                    var items = characterService.CreateSpellInventorytile(InventorySpells).then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            $scope.CharacterContent = data.data.PayLoad.CharacterSpells[0];\r\n                            toaster.pop('success', \"Tile Added Successfully\");\r\n                        }\r\n                    });\r\n                }\r\n                else if (Num == 3) {\r\n                    $scope.CharacterInventoryAbilityMetaData = rulesetDataShareService.getLayoutAbilityInventoryMetaData();\r\n                    $scope.CharacterInventoryAbilityMetaData.CharacterAbilities.CharacterAbilityId = tilecontent.CharacterAbilityId;\r\n                    $scope.CharacterInventoryAbilityMetaData.CharacterAbilities.CharacterProfileId = tilecontent.CharacterProfileId;\r\n                    $scope.CharacterInventoryAbilityMetaData.CharacterAbilities.CharacterAbilitiesProperties = tilecontent.CharacterAbilitiesProperties;\r\n                    var InventoryAbilities = [];\r\n                    InventoryAbilities.push($scope.CharacterInventoryAbilityMetaData.CharacterAbilities);\r\n                    var items = characterService.CreateAbilityInventorytile(InventoryAbilities).then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            $scope.CharacterContent = data.data.PayLoad.CharacterAbilities[0];\r\n                            toaster.pop('success', \"Tile Added Successfully\");\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            $scope.ItemInventory = function () {\r\n                  rulesetDataShareService.setInventory($scope.NewInventory);\r\n                $transition.router.stateService.go('profile.ItemInventory', { characterId: $state.params.characterId, action: 2, isNew: 1, contentType: 1 });\r\n                \r\n\r\n            }\r\n            $scope.BackToLayout = function () {\r\n                $(\"#loading\").css(\"display\", \"block\");\r\n                $state.go('profile.character.layout', { characterId: $state.params.characterId, action: 1, isNew: 1 });\r\n                $(\"#loading\").fadeOut(\"slow\");\r\n            }\r\n            $scope.onloadFun = function () {\r\n                $(\"#loading\").fadeOut(\"slow\");\r\n            }\r\n            $scope.ImportRuleSetCharecterleavel = function () {\r\n                var dlg = dialogs.create('/views/dialogs/rulesetimport.html', 'dialogImportRulesetinCharecter',\r\n                    { characterProfileId: $scope.NewLayout.CharacterProfileId }\r\n                    //{ ruleSetId: $scope.NewRuleSet.Id }\r\n                );\r\n\r\n                dlg.result.then(function (res) {\r\n                    if (res != 'cancel') {\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n            $scope.SpellInventory = function () {\r\n                \r\n                $transition.router.stateService.go('profile.SpellInventory', { characterId: $state.params.characterId, action: 2, contentType: 2 });\r\n            }\r\n\r\n            $scope.AbilityInventory = function () {\r\n                \r\n                $transition.router.stateService.go('profile.AbilityInventory', { characterId: $state.params.characterId, action: 2, contentType: 3 });\r\n\t\t\t}\r\n\r\n\t\t\t$scope.widgets = [{ x: 0, y: 0, width: 100, height: 100 }, { x: 0, y: 0, width: 3, height: 100 }];\r\n\t\t\t$scope.options = {\r\n\t\t\t\tcellHeight: 200,\r\n\t\t\t\tverticalMargin: 10\r\n\t\t\t};\r\n\t\t\t$scope.addWidget = function () {\r\n\t\t\t\tvar newWidget = { x: 0, y: 0, width: 1, height: 1 };\r\n\t\t\t\t$scope.widgets.push(newWidget);\r\n\t\t\t};\r\n\t\t\t$scope.moveWidget = function () {\r\n\t\t\t\t$scope.widgets[0].x = 1;\r\n\t\t\t\t$scope.widgets[0].width = 2;\r\n\t\t\t\t$scope.widgets[0].height = 2;\r\n\t\t\t};\r\n\t\t\t$scope.removeWidget = function (w) {\r\n\t\t\t\tvar index = $scope.widgets.indexOf(w);\r\n\t\t\t\t$scope.widgets.splice(index, 1);\r\n\t\t\t};\r\n\t\t\t$scope.onChange = function (event, items) {\r\n\t\t\t\t$log.log(\"onChange event: \" + event + \" items:\" + items);\r\n\t\t\t};\r\n\t\t\t$scope.onDragStart = function (event, ui) {\r\n\t\t\t\t$log.log(\"onDragStart event: \" + event + \" ui:\" + ui);\r\n\t\t\t};\r\n\t\t\t$scope.onDragStop = function (event, ui) {\r\n\t\t\t\t$log.log(\"onDragStop event: \" + event + \" ui:\" + ui);\r\n\t\t\t};\r\n\t\t\t$scope.onResizeStart = function (event, ui) {\r\n\t\t\t\t$log.log(\"onResizeStart event: \" + event + \" ui:\" + ui);\r\n\t\t\t};\r\n\t\t\t$scope.onResizeStop = function (event, ui) {\r\n\t\t\t\t$log.log(\"onResizeStop event: \" + event + \" ui:\" + ui);\r\n\t\t\t};\r\n\t\t\t$scope.onItemAdded = function (item) {\r\n\t\t\t\t$log.log(\"onItemAdded item: \" + item);\r\n\t\t\t};\r\n\t\t\t$scope.onItemRemoved = function (item) {\r\n\t\t\t\t$log.log(\"onItemRemoved item: \" + item);\r\n\t\t\t};\r\n\r\n\t\t\t$scope.AddRulesetItems = function () {\r\n\t\t\t\tvar rulesetitemcontent = rulesetService.GetRuleSetItemsForItemInventory($state.params.characterId);\r\n\t\t\t\trulesetitemcontent.then(function (data) {\r\n\t\t\t\t\tif (data.data.StatusCode == 200) {\r\n\t\t\t\t\t\tconsole.log(\"StatusCode 200: \", data.data.PayLoad.Items);\r\n\t\t\t\t\t\t$scope.RulesetItems = data.data.PayLoad.Items;\r\n\t\t\t\t\t\tvar rulesets = data.data.PayLoad;\r\n\t\t\t\t\t\tvar dlg = dialogs.create('/views/dialogs/AssociateRulesetItems.html', 'dialogAssociatedRulesetItems',\r\n\t\t\t\t\t\t\t{ scope: $scope.RulesetItems }\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tdlg.result.then(function (res) {\r\n\t\t\t\t\t\t\tconsole.log(\"res: \"+res);\r\n\t\t\t\t\t\t\t$scope.rulesets = res;\r\n\t\t\t\t\t\t\t$scope.SaveRulesetItem();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t//rulesetDataShareService.setLayoutRulesetItemInventoryData($scope.RulesetItems);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (data.data.StatusCode == 400) {\r\n\t\t\t\t\t\tconsole.log(\"!!!StatusCode 400: \", data);\r\n\t\t\t\t\t\tif (data.data.ShowToUser == true) {\r\n\t\t\t\t\t\t\ttoaster.pop('error', data.data.ErrorMessage);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t$scope.AddRulesetSpell = function () {\r\n\t\t\t\tvar rulesetitemcontent = rulesetService.GetRuleSetSpellsForSpellInventory($state.params.characterId);\r\n\t\t\t\trulesetitemcontent.then(function (data) {\r\n\t\t\t\t\tif (data.data.StatusCode == 200) {\r\n\t\t\t\t\t\tconsole.log(\"StatusCode 200: \", data);\r\n\t\t\t\t\t\t$scope.RulesetSpells = data.data.PayLoad.Spells;\r\n\t\t\t\t\t\tvar rulesets = data.data.PayLoad;\r\n\t\t\t\t\t\tvar dlg = dialogs.create('/views/dialogs/AssociateRulesetSpells.html', 'dialogAssociatedRulesetSpells',\r\n\t\t\t\t\t\t\t{ scope: $scope.RulesetSpells }\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tdlg.result.then(function (res) {\r\n\t\t\t\t\t\t\t$scope.spells = res;\r\n\t\t\t\t\t\t\t$scope.SaveRulesetSpell();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t//rulesetDataShareService.setLayoutRulesetItemInventoryData($scope.RulesetItems);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (data.data.StatusCode == 400) {\r\n\t\t\t\t\t\tconsole.log(\"!!!StatusCode 400: \", data);\r\n\t\t\t\t\t\tif (data.data.ShowToUser == true) {\r\n\t\t\t\t\t\t\ttoaster.pop('error', data.data.ErrorMessage);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t$scope.AddRulesetAbility = function () {\r\n\t\t\t\tvar rulesetitemcontent = rulesetService.GetRuleSetAbilitiesForAbilityInventory($state.params.characterId);\r\n\t\t\t\trulesetitemcontent.then(function (data) {\r\n\t\t\t\t\tif (data.data.StatusCode == 200) {\r\n\t\t\t\t\t\tconsole.log(\"StatusCode 200: \", data);\r\n\t\t\t\t\t\t$scope.RulesetAbilities = data.data.PayLoad.Abilities;\r\n\t\t\t\t\t\tvar rulesets = data.data.PayLoad;\r\n\t\t\t\t\t\tvar dlg = dialogs.create('/views/dialogs/AssociateRulesetAbilities.html', 'dialogAssociatedRulesetAbilities',\r\n\t\t\t\t\t\t\t{ scope: $scope.RulesetAbilities }\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tdlg.result.then(function (res) {\r\n\t\t\t\t\t\t\t$scope.abilities = res;\r\n\t\t\t\t\t\t\t$scope.SaveRulesetAbility();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t//rulesetDataShareService.setLayoutRulesetItemInventoryData($scope.RulesetItems);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (data.data.StatusCode == 400) {\r\n\t\t\t\t\t\tconsole.log(\"!!!StatusCode 400: \", data);\r\n\t\t\t\t\t\tif (data.data.ShowToUser == true) {\r\n\t\t\t\t\t\t\ttoaster.pop('error', data.data.ErrorMessage);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//$scope.AddRulesetSpells = function () {\r\n   //             $transition.router.stateService.go(\"profile.CharacterRulesetSpells\", { characterId: $state.params.characterId, action: 3, isNew: 1, contentType: 2 });\r\n\r\n   //         }\r\n            //$scope.AddRulesetAbilities = function () {\r\n            //    $transition.router.stateService.go(\"profile.CharacterRulesetAbilities\", { characterId: $state.params.characterId, action: 3, isNew: 1, contentType: 3 });\r\n\r\n            //}\r\n            $scope.CreateCharacterItem = function () {\r\n                $scope.CharacterInventoryMetaData = rulesetDataShareService.getLayoutItemInventoryMetaData();\r\n                $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n                $scope.buttontext = \"Create\";\r\n                $scope.tabName = \"Create Item\";\r\n                $scope.IsButtonDisabled = false;\r\n                $scope.isBtnShow = false;\r\n                var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogCreateInventoryItem',\r\n                    { scope: $scope.CharacterInventoryMetaData.CharacterItems.CharacterItemsProperties, tabName: $scope.tabName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow, NewInventory: $scope.CharacterInventoryMetaData, CharacterId: $scope.NewLayout.CharacterProfileId }\r\n                );\r\n\r\n                dlg.result.then(function (res) {\r\n\r\n\r\n                 \r\n\r\n                    if (res != \"cancel\") {\r\n                        //var CharacterItemsProperties = { \"CharacterItemsProperties\": res };\r\n                        $scope.NewItemInventory.CharacterItems.push(res);\r\n                        if ($scope.NewItemInventory.CharacterItems.length == 0) {\r\n                            $scope.ShowItems = true;\r\n                            $scope.ShowItem = false;\r\n                        }\r\n                        else {\r\n                            $scope.ShowItems = false;\r\n                            $scope.ShowItem = true;\r\n                        }\r\n                        $state.go('profile.ItemInventory');\r\n                        //rulesetDataShareService.set($scope.NewRuleSet.Items);\r\n                        //$scope.isitemsadded = true;\r\n                    }\r\n                });\r\n            }\r\n            $scope.CreateCharacterSpell = function () {\r\n                debugger;\r\n                $scope.CharacterInventoryMetaData = rulesetDataShareService.getLayoutSpellInventoryMetaData();\r\n                $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n                $scope.buttontext = \"Create\";\r\n                $scope.tabName = \"Create Spell\";\r\n                $scope.IsButtonDisabled = false;\r\n                $scope.isBtnShow = false;\r\n                var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogCreateInventorySpell',\r\n                    { scope: $scope.CharacterInventoryMetaData.CharacterSpells.CharacterSpellsProperties, tabName: $scope.tabName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow, NewInventory: $scope.CharacterInventoryMetaData, CharacterId: $scope.NewLayout.CharacterProfileId }\r\n                );\r\n\r\n                dlg.result.then(function (res) {\r\n\r\n\r\n                    if (res != \"cancel\") {\r\n                        //var CharacterSpellsProperties = { \"CharacterSpellsProperties\": res };\r\n                        $scope.NewSpellInventory.CharacterSpells.push(res);\r\n                        if ($scope.NewSpellInventory.CharacterSpells.length == 0) {\r\n                            $scope.ShowSpells = true;\r\n                            $scope.ShowSpell = false;\r\n                        }\r\n                        else {\r\n                            $scope.ShowSpells = false;\r\n                            $scope.ShowSpell = true;\r\n                        }\r\n                        $state.go('profile.SpellInventory');\r\n                       \r\n                    }\r\n                });\r\n\r\n            }\r\n            $scope.CreateCharacterAbility = function () {\r\n                $scope.CharacterInventoryMetaData = rulesetDataShareService.getLayoutAbilityInventoryMetaData();\r\n                $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n                $scope.buttontext = \"Create\";\r\n                $scope.tabName = \"Create Ability\";\r\n                $scope.IsButtonDisabled = false;\r\n                $scope.isBtnShow = false;\r\n                var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogCreateInventoryAbility',\r\n                    { scope: $scope.CharacterInventoryMetaData.CharacterAbilities.CharacterAbilitiesProperties, tabName: $scope.tabName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow, NewInventory: $scope.CharacterInventoryMetaData, CharacterId: $scope.NewLayout.CharacterProfileId }\r\n                );\r\n\r\n                dlg.result.then(function (res) {\r\n\r\n\r\n\r\n                    if (res != \"cancel\") {\r\n                        //var CharacterAbilitiesProperties = { \"CharacterAbilitiesProperties\": res };\r\n                        $scope.NewAbilityInventory.CharacterAbilities.push(res);\r\n                        if ($scope.NewAbilityInventory.CharacterAbilities.length == 0) {\r\n                            $scope.ShowAbilities = true;\r\n                            $scope.ShowAbility = false;\r\n                        }\r\n                        else {\r\n                            $scope.ShowAbilities = false;\r\n                            $scope.ShowAbility = true;\r\n                        }\r\n                        $state.go('profile.AbilityInventory');\r\n                        //rulesetDataShareService.set($scope.NewRuleSet.Items);\r\n                        //$scope.isitemsadded = true;\r\n                    }\r\n                });\r\n\r\n            }\r\n            var SelectedItems = [];\r\n            var SelectedSpells = [];\r\n            var SelectedAbilities = [];\r\n            $scope.addName = function (item, Num) {\r\n                if (Num == 1) {\r\n                    var idx = SelectedItems.indexOf(item);\r\n                    if (SelectedItems.indexOf(item) == -1) {\r\n                        console.log('Pushing: ', item)\r\n                        SelectedItems.push(item);\r\n                        //selectedNames.push(id);\r\n                    } else {\r\n                        SelectedItems.splice(idx, 1);\r\n                        console.log(SelectedItems);\r\n                    }\r\n\r\n                }\r\n                else if (Num == 2) {\r\n                    var idx = SelectedSpells.indexOf(item);\r\n                    if (SelectedSpells.indexOf(item) == -1) {\r\n                        console.log('Pushing: ', item)\r\n                        SelectedSpells.push(item);\r\n                        //selectedNames.push(id);\r\n                    } else {\r\n                        SelectedSpells.splice(idx, 1);\r\n                        console.log(SelectedSpells);\r\n                    }\r\n                }\r\n                else if (Num == 3) {\r\n                    var idx = SelectedAbilities.indexOf(item);\r\n                    if (SelectedAbilities.indexOf(item) == -1) {\r\n                        console.log('Pushing: ', item)\r\n                        SelectedAbilities.push(item);\r\n                        //selectedNames.push(id);\r\n                    } else {\r\n                        SelectedAbilities.splice(idx, 1);\r\n                        console.log(SelectedAbilities);\r\n                    }\r\n                }\r\n\r\n            };\r\n            $scope.checkSelected = function (item, Num) {\r\n                if (Num == 1) {\r\n                    var idx = SelectedItems.indexOf(item);\r\n                    return idx > -1;\r\n                }\r\n                else if (Num == 2) {\r\n                    var idx = SelectedSpells.indexOf(item);\r\n                    return idx > -1;\r\n                }\r\n                else if (Num == 3) {\r\n                    var idx = SelectedAbilities.indexOf(item);\r\n                    return idx > -1;\r\n                }\r\n\r\n            }\r\n            $scope.BackInventory = function () {\r\n                //$(\"#loading\").css(\"display\", \"block\");\r\n                $transition.router.stateService.go('profile.character.layout', { characterId: $state.params.characterId, action: 1 });\r\n            }\r\n            $scope.BackItem = function () {\r\n                $transition.router.stateService.go('profile.ItemInventory', { characterId: $state.params.characterId, 'action': '2', isNew: 0, contentType: 1 });\r\n            }\r\n            $scope.BackSpell = function () {\r\n                $transition.router.stateService.go('profile.SpellInventory', { characterId: $state.params.characterId, action: 2, contentType: 2 });\r\n            }\r\n            $scope.BackAbility = function () {\r\n                $transition.router.stateService.go('profile.AbilityInventory', { characterId: $state.params.characterId, action: 2, contentType: 3 });\r\n            }\r\n            $scope.BackItemProperties = function () {\r\n                $transition.router.stateService.go('profile.ItemInventory', { characterId: $state.params.characterId, action: 2, contentType: 1 });\r\n            }\r\n            $scope.BackSpellProperties = function () {\r\n                $transition.router.stateService.go('profile.SpellInventory', { characterId: $state.params.characterId, action: 2, contentType: 2 });\r\n            }\r\n            $scope.BackAbilityProperties = function () {\r\n                $transition.router.stateService.go('profile.AbilityInventory', { characterId: $state.params.characterId, action: 2, contentType: 3 });\r\n            }\r\n            $scope.SaveRulesetItem = function () {\r\n                $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n                $scope.NewItemInventory = rulesetDataShareService.getLayoutItemInventoryData();\r\n\t\t\t\tvar RulesetItems = [];\r\n\t\t\t\tSelectedItems = $scope.rulesets;\r\n                if (SelectedItems.length > 0) {\r\n                    for (var i = 0; i < SelectedItems.length; i++) {\r\n                        var CharacterItemsProperties = { \"CharacterItemId\": 0, \"CharacterProfileId\": $scope.NewLayout.CharacterProfileId, \"CharacterItemsProperties\": SelectedItems[i].ItemProperties };\r\n                    }\r\n                    var InventoryItems = [];\r\n                    InventoryItems.push(CharacterItemsProperties);\r\n                    var items = characterService.CreateCharacterInventoryItems(InventoryItems).then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            if (data.data.PayLoad.length != 0) {\r\n                                for (var i = 0; i < data.data.PayLoad.length; i++) {\r\n                                    $scope.NewItemInventory.CharacterItems.push(data.data.PayLoad[i]);\r\n                                }\r\n                            }\r\n                            $transition.router.stateService.go('profile.ItemInventory', { characterId: $state.params.characterId, 'action': '2', isNew: 0, contentType: 1 });\r\n                        }\r\n                        else if (data.data.ErrorMessage == 400) {\r\n                            alert($scope.data.ErrorMessage)\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    $transition.router.stateService.go('profile.ItemInventory', { characterId: $state.params.characterId, 'action': '2', isNew: 0, contentType: 1 });\r\n                }\r\n\r\n            }\r\n\t\t\t$scope.SaveRulesetSpell = function () {\r\n\t\t\t\tconsole.log(\"SaveRulesetSpell: \",$scope.spells);\r\n                $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n\t\t\t\t$scope.NewSpellInventory = rulesetDataShareService.getLayoutSpellInventoryData();\r\n\t\t\t\tSelectedSpells = $scope.spells;\r\n                if (SelectedSpells.length > 0) {\r\n                    for (var i = 0; i < SelectedSpells.length; i++) {\r\n                        var CharacterSpellsProperties = { \"CharacterSpellId\": 0, \"CharacterProfileId\": $scope.NewLayout.CharacterProfileId, \"CharacterSpellsProperties\": SelectedSpells[i].SpellProperties };\r\n                    }\r\n                    var InventorySpells = [];\r\n                    InventorySpells.push(CharacterSpellsProperties);\r\n                    var spells = characterService.CreateCharacterInventorySpells(InventorySpells).then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            if (data.data.PayLoad.length != 0) {\r\n                                for (var i = 0; i < data.data.PayLoad.length; i++) {\r\n                                    $scope.NewSpellInventory.CharacterSpells.push(data.data.PayLoad[i]);\r\n                                }\r\n                            }\r\n                            $transition.router.stateService.go('profile.SpellInventory', { characterId: $state.params.characterId, action: 2, contentType: 2 });\r\n                        }\r\n                        else if (data.data.ErrorMessage == 400) {\r\n                            alert($scope.data.ErrorMessage)\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    $transition.router.stateService.go('profile.SpellInventory', { characterId: $state.params.characterId, action: 2, contentType: 2 });\r\n                }\r\n\r\n            }\r\n\t\t\t$scope.SaveRulesetAbility = function () {\r\n\t\t\t\tconsole.log(\"SaveRulesetAbility: \",$scope.abilities);\r\n                $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n\t\t\t\t$scope.NewAbilityInventory = rulesetDataShareService.getLayoutAbilityInventoryData();\r\n\t\t\t\tSelectedAbilities = $scope.abilities;\r\n                if (SelectedAbilities.length > 0) {\r\n                    for (var i = 0; i < SelectedAbilities.length; i++) {\r\n                        var CharacterAbilitiesProperties = { \"CharacterAbilityId\": 0, \"CharacterProfileId\": $scope.NewLayout.CharacterProfileId, \"CharacterAbilitiesProperties\": SelectedAbilities[i].AbilityProperties };\r\n                    }\r\n                    var InventoryAbility = [];\r\n                    InventoryAbility.push(CharacterAbilitiesProperties);\r\n                    var abilities = characterService.CreateCharacterInventoryAbility(InventoryAbility).then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            if (data.data.PayLoad.length != 0) {\r\n                                for (var i = 0; i < data.data.PayLoad.length; i++) {\r\n                                    $scope.NewAbilityInventory.CharacterAbilities.push(data.data.PayLoad[i]);\r\n                                }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconsole.log(\"$scope.NewAbilityInventory: \", $scope.NewAbilityInventory);\r\n                            $transition.router.stateService.go('profile.AbilityInventory', { characterId: $state.params.characterId, action: 2, contentType: 3 });\r\n                        }\r\n                        else if (data.data.ErrorMessage == 400) {\r\n                            alert(data.data.ErrorMessage)\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    $transition.router.stateService.go('profile.AbilityInventory', { characterId: $state.params.characterId, action: 2, contentType: 3 });\r\n                }\r\n\r\n            }\r\n            //For Editing Inventory Items\r\n            $scope.EditItem = function (item, count, num) {\r\n                debugger;\r\n                if (num == 1) {\r\n                    $scope.pageName = \"Editing Item\";\r\n                    $scope.buttontext = \"Update\";\r\n                    $scope.IsButtonDisabled = true;\r\n                    $scope.isBtnShow = true;\r\n                    $scope.OperationTypeMode = \"Edit\";\r\n                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                        { scope: item.CharacterItemsProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow, Fullscope: item, AssocSpells: item.AssociatedSpells, AssocAbilities: item.AssociatedAbilities, OperationTypeMode: $scope.OperationTypeMode, CharacterId: item.CharacterProfileId}\r\n\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            //var CharacterItemsProperties = { \"CharacterItemsProperties\": res };\r\n                            $scope.NewItemInventory.CharacterItems[count] = res;\r\n                           \r\n                        }\r\n                    });\r\n                }\r\n                else if (num == 2) {\r\n                    $scope.pageName = \"Editing Spell\";\r\n                    $scope.buttontext = \"Update\";\r\n                    $scope.isBtnShow = true;\r\n                    $scope.OperationTypeMode = \"Edit\";\r\n                    //var indexcount = count - 1;\r\n                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                        { scope: item.CharacterSpellsProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, FullSpellscope: item, OperationTypeMode: $scope.OperationTypeMode}\r\n\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            //var CharacterSpellsProperties = { \"CharacterSpellsProperties\": res };\r\n                            $scope.NewSpellInventory.CharacterSpells[count] = res;\r\n                          \r\n                        }\r\n                    });\r\n                }\r\n                else if (num == 3) {\r\n                    $scope.pageName = \"Editing Ability\";\r\n                    $scope.buttontext = \"Update\";\r\n                    $scope.isBtnShow = true;\r\n                    $scope.OperationTypeMode = \"Edit\";\r\n                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                        { scope: item.CharacterAbilitiesProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, FullAbilityScope: item, OperationTypeMode: $scope.OperationTypeMode }\r\n\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            //var CharacterAbilitiesProperties = { \"CharacterAbilitiesProperties\": res };\r\n                            $scope.NewAbilityInventory.CharacterAbilities[count] = res;\r\n                          \r\n                        }\r\n\r\n                    });\r\n                }\r\n\r\n\r\n            };\r\n            $scope.CopyItem = function (item, index, num) {\r\n\r\n                debugger;\r\n                if (num == 1) {\r\n                    $scope.NewItemInventory = rulesetDataShareService.getLayoutItemInventoryData();\r\n                    $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n                    $scope.pageName = \"Copying Item\";\r\n                    $scope.buttontext = \"Copy\";\r\n                    $scope.IsButtonDisabled = true;\r\n                    $scope.isBtnShow = true;\r\n                    $scope.OperationTypeMode = \"Copy\";\r\n                    $scope.SelectAssociatedSpells = true;\r\n                    $scope.SelectAssociatedAbilities = true;\r\n                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                        { scope: item.CharacterItemsProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow, Fullscope: item, AssocSpells: item.AssociatedSpells, AssocAbilities: item.AssociatedAbilities, OperationTypeMode: $scope.OperationTypeMode, SelectAssociatedSpells: $scope.SelectAssociatedSpells, SelectAssociatedAbilities: $scope.SelectAssociatedAbilities }\r\n\r\n                    );\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            //var CharacterItemsProperties = { \"CharacterItemsProperties\": res };\r\n                            $scope.NewItemInventory.CharacterItems.push(res);\r\n                        }\r\n                    });\r\n                }\r\n                else if (num == 2) {\r\n                    $scope.NewSpellInventory = rulesetDataShareService.getLayoutSpellInventoryData();\r\n                    $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n                    $scope.pageName = \"Copying Spell\";\r\n                    $scope.buttontext = \"Copy\";\r\n                    $scope.isBtnShow = true;\r\n                    $scope.OperationTypeMode = \"Copy\";\r\n                    $scope.SelectAssociatedSpells = true;\r\n                    $scope.SelectAssociatedAbilities = true;\r\n                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                        { scope: item.CharacterSpellsProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, FullSpellscope: item, SelectAssociatedSpells: $scope.SelectAssociatedSpells, SelectAssociatedAbilities: $scope.SelectAssociatedAbilities, OperationTypeMode: $scope.OperationTypeMode}\r\n\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            //var CharacterSpellsProperties = { \"CharacterSpellsProperties\": res };\r\n                            $scope.NewSpellInventory.CharacterSpells.push(res);\r\n\r\n                        }\r\n\r\n                    });\r\n                }\r\n                else if (num == 3) {\r\n                    $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n                    $scope.NewAbilityInventory = rulesetDataShareService.getLayoutAbilityInventoryData();\r\n                    $scope.pageName = \"Copying Ability\";\r\n                    $scope.buttontext = \"Copy\";\r\n                    $scope.isBtnShow = true;\r\n                    $scope.OperationTypeMode = \"Copy\";\r\n                    $scope.SelectAssociatedSpells = true;\r\n                    $scope.SelectAssociatedAbilities = true;\r\n                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                        { scope: item.CharacterAbilitiesProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, FullAbilityScope: item, SelectAssociatedSpells: $scope.SelectAssociatedSpells, SelectAssociatedAbilities: $scope.SelectAssociatedAbilities, OperationTypeMode: $scope.OperationTypeMode}\r\n\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            //var CharacterAbilitiesProperties = { \"CharacterAbilitiesProperties\": res };\r\n                            $scope.NewAbilityInventory.CharacterAbilities.push(res);\r\n                        }\r\n\r\n\r\n                    });\r\n                }\r\n\r\n            };\r\n            $scope.Removeitem = function (item, index, Num) {\r\n                if (Num == 1) {\r\n                    $scope.NewItemInventory = rulesetDataShareService.getLayoutItemInventoryData();\r\n                    $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n                    var dlg = dialogs.confirm(\r\n                        'Confirm Delete',\r\n                        'Are you sure you want to delete this Item, \"' + item.CharacterItemsProperties[0].Value.Text.value + '\", and all associated pages, tabs, and tiles?',\r\n                        {}\r\n                    );\r\n\r\n                    dlg.result.then(\r\n                        function (res) {\r\n                            if (res == \"yes\") {\r\n                                var deleteitem = characterService.DeleteCharacterContent(item.CharacterItemsProperties[0].CharacterItemId).then(function (data) {\r\n                                    if (data.data.StatusCode == 200) {\r\n                                      \r\n                                        $scope.NewItemInventory.CharacterItems.splice(index, 1);\r\n                                     \r\n                                    }\r\n\r\n                                    //$uibModalInstance.close($scope.Properties);\r\n                                })\r\n                            }\r\n\r\n                        })\r\n\r\n                }\r\n                else if (Num == 2) {\r\n                    $scope.NewSpellInventory = rulesetDataShareService.getLayoutSpellInventoryData();\r\n                    $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n                    var dlg = dialogs.confirm(\r\n                        'Confirm Delete',\r\n                        'Are you sure you want to delete this Spell, \"' + item.CharacterSpellsProperties[0].Value.Text.value + '\",?',\r\n                        {}\r\n                    );\r\n\r\n                    dlg.result.then(\r\n                        function (res) {\r\n                            if (res == \"yes\") {\r\n                                var deleteitem = characterService.DeleteCharacterSpellContent(item.CharacterSpellsProperties[0].CharacterSpellId).then(function (data) {\r\n                                    if (data.data.StatusCode == 200) {\r\n                                      \r\n                                        $scope.NewSpellInventory.CharacterSpells.splice(index, 1);\r\n                                       \r\n                                    }\r\n\r\n                                    //$uibModalInstance.close($scope.Properties);\r\n                                })\r\n                            }\r\n\r\n                        })\r\n                }\r\n                else if (Num == 3) {\r\n                    $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n                    $scope.NewAbilityInventory = rulesetDataShareService.getLayoutAbilityInventoryData();\r\n                    var dlg = dialogs.confirm(\r\n                        'Confirm Delete',\r\n                        'Are you sure you want to delete this Ability, \"' + item.CharacterAbilitiesProperties[0].Value.Text.value + '\",?',\r\n                        {}\r\n                    );\r\n\r\n                    dlg.result.then(\r\n                        function (res) {\r\n                            if (res == \"yes\") {\r\n                                var deleteability = characterService.DeleteCharacterAbilityContent(item.CharacterAbilitiesProperties[0].CharacterAbilityId).then(function (data) {\r\n                                    if (data.data.StatusCode == 200) {\r\n                                     \r\n\r\n                                        $scope.NewAbilityInventory.CharacterAbilities.splice(index, 1);\r\n                                       \r\n                                    }\r\n\r\n                                    //$uibModalInstance.close($scope.Properties);\r\n                                })\r\n                            }\r\n\r\n                        })\r\n                }\r\n\r\n                //$uibModalInstance.close($scope.Properties);\r\n            }\r\n            $scope.ShowAllItemProperties = function (item, count) {\r\n               \r\n                $state.go(\"profile.CharacterItemsDetails\", { characterId: $state.params.characterId, action: 4, contentType: 1, index: count });\r\n            }\r\n            $scope.ShowAllSpellProperties = function (item, count) {\r\n               \r\n                $state.go(\"profile.CharacterSpellDetails\", { characterId: $state.params.characterId, action: 4, contentType: 2, index: count });\r\n            }\r\n            $scope.ShowAllAbilityProperties = function (item, count) {\r\n                //$scope.ItemProperties = item.CharacterItemsProperties;\r\n                rulesetDataShareService.setItemProperties(item);\r\n                $state.go(\"profile.CharacterAbilityDetails\", { characterId: $state.params.characterId, action: 4, contentType: 3, index: count });\r\n            }\r\n            //For Editing Inventory Itemzproperties\r\n            $scope.EditItems = function (item, num) {\r\n                if (num == 1) {\r\n                    $scope.pageName = \"Editing Item\";\r\n                    $scope.buttontext = \"Update\";\r\n                    $scope.IsButtonDisabled = true;\r\n                    $scope.isBtnShow = true;\r\n                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                        { scope: item.CharacterItemsProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow, Fullscope: item }\r\n\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            //var CharacterItemsProperties = { \"CharacterItemsProperties\": res };\r\n                            $scope.NewItemInventory.CharacterItems[item.Index] = res\r\n                           \r\n                            $transition.router.stateService.go('profile.ItemInventory', { characterId: $state.params.characterId, action: 2, contentType: 1 });\r\n                        }\r\n                    });\r\n                }\r\n                else if (num == 2) {\r\n                    $scope.pageName = \"Editing Spell\";\r\n                    $scope.buttontext = \"Update\";\r\n                    $scope.isBtnShow = true;\r\n                    //var indexcount = count - 1;\r\n                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                        { scope: item.CharacterSpellsProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, FullSpellscope: item }\r\n\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            //var CharacterSpellsProperties = { \"CharacterSpellsProperties\": res };\r\n                            $scope.NewSpellInventory.CharacterSpells[item.Index] = res;\r\n                            $transition.router.stateService.go('profile.SpellInventory', { characterId: $state.params.characterId, action: 2, contentType: 2 });\r\n                          \r\n                        }\r\n                    });\r\n                }\r\n                else if (num == 3) {\r\n                    $scope.pageName = \"Editing Ability\";\r\n                    $scope.buttontext = \"Update\";\r\n                    $scope.isBtnShow = true;\r\n                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                        { scope: item.CharacterAbilitiesProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, FullAbilityScope: item }\r\n\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            //var CharacterAbilitiesProperties = { \"CharacterAbilitiesProperties\": res };\r\n                            $scope.NewAbilityInventory.CharacterAbilities[item.Index] = res;\r\n                            $transition.router.stateService.go('profile.AbilityInventory', { characterId: $state.params.characterId, action: 2, contentType: 3 });\r\n                           \r\n                        }\r\n\r\n                    });\r\n                }\r\n\r\n\r\n            };\r\n            $scope.Removeitems = function (item, Num) {\r\n                if (Num == 1) {\r\n                    $scope.NewItemInventory = rulesetDataShareService.getLayoutItemInventoryData();\r\n                    $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n                    var dlg = dialogs.confirm(\r\n                        'Confirm Delete',\r\n                        'Are you sure you want to delete this Item, \"' + item.CharacterItemsProperties[0].Value.Text.value + '\", and all associated pages, tabs, and tiles?',\r\n                        {}\r\n                    );\r\n\r\n                    dlg.result.then(\r\n                        function (res) {\r\n                            if (res == \"yes\") {\r\n                                var deleteitem = characterService.DeleteCharacterContent(item.CharacterItemsProperties[0].CharacterItemId).then(function (data) {\r\n                                    if (data.data.StatusCode == 200) {\r\n                                       \r\n                                        $scope.NewItemInventory.CharacterItems.splice(item.Index, 1);\r\n                                        $transition.router.stateService.go('profile.ItemInventory', { characterId: $state.params.characterId, action: 2, contentType: 1 });\r\n                                    }\r\n\r\n\r\n                                })\r\n                            }\r\n\r\n                        })\r\n\r\n                }\r\n                else if (Num == 2) {\r\n                    $scope.NewSpellInventory = rulesetDataShareService.getLayoutSpellInventoryData();\r\n                    $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n                    var dlg = dialogs.confirm(\r\n                        'Confirm Delete',\r\n                        'Are you sure you want to delete this Spell, \"' + item.CharacterSpellsProperties[0].Value.Text.value + '\",?',\r\n                        {}\r\n                    );\r\n\r\n                    dlg.result.then(\r\n                        function (res) {\r\n                            if (res == \"yes\") {\r\n                                var deleteitem = characterService.DeleteCharacterSpellContent(item.CharacterSpellsProperties[0].CharacterSpellId).then(function (data) {\r\n                                    if (data.data.StatusCode == 200) {\r\n                                     \r\n                                        $scope.NewSpellInventory.CharacterSpells.splice(item.Index, 1);\r\n                                        $transition.router.stateService.go('profile.SpellInventory', { characterId: $state.params.characterId, action: 2, contentType: 2 });\r\n\r\n                                    }\r\n\r\n\r\n                                })\r\n                            }\r\n\r\n                        })\r\n                }\r\n                else if (Num == 3) {\r\n                   \r\n                    $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n                    $scope.NewAbilityInventory = rulesetDataShareService.getLayoutAbilityInventoryData();\r\n                    var dlg = dialogs.confirm(\r\n                        'Confirm Delete',\r\n                        'Are you sure you want to delete this Ability, \"' + item.CharacterAbilitiesProperties[0].Value.Text.value + '\",?',\r\n                        {}\r\n                    );\r\n\r\n                    dlg.result.then(\r\n                        function (res) {\r\n                            if (res == \"yes\") {\r\n                                var deleteitem = characterService.DeleteCharacterAbilityContent(item.CharacterAbilitiesProperties[0].CharacterAbilityId).then(function (data) {\r\n                                    if (data.data.StatusCode == 200) {\r\n                                       \r\n                                        $scope.NewAbilityInventory.CharacterAbilities.splice(item.Index, 1);\r\n                                        $transition.router.stateService.go('profile.AbilityInventory', { characterId: $state.params.characterId, action: 2, contentType: 3 });\r\n                                       \r\n                                       \r\n                                    }\r\n\r\n                                    //$uibModalInstance.close($scope.Properties);\r\n                                })\r\n                            }\r\n\r\n                        })\r\n                }\r\n\r\n                //$uibModalInstance.close($scope.Properties);\r\n            }\r\n            $scope.CopyItems = function (item, num) {\r\n                if (num == 1) {\r\n                    $scope.NewItemInventory = rulesetDataShareService.getLayoutItemInventoryData();\r\n                    $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n                    $scope.pageName = \"Copying Item\";\r\n                    $scope.buttontext = \"Copy\";\r\n                    $scope.IsButtonDisabled = true;\r\n                    $scope.isBtnShow = true;\r\n                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                        { scope: item.CharacterItemsProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow, Fullscope: item }\r\n\r\n                    );\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            //var CharacterItemsProperties = { \"CharacterItemsProperties\": res };\r\n                            $scope.NewItemInventory.CharacterItems.push(res);\r\n                            $transition.router.stateService.go('profile.ItemInventory', { characterId: $state.params.characterId, action: 2, contentType: 1 });\r\n                        }\r\n                    });\r\n                }\r\n                else if (num == 2) {\r\n                    $scope.NewSpellInventory = rulesetDataShareService.getLayoutSpellInventoryData();\r\n                    $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n                    $scope.pageName = \"Copying Spell\";\r\n                    $scope.buttontext = \"Copy\";\r\n                    $scope.isBtnShow = true;\r\n                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                        { scope: item.CharacterSpellsProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, FullSpellscope: item }\r\n\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            //var CharacterSpellsProperties = { \"CharacterSpellsProperties\": res };\r\n                            $scope.NewSpellInventory.CharacterSpells.push(res);\r\n                            $transition.router.stateService.go('profile.SpellInventory', { characterId: $state.params.characterId, action: 2, contentType: 2 });\r\n                        }\r\n\r\n                    });\r\n                }\r\n                else if (num == 3) {\r\n                    $scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n                    $scope.NewAbilityInventory = rulesetDataShareService.getLayoutAbilityInventoryData();\r\n                    $scope.pageName = \"Copying Ability\";\r\n                    $scope.buttontext = \"Copy\";\r\n                    $scope.isBtnShow = true;\r\n                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogEditCharacterItem',\r\n                        { scope: item.CharacterAbilitiesProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, FullAbilityScope: item }\r\n\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            //var CharacterAbilitiesProperties = { \"CharacterAbilitiesProperties\": res };\r\n                            $scope.NewAbilityInventory.CharacterAbilities.push(res);\r\n                            $transition.router.stateService.go('profile.AbilityInventory', { characterId: $state.params.characterId, action: 2, contentType: 3 });\r\n                        }\r\n\r\n\r\n                    });\r\n                }\r\n\r\n            };\r\n            $scope.onloadFun = function ()\r\n            {\r\n                $(\"#loading\").fadeOut(\"slow\");\r\n            }\r\n            $scope.getTileClass = function (tile) {\r\n\r\n                var arr = [];\r\n\r\n                if ($scope.state.tilesEditing)\r\n                    arr.push(tile.__randomShake);\r\n\r\n                if (tile.id === $scope.state.tileDeleteId)\r\n                    arr.push('over-delete');\r\n\r\n                return arr.join(' ');\r\n            };\r\n            $scope.getTileClass = function (tile) {\r\n\r\n                var arr = [];\r\n\r\n                if ($scope.state.tilesEditing)\r\n                    arr.push(tile.__randomShake);\r\n\r\n                if (tile.id === $scope.state.tileDeleteId)\r\n                    arr.push('over-delete');\r\n\r\n                return arr.join(' ');\r\n            };\r\n            $scope.stackOptions = {\r\n                height: 150,\r\n                width: 400,\r\n                cellHeight: 30,\r\n                minWidth: 1,\r\n\r\n                pixelWidth: 35,\r\n                verticalMargin: 5,\r\n                alwaysShowResizeHandle: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),\r\n\r\n                resizable: {\r\n                    handles: 'e, se, s, sw, w'\r\n                },\r\n                draggable: {\r\n                    refreshPositions: true,\r\n                    handle: '.grid-stack-item-content'\r\n                }\r\n            };\r\n\r\n            $scope.onDragStart = function (event, ui) {\r\n                $timeout(function () {\r\n                    $scope.state.tileDragging = true;\r\n                });\r\n            };\r\n\r\n            $scope.onDragStop = function (event, ui) {\r\n                $timeout(function () {\r\n                    $scope.state.tileDragging = false;\r\n                });\r\n            };\r\n\r\n            $scope.state = {\r\n                tilesEditing: false,\r\n                tileDragging: false,\r\n                tileDeleteId: null\r\n            };\r\n\r\n            \r\n            $scope.onChange = function (event, items) {\r\n                $log.log(\"onChange event: \" + event + \" items:\" + items);\r\n            };\r\n\r\n            $scope.onResizeStop = function (event, ui) {\r\n                $log.log(\"onResizeStop event: \" + event + \" ui:\" + ui);\r\n            };\r\n\r\n            $scope.onItemAdded = function (item) {\r\n                $log.log(\"onItemAdded item: \" + item);\r\n            };\r\n\r\n            $scope.onItemRemoved = function (item) {\r\n                $log.log(\"onItemRemoved item: \" + item);\r\n            };\r\n            $scope.onDeleteDropCharacterTiles = function (event, ui) {\r\n                var tile = GridStackUI.Utils.getNodeData(ui.helper);\r\n                var ClientObjectTileId = ui.helper[0].dataset.gsId;\r\n\r\n                var deletedTileIndex = -1;\r\n                if ($scope.CharacterContent.CharacterItemsProperties != undefined && $scope.CharacterContent.CharacterItemsProperties != null && $scope.CharacterContent.CharacterItemsProperties != \"\") {\r\n                    for (var i = 0; i < $scope.CharacterContent.CharacterItemsProperties.length; i++) {\r\n                        var ItemPropertyLst = $scope.CharacterContent.CharacterItemsProperties[i];\r\n                        if (ItemPropertyLst.CharacterItemId == 0 || ItemPropertyLst.CharacterItemId == undefined || ItemPropertyLst.CharacterItemId == \"\") {\r\n                            if (ClientObjectTileId == $scope.CharacterContent.CharacterItemsProperties[i].tile.ClientObjectId) {\r\n                                deletedTileIndex = i;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if ($scope.CharacterContent.CharacterItemsProperties[deletedTileIndex].tile.TileId == 0) {\r\n                        $scope.CharacterContent.CharacterItemsProperties.splice(deletedTileIndex, 1);\r\n                        toaster.pop('success', \"Tile deleted Successfully.\");\r\n                    }\r\n                    else {\r\n                        tileService.deleteTile($scope.CharacterContent.CharacterItemsProperties[deletedTileIndex].tile).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                $scope.CharacterContent.CharacterItemsProperties.splice(deletedTileIndex, 1);\r\n                                toaster.pop('success', \"Tile deleted Successfully.\");\r\n                            }\r\n                            else if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                     toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                else if ($scope.CharacterContent.CharacterSpellsProperties != undefined && $scope.CharacterContent.CharacterSpellsProperties != null && $scope.CharacterContent.CharacterSpellsProperties != \"\") {\r\n                    for (var i = 0; i < $scope.CharacterContent.CharacterSpellsProperties.length; i++) {\r\n                        var spellPropertyLst = $scope.CharacterContent.CharacterSpellsProperties[i];\r\n                        if (spellPropertyLst.CharacterSpellId == 0 || spellPropertyLst.CharacterSpellId == undefined || spellPropertyLst.CharacterSpellId == \"\") {\r\n                            if (ClientObjectTileId == $scope.CharacterContent.CharacterSpellsProperties[i].tile.ClientObjectId) {\r\n                                deletedTileIndex = i;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if ($scope.CharacterContent.CharacterSpellsProperties[deletedTileIndex].tile.TileId == 0) {\r\n                        $scope.CharacterContent.CharacterSpellsProperties.splice(deletedTileIndex, 1);\r\n                        toaster.pop('success', \"Tile deleted Successfully.\");\r\n                    }\r\n                    else {\r\n                        tileService.deleteTile($scope.CharacterContent.CharacterSpellsProperties[deletedTileIndex].tile).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                $scope.CharacterContent.CharacterSpellsProperties.splice(deletedTileIndex, 1);\r\n                                toaster.pop('success', \"Tile deleted Successfully.\");\r\n                            }\r\n                            else if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                     toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                else if ($scope.CharacterContent.CharacterAbilitiesProperties != undefined && $scope.CharacterContent.CharacterAbilitiesProperties != null && $scope.CharacterContent.CharacterAbilitiesProperties != \"\") {\r\n                    for (var i = 0; i < $scope.CharacterContent.CharacterAbilitiesProperties.length; i++) {\r\n                        var abilityPropertyLst = $scope.CharacterContent.CharacterAbilitiesProperties[i];\r\n                        if (abilityPropertyLst.CharacterAbilityId == 0 || abilityPropertyLst.CharacterAbilityId == undefined || abilityPropertyLst.CharacterAbilityId == \"\") {\r\n                            if (ClientObjectTileId == $scope.CharacterContent.CharacterAbilitiesProperties[i].tile.ClientObjectId) {\r\n                                deletedTileIndex = i;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if ($scope.CharacterContent.CharacterAbilitiesProperties[deletedTileIndex].tile.TileId == 0) {\r\n                        $scope.CharacterContent.CharacterAbilitiesProperties.splice(deletedTileIndex, 1);\r\n                        toaster.pop('success', \"Tile deleted Successfully.\");\r\n                    }\r\n                    else {\r\n                        tileService.deleteTile($scope.CharacterContent.CharacterAbilitiesProperties[deletedTileIndex].tile).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                $scope.CharacterContent.CharacterAbilitiesProperties.splice(deletedTileIndex, 1);\r\n                                toaster.pop('success', \"Tile deleted Successfully.\");\r\n                            }\r\n                            else if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                     toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            $scope.onDeleteOverCharacterItem = function (event, ui) {\r\n                var node = GridStackUI.Utils.getNodeData(ui.helper);\r\n                if (node) {\r\n                    $timeout(function () {\r\n                        $scope.state.tileDeleteId = node.id;\r\n                    });\r\n                }\r\n            };\r\n\r\n            $scope.onDeleteOutCharacterItem = function (event) {\r\n                if ($scope.state.tileDeleteId) {\r\n                    $timeout(function () {\r\n                        $scope.state.tileDeleteId = null;\r\n                    });\r\n                }\r\n            };\r\n            $scope.tileEdit = function () {\r\n                $scope.tilePickerApi.beginSelect(function (tile) {\r\n\r\n                });\r\n            }\r\n            function InventoryMetaData() {\r\n                var metadata = characterService.GetNewCharacterInventory().then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        $scope.NewInventory = data.data.PayLoad;\r\n                        rulesetDataShareService.setInventory($scope.NewInventory);\r\n                    }\r\n                    else if (data.data.StatusCode == 400) {\r\n                        alert(data.data.ErrorMessage)\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n    ]);\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-controllers');\r\n\r\n    app.controller('layoutsPageController', ['$scope', '$q', '$window', '$timeout', '$transition', 'dialogs', 'toaster', 'navService', 'dataService',\r\n        function ($scope, $q, $window, $timeout, $transition, dialogs, toaster, navService, dataService) {\r\n\r\n            $scope.dataService = dataService;\r\n            $scope.navService = navService;\r\n\r\n            $scope.tilePickerApi = {\r\n                messageId: null,\r\n                beforeSelect: function () {\r\n                    toaster.clear('*');\r\n                    $scope.tilePickerApi.messageId = toaster.pop({\r\n                        type: 'note',\r\n                        body: 'Click a layout to ' + $scope.tilePickerApi.action + ' it.',\r\n                        timeout: 0,\r\n                        showCloseButton: false,\r\n                        tapToDismiss: false\r\n                    });\r\n                },\r\n                onClose: function () {\r\n                    if ($scope.tilePickerApi.messageId)\r\n                        toaster.clear($scope.tilePickerApi.messageId);\r\n                }\r\n            };\r\n\r\n            $scope.menuHamburger = {\r\n                opened: false,\r\n                menus: navService.getCommonHamburger([\r\n                    {\r\n                        name: 'Layouts',\r\n                        header: true\r\n                    },\r\n                    {\r\n                        id: 'view.new',\r\n                        name: 'New Layout',\r\n                        icon: 'fa-fw fa-file-o',\r\n                        action: function () {\r\n                            layoutAdd();\r\n                        }\r\n                    },\r\n                    {\r\n                        id: 'view.rename',\r\n                        name: 'Rename Layout',\r\n                        icon: 'fa-fw fa-i-cursor',\r\n                        action: function () {\r\n                            layoutRename();\r\n                        }\r\n                    },\r\n                    {\r\n                        id: 'view.delete',\r\n                        name: 'Delete Layout',\r\n                        icon: 'fa-fw fa-trash-o',\r\n                        action: function () {\r\n                            layoutDelete();\r\n                        }\r\n                    },\r\n                    {\r\n                        id: 'view.copy',\r\n                        name: 'Copy Layout',\r\n                        icon: 'fa-fw fa-files-o',\r\n                        action: function () {\r\n                            layoutCopy();\r\n                        }\r\n                    }\r\n                ]),\r\n                menuClick: function (item) {\r\n                    $scope.menuHamburger.opened = false;\r\n                }\r\n            };\r\n\r\n            $scope.menuCharacter = {\r\n                opened: false,\r\n                menus: navService.getCommonCharacterNav([]),\r\n                menuClick: function (item) {\r\n                    $scope.menuCharacter.opened = false;\r\n                }\r\n            };\r\n\r\n            navService.registerNav('hamburger', $scope.menuHamburger);\r\n            navService.registerNav('character', $scope.menuCharacter);\r\n\r\n            var layoutAdd = function () {\r\n\r\n                var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n                    { name: '' },\r\n                    { size: 'sm' }\r\n                );\r\n\r\n                dlg.result.then(function (name) {\r\n\r\n                    var layout = dataService.createLayout({\r\n                        name: name\r\n                    });\r\n\r\n                    dataService.character.layouts.push(layout);\r\n                    dataService.saveChanges()\r\n                });\r\n\r\n            };\r\n\r\n            var layoutRename = function () {\r\n\r\n                $scope.tilePickerApi.action = 'rename';\r\n                $scope.tilePickerApi.beginSelect(function (item) {\r\n\r\n                    var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n                        { name: item.name },\r\n                        { size: 'sm' }\r\n                    );\r\n\r\n                    dlg.result.then(function (name) {\r\n                        item.name = name;\r\n                        dataService.saveChanges()\r\n                    });\r\n                });\r\n            };\r\n\r\n            var layoutDelete = function () {\r\n\r\n                $scope.tilePickerApi.action = 'delete';\r\n                $scope.tilePickerApi.beginSelect(function (item) {\r\n\r\n                    var dlg = dialogs.confirm(\r\n                        'Confirm Delete',\r\n                        'Are you sure you want to delete the layout, \"' + item.name + '\", and all associated pages, tabs, and tiles?',\r\n                        { size: 'sm' }\r\n                    );\r\n\r\n                    dlg.result.then(\r\n                        function (btn) {\r\n                            dataService.deleteLayout(item);\r\n                            dataService.saveChanges();\r\n                        }\r\n                    );\r\n                });\r\n            };\r\n\r\n            var layoutCopy = function () {\r\n\r\n                $scope.tilePickerApi.action = 'copy';\r\n                $scope.tilePickerApi.beginSelect(function (item) {\r\n\r\n                    var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n                        { name: item.name },\r\n                        { size: 'sm' }\r\n                    );\r\n\r\n                    dlg.result.then(function (name) {\r\n\r\n                        alert('TODO');\r\n\r\n                        // We have to ensure the layout is completely loaded before\r\n                        // we can copy it.\r\n\r\n                        //var layout = dataService.copyEntity(dataService.layout);\r\n                        //layout.name = name;\r\n\r\n                        //dataService.saveChanges();\r\n                    });\r\n\r\n                });\r\n            };\r\n\r\n            $scope.selectLayout = function (layout) {\r\n                if ($scope.tilePickerApi.selecting)\r\n                    $scope.tilePickerApi.endSelect(layout);\r\n                else\r\n                    $transition.router.stateService.go('profile.character.layout', { characterId: $transition.params().characterId, layoutId: layout.id });\r\n            };\r\n\r\n            $scope.newLayout = function () {\r\n                if ($scope.tilePickerApi.selecting)\r\n                    return;\r\n                layoutAdd();\r\n            };\r\n\r\n            var createToastId = null;\r\n\r\n            $scope.$watch('dataService.character.layouts.length', function (count) {\r\n                if (count === 0) {\r\n                    createToastId = toaster.pop({\r\n                        type: 'note',\r\n                        body: 'Click the plus button to create a new layout.',\r\n                        timeout: 0,\r\n                        showCloseButton: false,\r\n                        tapToDismiss: true\r\n                    });\r\n                }\r\n                else {\r\n                    toaster.clear(createToastId);\r\n                }\r\n            });\r\n\r\n            (function () {\r\n                $scope.navService.updateBody(true, false);\r\n            })();\r\n        }\r\n    ]);\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-controllers');\r\n\r\n    app.controller('linksPageController', ['$scope', '$transition', '$q', '$timeout', 'dialogs', 'toaster', 'navService', 'tileService',\r\n        function ($scope, $transition, $q, $timeout, dialogs, toaster, navService, tileService) {\r\n\r\n            $scope.data = null;\r\n\r\n            $scope.menuHamburger = {\r\n                opened: false,\r\n                menus: navService.getCommonHamburger([]),\r\n                menuClick: function (item) {\r\n                    $scope.menuCharacter.opened = false;\r\n                }\r\n            };\r\n\r\n            $scope.menuCharacter = {\r\n                opened: false,\r\n                menus: navService.getCommonCharacterNav([]),\r\n                menuClick: function (item) {\r\n                    $scope.menuCharacter.opened = false;\r\n                }\r\n            };\r\n\r\n            navService.registerNav('hamburger', $scope.menuHamburger);\r\n            navService.registerNav('character', $scope.menuCharacter);\r\n\r\n            (function () {\r\n                debugger;\r\n                navService.updateBody(true, false);\r\n                debugger;\r\n                var characterId = $transition.params().characterId;\r\n                var result = tileService.GetAllTileTypesRelatedCharacter(characterId);\r\n                result.then(function (data) {\r\n                    debugger;\r\n                    if (data.data.StatusCode == 200) {\r\n                        debugger;\r\n                        $scope.AllTilesData = data.data.PayLoad;\r\n                        $scope.links = data.data.PayLoad.Links;\r\n                        $scope.data = {\r\n                            notes: $scope.links\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (data.data.StatusCode == 400) {\r\n                            if (data.data.ShowToUser == true) {\r\n                                alert(data.data.ErrorMessage);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                })\r\n\r\n\r\n            })();\r\n        }\r\n    ]);\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-controllers');\r\n\r\n    app.controller('notesPageController', ['$scope', '$transition', '$q', '$timeout', 'dialogs', 'toaster', 'navService', 'tileService',\r\n        function ($scope, $transition, $q, $timeout, dialogs, toaster, navService, tileService) {\r\n\r\n            $scope.data = null;\r\n\r\n            $scope.menuHamburger = {\r\n                opened: false,\r\n                menus: navService.getCommonHamburger([]),\r\n                menuClick: function (item) {\r\n                    $scope.menuCharacter.opened = false;\r\n                }\r\n            };\r\n\r\n            $scope.menuCharacter = {\r\n                opened: false,\r\n                menus: navService.getCommonCharacterNav([]),\r\n                menuClick: function (item) {\r\n                    $scope.menuCharacter.opened = false;\r\n                }\r\n            };\r\n\r\n            navService.registerNav('hamburger', $scope.menuHamburger);\r\n            navService.registerNav('character', $scope.menuCharacter);\r\n\r\n            (function () {\r\n                debugger;\r\n                navService.updateBody(true, false);\r\n                debugger;\r\n                var characterId = $transition.params().characterId;\r\n                var result = tileService.GetAllTileTypesRelatedCharacter(characterId);\r\n                result.then(function (data) {\r\n                    debugger;\r\n                    if (data.data.StatusCode == 200) {\r\n                        debugger;\r\n                        $scope.AllTilesData = data.data.PayLoad;\r\n                        $scope.notes = data.data.PayLoad.Notes;\r\n                        $scope.data = {\r\n                            notes: $scope.notes\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (data.data.StatusCode == 400) {\r\n                            if (data.data.ShowToUser == true) {\r\n                                alert(data.data.ErrorMessage);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                })\r\n\r\n\r\n            })();\r\n        }\r\n    ]);\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-controllers');\r\n\r\n    app.controller('ruleSetPageController', ['$scope', '$timeout', '$location', '$state', '$window', '$element', 'dialogs', 'navService', 'rulesetService', 'rulesetDataShareService', 'toaster', '$log', 'tileService',\r\n        function ($scope, $timeout, $location, $state, $window, $element, dialogs, navService, rulesetService, rulesetDataShareService, toaster, $log, tileService) {\r\n\r\n            $scope.action = \"\";\r\n            $scope.spellslist = true;\r\n\t\t\t$scope.limit = 2;\r\n\t\t\t$scope.showimagebtns = false;\r\n\r\n            $scope.$on(\"$destroy\", function () {\r\n                rulesetDataShareService.setRulesetData($scope.NewRuleSet);\r\n            });\r\n            function GetRulesets() {\r\n                rulesetService.GetRuleSets().then(function (data) {\r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                    if (data.data.StatusCode == 200) {\r\n                        $scope.RuleSets = data.data.PayLoad;\r\n                    }\r\n                    else {\r\n                        if (data.data.StatusCode == 400) {\r\n                            if (data.data.ShowToUser == true) {\r\n                                toaster.pop(\"error\", data.data.ErrorMessage);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\t\t\t}\r\n\r\n\t\t\t$scope.OpenFile = function () {\r\n\t\t\t\t$(\".input-image\").find(\"input[type=file]\").click();\r\n\t\t\t\t//var input = $('input[type=file]');//.val();\r\n\t\t\t\t//input.click();\r\n\t\t\t\t//return false;\r\n\t\t\t}\r\n\t\t\t\r\n\r\n            $scope.ImportRuleSet = function () {\r\n                var dlg = dialogs.create('/views/dialogs/rulesetimport.html', 'dialogImportRuleset',\r\n                    { ruleSetId: 25 }//Need to implement logic\r\n                );\r\n\r\n                dlg.result.then(function (res) {\r\n                    GetRulesets();\r\n                    var Rid = res;\r\n                    var getData = rulesetService.GetNewRulesetByRuleSetId(Rid);\r\n                    getData.then(function (data) {\r\n                        $(\"#loading\").fadeOut(\"slow\");\r\n                        if (data.data.StatusCode == 200) {\r\n                            $scope.NewRuleSet = data.data.PayLoad\r\n                            $scope.ItemProperties = $scope.NewRuleSet.RuleSetMetaData.ItemProperties;\r\n                            $scope.SpellProperties = $scope.NewRuleSet.RuleSetMetaData.SpellProperties;\r\n                            $scope.AbilityProperties = $scope.NewRuleSet.RuleSetMetaData.AbilityProperties;\r\n                            $scope.CoreStatProperties = $scope.NewRuleSet.RuleSetMetaData.Corestats;\r\n\r\n                            $scope.NewRuleSet.ImportRquired = true;\r\n\r\n                            rulesetDataShareService.setRulesetData(null);\r\n                            rulesetDataShareService.setRulesetData($scope.NewRuleSet);\r\n\r\n                            if ($scope.NewRuleSet.Corestats.length == 0) {\r\n                                $scope.NewRuleSet.IsAddDisabled = false;\r\n                                $scope.iscorestatsadded = false;\r\n                            }\r\n                            else {\r\n                                $scope.NewRuleSet.IsAddDisabled = true;\r\n                                $scope.iscorestatsadded = true;\r\n                            }\r\n                            if ($scope.NewRuleSet.Items.length == 0) {\r\n                                $scope.isitemsadded = false;\r\n                            }\r\n                            else {\r\n                                $scope.isitemsadded = true;\r\n                            }\r\n                            if ($scope.NewRuleSet.Spells.length == 0) {\r\n                                $scope.isspellsadded = false;\r\n                            }\r\n                            else {\r\n                                $scope.isspellsadded = true;\r\n                            }\r\n                            if ($scope.NewRuleSet.Abilities.length == 0) {\r\n                                $scope.isabilitiesadded = false;\r\n                            }\r\n                            else {\r\n                                $scope.isabilitiesadded = true;\r\n                            }\r\n\r\n                            if (angular.equals({}, rulesetDataShareService.getruleset()) == false) {\r\n                                $scope.NewRuleSet = rulesetDataShareService.getruleset();\r\n                                if ($scope.NewRuleSet.Corestats != null) {\r\n                                    if ($scope.NewRuleSet.Corestats.length > 0) {\r\n                                        $scope.iscorestatsadded = true;\r\n                                    }\r\n                                }\r\n                                if ($scope.NewRuleSet.Items != null) {\r\n                                    if ($scope.NewRuleSet.Items.length > 0) {\r\n                                        $scope.isitemsadded = true;\r\n                                    }\r\n                                }\r\n                                if ($scope.NewRuleSet.Spells != null) {\r\n                                    if ($scope.NewRuleSet.Spells.length > 0) {\r\n                                        $scope.isspellsadded = true;\r\n                                    }\r\n                                }\r\n                                if ($scope.NewRuleSet.Abilities != null) {\r\n                                    if ($scope.NewRuleSet.Abilities.length > 0) {\r\n                                        $scope.isabilitiesadded = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                         \r\n\r\n                            for (var i = 0; i < $scope.NewRuleSet.Corestats.length; i++) {\r\n                                var result = $scope.NewRuleSet.Corestats[i];\r\n                                for (var k = 0; k < $scope.Types.length; k++) {\r\n                                    if ($scope.Types[k].TypeId == result.TypeId) {\r\n                                        result.TypeName = $scope.Types[k].Name;\r\n                                    }\r\n                                }\r\n                            }\r\n                            $scope.ItemsCount = $scope.NewRuleSet.Items.length;\r\n                            $scope.SpellsCount = $scope.NewRuleSet.Spells.length;\r\n                            $scope.AbilitiesCount = $scope.NewRuleSet.Abilities.length;\r\n                            if (CopyOrUpdate == 0) {\r\n                                $scope.NewRuleSet.Action = \"Copy\";\r\n                                $scope.NewRuleSet.ActionIcon = \"fa fa-clone\";\r\n                                $scope.NewRuleSet.Heading = \"Copy Ruleset Details\";\r\n                            }\r\n                            else {\r\n                                $scope.NewRuleSet.Action = \"Update\";\r\n                                $scope.NewRuleSet.ActionIcon = \"fa fa-pencil-square-o\";\r\n                                $scope.NewRuleSet.Heading = \"Update Ruleset Details for \" + $scope.NewRuleSet.Name;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                    toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                        function () {\r\n                            toaster.pop(\"error\", 'Error in getting records');\r\n                        });\r\n\r\n\r\n                });\r\n            }\r\n            if ($state.params.action == 1) {\r\n                $(\"#loading\").css(\"display\", \"block\");\r\n                rulesetService.GetRuleSets().then(function (data) {\r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                    if (data.data.StatusCode == 200) {\r\n                        $scope.RuleSets = data.data.PayLoad;\r\n                    }\r\n                    else {\r\n                        if (data.data.StatusCode == 400) {\r\n                            if (data.data.ShowToUser == true) {\r\n                                toaster.pop(\"error\", data.data.ErrorMessage);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n                $scope.RulesetData = function () {\r\n                    rulesetService.GetRuleSets().then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            $scope.RuleSets = data.data.PayLoad;\r\n                            $scope.HeaderContents = rulesetDataShareService.getDisplayCharacterRulesetCount();\r\n                            $scope.HeaderContents.TotalRuleSetCount = $scope.RuleSets.length;\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            toaster.pop('success', $scope.payload);\r\n                        }\r\n                    });\r\n                }\r\n                $scope.rulesets = function () {\r\n                    $state.go('profile.NewRuleSet', { 'RuleSetId': 0, 'isNew': 1, 'IsAddRuleSet': 1 });\r\n                }\r\n                $scope.editRuleSet = function (ruleset) {\r\n                    $scope.CopyOrUpdate = 1;\r\n                    $state.go('profile.NewRuleSet', { 'RuleSetId': ruleset.Id, 'isNew': 1, 'CopyOrUpdate': 1 });\r\n                }\r\n                $scope.copyRuleSet = function (ruleset) {\r\n                    $scope.CopyOrUpdate = 0;\r\n                    $state.go('profile.NewRuleSet', { 'RuleSetId': ruleset.Id, 'isNew': 1, 'CopyOrUpdate': 0 });\r\n                }\r\n                $scope.deleteRuleSet = function (ruleset, counter) {\r\n                    var dlg = dialogs.confirm(\r\n                        'Confirm Delete',\r\n                        'You are about to delete ' + ruleset.Name + '. Are you sure?',\r\n                        { size: \"sm\" }\r\n                    );\r\n                    dlg.result.then(\r\n                        function (res) {\r\n                            if (res == \"yes\") {\r\n                                $(\"#loading\").css(\"display\", \"block\");\r\n                                var ruleSetId = ruleset.Id;\r\n                                var Rulesetdelete = rulesetService.DeleteRuleSet(ruleset.Id);\r\n                                Rulesetdelete.then(function (data) {\r\n                                    $(\"#loading\").fadeOut(\"slow\");\r\n                                    if (data.data.StatusCode == 200) {\r\n                                        var deletedRuleSetIndex = -1;\r\n                                        for (var i = 0; i < $scope.RuleSets.length; i++) {\r\n                                            if ($scope.RuleSets[i].Id == ruleSetId) {\r\n                                                deletedRuleSetIndex = i;\r\n                                            }\r\n                                        }\r\n                                        if (deletedRuleSetIndex > -1) {\r\n                                            $scope.RuleSets.splice(deletedRuleSetIndex, 1);\r\n                                            toaster.pop('success', \"RuleSet Deleted Successfully\");\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        if (data.data.StatusCode == 400) {\r\n                                            if (data.data.ShowToUser == true) {\r\n                                                toaster.pop('error', data.data.ErrorMessage);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                })\r\n                            }\r\n\r\n                        });\r\n                   \r\n                }\r\n                // Export Ruleset\r\n                $scope.exportRuleSet = function (ruleset, counter) {\r\n                    $(\"#loading\").css(\"display\", \"block\");\r\n                    var Result = rulesetService.ImportRuleset(ruleset.Id);\r\n                    Result.then(function (data) {\r\n                        $(\"#loading\").fadeOut(\"slow\");\r\n                        if (data.data != \"\") {\r\n                            var anchor = angular.element('<a/>');\r\n                            anchor.attr({\r\n                                href: 'data:attachment/csv;charset=utf-8,' + encodeURI(data.data),\r\n                                target: '_blank',\r\n                                download: \"Ruleset_\" + ruleset.Name + \".csv\"\r\n                            })[0].click();\r\n                        }\r\n\r\n                    }\r\n                    );\r\n                }\r\n\r\n\r\n            }\r\n            else if ($state.params.action == 2) {\r\n\r\n                if (angular.equals({}, rulesetDataShareService.getRulesetData()) == false) {\r\n                    $scope.NewRuleSet = rulesetDataShareService.getRulesetData();\r\n                }\r\n                rulesetService.GetTypes().then(function (data) {\r\n\r\n                    if (data.data.StatusCode == 200) {\r\n                        $scope.Types = data.data.PayLoad;\r\n                        $scope.weight = data.data.PayLoad[6].Units\r\n                        $scope.Height = data.data.PayLoad[8].Units\r\n                        $scope.Volume = data.data.PayLoad[9].Units\r\n                    }\r\n                    else {\r\n                        if (data.data.StatusCode == 400) {\r\n                            if (data.data.ShowToUser == true) {\r\n                                toaster.pop(\"error\", data.data.ErrorMessage);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n                $scope.iscorestatsadded = false;\r\n                $scope.isitemsadded = false;\r\n                $scope.isspellsadded = false;\r\n                $scope.isabilitiesadded = false;\r\n                $scope.tabName = \"ITEM\";\r\n\r\n                var RuleSetId = $state.params.RuleSetId;\r\n\r\n                var CopyOrUpdate = $state.params.CopyOrUpdate;\r\n\r\n                if ($state.params.isNew == 1) {\r\n                    if (parseInt(RuleSetId) > 0) {\r\n                        UpdateRuleSet(parseInt(RuleSetId), CopyOrUpdate);\r\n                    }\r\n                    else {\r\n                        AddRuleSet();\r\n                    }\r\n                }\r\n                else {\r\n                    if (angular.equals({}, rulesetDataShareService.getRulesetData()) == false) {\r\n                        $scope.NewRuleSet = rulesetDataShareService.getRulesetData();\r\n                        $scope.ItemProperties = $scope.NewRuleSet.RuleSetMetaData.ItemProperties;\r\n                        $scope.SpellProperties = $scope.NewRuleSet.RuleSetMetaData.SpellProperties;\r\n                        $scope.AbilityProperties = $scope.NewRuleSet.RuleSetMetaData.AbilityProperties;\r\n                        $scope.CoreStatProperties = $scope.NewRuleSet.RuleSetMetaData.Corestats;\r\n                    }\r\n\r\n                    if ($scope.NewRuleSet.Corestats != null) {\r\n                        if ($scope.NewRuleSet.Corestats.length == 0) {\r\n                            $scope.NewRuleSet.IsAddDisabled = false;\r\n                            $scope.iscorestatsadded = false;\r\n                        }\r\n                        else {\r\n                            $scope.NewRuleSet.IsAddDisabled = true;\r\n                            $scope.iscorestatsadded = true;\r\n                        }\r\n                    }\r\n                    else\r\n                        $scope.iscorestatsadded = false;\r\n\r\n\r\n                    if ($scope.NewRuleSet.Items != null) {\r\n                        if ($scope.NewRuleSet.Items.length == 0) {\r\n                            $scope.isitemsadded = false;\r\n                        }\r\n                        else {\r\n                            $scope.isitemsadded = true;\r\n                        }\r\n                    }\r\n                    else\r\n                        $scope.isitemsadded = false;\r\n\r\n\r\n                    if ($scope.NewRuleSet.Spells != null) {\r\n                        if ($scope.NewRuleSet.Spells.length == 0) {\r\n                            $scope.isspellsadded = false;\r\n                        }\r\n                        else {\r\n                            $scope.isspellsadded = true;\r\n                        }\r\n                    }\r\n                    else\r\n                        $scope.isspellsadded = false;\r\n\r\n\r\n                    if ($scope.NewRuleSet.Abilities != null) {\r\n                        if ($scope.NewRuleSet.Abilities.length == 0) {\r\n                            $scope.isabilitiesadded = false;\r\n                        }\r\n                        else {\r\n                            $scope.isabilitiesadded = true;\r\n                        }\r\n                    }\r\n                    else\r\n                        $scope.isabilitiesadded = false;\r\n\r\n                }\r\n                $scope.tab = 1;\r\n\r\n                $scope.setTab = function (newTab) {\r\n                    if (newTab == 1) {\r\n                        $scope.tabName = \"ITEM\";\r\n                    }\r\n                    else if (newTab == 2) {\r\n                        $scope.tabName = \"SPELL\";\r\n                    }\r\n                    else if (newTab == 3) {\r\n                        $scope.tabName = \"ABILITY\";\r\n                    }\r\n                    $scope.tab = newTab;\r\n                };\r\n\r\n                $scope.isSet = function (tabNum) {\r\n                    return $scope.tab === tabNum;\r\n                };\r\n                $scope.GetRulesets = function () {\r\n                    $window.localStorage.setItem(\"RuleSetId\", 0);\r\n                    $state.go(\"profile.AddNewRuleSet\");\r\n\r\n                };\r\n                $scope.BackCharacters = function () {\r\n                    return navService.gotoCharacters();\r\n                }\r\n\r\n                $scope.ImportRuleSet = function (ruleset) {\r\n                    var dlg = dialogs.create('/views/dialogs/rulesetimport.html', 'dialogImportRuleset',\r\n                        { ruleSetId: $scope.NewRuleSet.Id }\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n\r\n                        var Rid = res;\r\n                        var getData = rulesetService.GetNewRulesetByRuleSetId(Rid);\r\n                        getData.then(function (data) {\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            if (data.data.StatusCode == 200) {\r\n                                $scope.NewRuleSet = data.data.PayLoad\r\n                                $scope.ItemProperties = $scope.NewRuleSet.RuleSetMetaData.ItemProperties;\r\n                                $scope.SpellProperties = $scope.NewRuleSet.RuleSetMetaData.SpellProperties;\r\n                                $scope.AbilityProperties = $scope.NewRuleSet.RuleSetMetaData.AbilityProperties;\r\n                                $scope.CoreStatProperties = $scope.NewRuleSet.RuleSetMetaData.Corestats;\r\n\r\n                                $scope.NewRuleSet.ImportRquired = true;\r\n\r\n                                rulesetDataShareService.setRulesetData(null);\r\n                                rulesetDataShareService.setRulesetData($scope.NewRuleSet);\r\n\r\n                                if ($scope.NewRuleSet.Corestats.length == 0) {\r\n                                    $scope.NewRuleSet.IsAddDisabled = false;\r\n                                    $scope.iscorestatsadded = false;\r\n                                }\r\n                                else {\r\n                                    $scope.NewRuleSet.IsAddDisabled = true;\r\n                                    $scope.iscorestatsadded = true;\r\n                                }\r\n                                if ($scope.NewRuleSet.Items.length == 0) {\r\n                                    $scope.isitemsadded = false;\r\n                                }\r\n                                else {\r\n                                    $scope.isitemsadded = true;\r\n                                }\r\n                                if ($scope.NewRuleSet.Spells.length == 0) {\r\n                                    $scope.isspellsadded = false;\r\n                                }\r\n                                else {\r\n                                    $scope.isspellsadded = true;\r\n                                }\r\n                                if ($scope.NewRuleSet.Abilities.length == 0) {\r\n                                    $scope.isabilitiesadded = false;\r\n                                }\r\n                                else {\r\n                                    $scope.isabilitiesadded = true;\r\n                                }\r\n\r\n                                if (angular.equals({}, rulesetDataShareService.getruleset()) == false) {\r\n                                    $scope.NewRuleSet = rulesetDataShareService.getruleset();\r\n                                    if ($scope.NewRuleSet.Corestats != null) {\r\n                                        if ($scope.NewRuleSet.Corestats.length > 0) {\r\n                                            $scope.iscorestatsadded = true;\r\n                                        }\r\n                                    }\r\n                                    if ($scope.NewRuleSet.Items != null) {\r\n                                        if ($scope.NewRuleSet.Items.length > 0) {\r\n                                            $scope.isitemsadded = true;\r\n                                        }\r\n                                    }\r\n                                    if ($scope.NewRuleSet.Spells != null) {\r\n                                        if ($scope.NewRuleSet.Spells.length > 0) {\r\n                                            $scope.isspellsadded = true;\r\n                                        }\r\n                                    }\r\n                                    if ($scope.NewRuleSet.Abilities != null) {\r\n                                        if ($scope.NewRuleSet.Abilities.length > 0) {\r\n                                            $scope.isabilitiesadded = true;\r\n                                        }\r\n                                    }\r\n                                }\r\n                               \r\n\r\n                                for (var i = 0; i < $scope.NewRuleSet.Corestats.length; i++) {\r\n                                    var result = $scope.NewRuleSet.Corestats[i];\r\n                                    for (var k = 0; k < $scope.Types.length; k++) {\r\n                                        if ($scope.Types[k].TypeId == result.TypeId) {\r\n                                            result.TypeName = $scope.Types[k].Name;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                $scope.ItemsCount = $scope.NewRuleSet.Items.length;\r\n                                $scope.SpellsCount = $scope.NewRuleSet.Spells.length;\r\n                                $scope.AbilitiesCount = $scope.NewRuleSet.Abilities.length;\r\n                                if (CopyOrUpdate == 0) {\r\n                                    $scope.NewRuleSet.Action = \"Copy\";\r\n                                    $scope.NewRuleSet.ActionIcon = \"fa fa-clone\";\r\n                                    $scope.NewRuleSet.Heading = \"Copy Ruleset Details\";\r\n                                }\r\n                                else {\r\n                                    $scope.NewRuleSet.Action = \"Update\";\r\n                                    $scope.NewRuleSet.ActionIcon = \"fa fa-pencil-square-o\";\r\n                                    $scope.NewRuleSet.Heading = \"Update Ruleset Details for \" + $scope.NewRuleSet.Name;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                            function () {\r\n                                toaster.pop(\"error\", 'Error in getting records');\r\n                            });\r\n\r\n\r\n                    });\r\n                }\r\n                $scope.addNewCoreStat = function () {\r\n                    $scope.OperationTypeMode = \"Create\"\r\n                    $scope.CoreStatsInGrid = [];\r\n                    $scope.CoreStatProperties.Name = \"\";\r\n                    if ($scope.NewRuleSet.Corestats != null) {\r\n                        for (var i = 0; i < $scope.NewRuleSet.Corestats.length; i++) {\r\n                            if ($scope.NewRuleSet.Corestats[i].TypeId == 14 || $scope.NewRuleSet.Corestats[i].TypeId == 5 || $scope.NewRuleSet.Corestats[i].TypeId == 6) {\r\n                                $scope.CoreStatsInGrid.push($scope.NewRuleSet.Corestats[i]);\r\n                            }\r\n                        }\r\n                        $scope.CoreStatsNameInGrid = $scope.NewRuleSet.Corestats;\r\n                    }\r\n                    $scope.CoreStatProperties.TypeId = \"\";\r\n                    $scope.CoreStatProperties.Description = \"\";\r\n                    $scope.IsButtonDisabled = true;\r\n                    $scope.CoreStatProperties.Heading = \"New Character Stats Details\";\r\n                    $scope.isInDatabaseCoreStat = true;\r\n                    $scope.pageName = \"New Character stat\";\r\n                    $scope.buttontext = \"Save\";\r\n                    var dlg = dialogs.create('/views/dialogs/addnewcorestat.html', 'dialogCreateCoreStat',\r\n                        { scope: $scope.CoreStatProperties, btntext: $scope.buttontext, tabname: $scope.pageName, IsenableBtn: $scope.IsButtonDisabled, CoreStatsInGrid: $scope.CoreStatsInGrid, CoreStatsNameInGrid: $scope.CoreStatsNameInGrid, CoreStatMode: $scope.OperationTypeMode }\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if (res != 'cancel') {\r\n                            if ($scope.NewRuleSet.Corestats == null || $scope.NewRuleSet.Corestats == undefined) {\r\n                                $scope.NewRuleSet.Corestats = [];\r\n                            }\r\n                            $scope.NewRuleSet.Corestats.push(res);\r\n\r\n                            //rulesetDataShareService.setRulesetData($scope.NewRuleSet);\r\n\r\n                            //rulesetDataShareService.setcorestat($scope.NewRuleSet.Corestats);\r\n                            $scope.iscorestatsadded = true;\r\n                        }\r\n                    });\r\n                };\r\n\r\n\r\n\r\n                $scope.createitems = function () {\r\n                    $scope.buttontext = \"Create\";\r\n                    $scope.tabName = \"Create New Item\";\r\n                    $scope.IsButtonDisabled = false;\r\n                    $scope.isBtnShow = false;\r\n                    $scope.OperationTypeMode = \"Create\"\r\n                    var weight = \"\";\r\n                    var volume = \"\";\r\n                    $scope.Content_ItemProperties = [];\r\n                    if ($scope.NewRuleSet.Items != null) {\r\n                        for (var i = 0; i < $scope.NewRuleSet.Items.length; i++) {\r\n                            $scope.Content_ItemProperties.push($scope.NewRuleSet.Items[i].ItemProperties[0].Value.Text.value);\r\n                        }\r\n                    }\r\n                    for (var i = 0; i < $scope.NewRuleSet.Rulesetproperty.length; i++) {\r\n                        if ($scope.NewRuleSet.Rulesetproperty[i].TypeId == 7) {\r\n                            weight = $scope.NewRuleSet.Rulesetproperty[i].Units.selectedUnit;\r\n                        }\r\n                    }\r\n                    for (var j = 0; j < $scope.ItemProperties.length; j++) {\r\n                        if ($scope.ItemProperties[j].TypeId == 7) {\r\n                            $scope.ItemProperties[j].Value.Weight.units.selectedUnit = weight;\r\n                        }\r\n                    }\r\n                    for (var i = 0; i < $scope.NewRuleSet.Rulesetproperty.length; i++) {\r\n                        if (($scope.NewRuleSet.Rulesetproperty[i].TypeId == 1) && ($scope.NewRuleSet.Rulesetproperty[i].Name.indexOf('Volume') > -1)) {\r\n                            volume = $scope.NewRuleSet.Rulesetproperty[i].Value.Text.value;\r\n                        }\r\n                    }\r\n                    for (var j = 0; j < $scope.ItemProperties.length; j++) {\r\n                        if ($scope.ItemProperties[j].TypeId == 13) {\r\n                            $scope.ItemProperties[j].Value.Volume.units.selectedUnit = volume;\r\n                        }\r\n                    }\r\n\t\t\t\t\tconsole.log(\"$scope.ItemProperties: \", $scope.ItemProperties);\r\n                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogCreateItem',\r\n\t\t\t\t\t\t{ OpenBingSearch: $scope.OpenBingSearch, OpenFile: $scope.OpenFile, scope: $scope.ItemProperties, tabName: $scope.tabName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow, Content_ItemProperties: $scope.Content_ItemProperties, ItemMode: $scope.OperationTypeMode, Spells: $scope.NewRuleSet.Spells, Abilities: $scope.NewRuleSet.Abilities }\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if ($scope.NewRuleSet.Items == null || $scope.NewRuleSet.Items == undefined) {\r\n                            $scope.NewRuleSet.Items = [];\r\n                        }\r\n\r\n                        if (res != \"cancel\") {\r\n                            var NewItem = {}\r\n                            NewItem.ItemProperties = res.Properties;\r\n                            NewItem.AssociatedSpells = res.AssociatedSpells;\r\n                            NewItem.AssociatedAbilities = res.AssociatedAbilities;\r\n\r\n                          \r\n                            $scope.NewRuleSet.Items.push(NewItem);\r\n                            //rulesetDataShareService.set($scope.NewRuleSet.Items);\r\n                            $scope.isitemsadded = true;\r\n                        }\r\n                    });\r\n\r\n\r\n                };\r\n\r\n                $scope.createspells = function () {\r\n                    $scope.buttontext = \"Create\";\r\n                    $scope.tabName = \"Create New Spell\";\r\n                    $scope.isBtnShow = false;\r\n                    $scope.OperationTypeMode = \"Create\"\r\n                    var weight = \"\";\r\n                    var volume = \"\";\r\n                    $scope.Content_SpellProperties = [];\r\n                    if ($scope.NewRuleSet.Spells != null) {\r\n                        for (var i = 0; i < $scope.NewRuleSet.Spells.length; i++) {\r\n                            $scope.Content_SpellProperties.push($scope.NewRuleSet.Spells[i].SpellProperties[0].Value.Text.value);\r\n                        }\r\n                    }\r\n                    for (var i = 0; i < $scope.NewRuleSet.Rulesetproperty.length; i++) {\r\n                        if ($scope.NewRuleSet.Rulesetproperty[i].TypeId == 7) {\r\n                            weight = $scope.NewRuleSet.Rulesetproperty[i].Units.selectedUnit;\r\n                        }\r\n                    }\r\n                    for (var j = 0; j < $scope.SpellProperties.length; j++) {\r\n                        if ($scope.SpellProperties[j].TypeId == 7) {\r\n                            $scope.SpellProperties[j].Value.Weight.units.selectedUnit = weight;\r\n                        }\r\n                    }\r\n                    for (var i = 0; i < $scope.NewRuleSet.Rulesetproperty.length; i++) {\r\n                        if (($scope.NewRuleSet.Rulesetproperty[i].TypeId == 1) && ($scope.NewRuleSet.Rulesetproperty[i].Name.indexOf('Volume') > -1)) {\r\n                            volume = $scope.NewRuleSet.Rulesetproperty[i].Value.Text.value;\r\n                        }\r\n                    }\r\n                    for (var j = 0; j < $scope.SpellProperties.length; j++) {\r\n                        if ($scope.SpellProperties[j].TypeId == 13) {\r\n                            $scope.SpellProperties[j].Value.Volume.units.selectedUnit = volume;\r\n                        }\r\n                    }\r\n                    var dlg = dialogs.create('/views/dialogs/createspells.html', 'dialogCreateSpell',\r\n                        { scope: $scope.SpellProperties, tabName: $scope.tabName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, Content_SpellProperties: $scope.Content_SpellProperties, SpellMode: $scope.OperationTypeMode }\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if ($scope.NewRuleSet.Spells == null || $scope.NewRuleSet.Spells == undefined) {\r\n                            $scope.NewRuleSet.Spells = [];\r\n                        }\r\n\r\n                        if (res != \"cancel\") {\r\n                            var SpellProperties = { \"SpellProperties\": res };\r\n                            $scope.NewRuleSet.Spells.push(SpellProperties);\r\n                            //rulesetDataShareService.setspell($scope.NewRuleSet.Spells);\r\n                            $scope.isspellsadded = true;\r\n                        }\r\n                    });\r\n                };\r\n\r\n                $scope.createabilities = function () {\r\n                    $scope.buttontext = \"Create\";\r\n                    $scope.tabName = \"Create New Ability\";\r\n                    $scope.isBtnShow = false;\r\n                    $scope.OperationTypeMode = \"Create\"\r\n                    var weight = \"\";\r\n                    var volume = \"\";\r\n                    $scope.Content_AbilityProperties = [];\r\n                    if ($scope.NewRuleSet.Abilities != null) {\r\n                        for (var i = 0; i < $scope.NewRuleSet.Abilities.length; i++) {\r\n                            $scope.Content_AbilityProperties.push($scope.NewRuleSet.Abilities[i].AbilityProperties[0].Value.Text.value);\r\n                        }\r\n                    }\r\n                    for (var i = 0; i < $scope.NewRuleSet.Rulesetproperty.length; i++) {\r\n                        if ($scope.NewRuleSet.Rulesetproperty[i].TypeId == 7) {\r\n                            weight = $scope.NewRuleSet.Rulesetproperty[i].Units.selectedUnit;\r\n                        }\r\n                    }\r\n                    for (var j = 0; j < $scope.AbilityProperties.length; j++) {\r\n                        if ($scope.AbilityProperties[j].TypeId == 7) {\r\n                            $scope.AbilityProperties[j].Value.Weight.units.selectedUnit = weight;\r\n                        }\r\n                    }\r\n                    for (var i = 0; i < $scope.NewRuleSet.Rulesetproperty.length; i++) {\r\n                        if (($scope.NewRuleSet.Rulesetproperty[i].TypeId == 1) && ($scope.NewRuleSet.Rulesetproperty[i].Name.indexOf('Volume') > -1)) {\r\n                            volume = $scope.NewRuleSet.Rulesetproperty[i].Value.Text.value;\r\n                        }\r\n                    }\r\n                    for (var j = 0; j < $scope.AbilityProperties.length; j++) {\r\n                        if ($scope.AbilityProperties[j].TypeId == 13) {\r\n                            $scope.AbilityProperties[j].Value.Volume.units.selectedUnit = volume;\r\n                        }\r\n                    }\r\n                    var dlg = dialogs.create('/views/dialogs/createabilities.html', 'dialogCreateAbility',\r\n                        { scope: $scope.AbilityProperties, tabName: $scope.tabName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, Content_AbilityProperties: $scope.Content_AbilityProperties, AbilityMode: $scope.OperationTypeMode }\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if ($scope.NewRuleSet.Abilities == null || $scope.NewRuleSet.Abilities == undefined) {\r\n                            $scope.NewRuleSet.Abilities = [];\r\n                        }\r\n                        if (res != \"cancel\") {\r\n                            var AbilityProperties = { \"AbilityProperties\": res };\r\n                            $scope.NewRuleSet.Abilities.push(AbilityProperties);\r\n                            //rulesetDataShareService.setability($scope.NewRuleSet.Abilities);\r\n                            $scope.isabilitiesadded = true;\r\n                        }\r\n\r\n                    });\r\n                };\r\n\r\n\r\n                $scope.showallCorestats = function () {\r\n                    $state.go(\"profile.Corestats\", { RuleSetId: $scope.NewRuleSet.Id });\r\n                    //  rulesetDataShareService.setruleset($scope.NewRuleSet);\r\n                }\r\n\r\n\r\n                $scope.showallitems = function () {\r\n                    $state.go(\"profile.Items\", { RuleSetId: $scope.NewRuleSet.Id });\r\n                    //rulesetDataShareService.setruleset($scope.NewRuleSet);\r\n                }\r\n\r\n                $scope.ShowallSpells = function () {\r\n                    $state.go(\"profile.Spells\", { RuleSetId: $scope.NewRuleSet.Id });\r\n                    //rulesetDataShareService.setruleset($scope.NewRuleSet);\r\n\r\n                }\r\n                $scope.ShowallAbilities = function () {\r\n                    $state.go(\"profile.Abilities\", { RuleSetId: $scope.NewRuleSet.Id });\r\n                    // rulesetDataShareService.setruleset($scope.NewRuleSet);\r\n\r\n                }\r\n\r\n\r\n                $scope.save = function () {\r\n                    var ruleset = $scope.NewRuleSet;\r\n                    $(\"#loading\").css(\"display\", \"block\");\r\n                    switch ($scope.NewRuleSet.Action) {\r\n                        case \"Copy\":\r\n                            var Rulesetadd = rulesetService.copyRuleSet(ruleset);\r\n                            break;\r\n                        case \"Update\":\r\n                            var Rulesetadd = rulesetService.updateRuleSet(ruleset);\r\n                            break;\r\n                        default:\r\n                            var Rulesetadd = rulesetService.saveRuleSet(ruleset);\r\n                            break;\r\n                    }\r\n                    Rulesetadd.then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            $scope.payload = data.data.PayLoad\r\n                            switch ($scope.NewRuleSet.Action) {\r\n                                case \"Add\":\r\n                                    toaster.pop('success', \"RuleSet Added Successfully.\");\r\n                                    $timeout($state.go('profile.AddNewRuleSet'), 500);\r\n                                    break;\r\n                                case \"Copy\":\r\n                                    toaster.pop('success', \"RuleSet Copied Successfully.\");\r\n                                    $timeout($state.go('profile.AddNewRuleSet'), 500);\r\n                                    break;\r\n                                default:\r\n                                    toaster.pop('success', $scope.payload);\r\n                                    $timeout($state.go('profile.AddNewRuleSet'), 500);\r\n                                    break;\r\n                            }\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                            rulesetService.GetRuleSets();\r\n                        }\r\n                        else {\r\n                            if (data.data.StatusCode == 400) {\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                if (data.data.ShowToUser == true) {\r\n                                    //$timeout($state.go('profile.AddNewRuleSet'), 500);\r\n                                    toaster.pop('error', data.data.ErrorMessage);\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                        function () {\r\n                            //$timeout($state.go('profile.AddNewRuleSet'), 500);\r\n                            toaster.pop('error', \"Error in getting records\");\r\n                            //alert('Error in getting records');\r\n                        });\r\n                }\r\n\r\n                $scope.cancel = function () {\r\n                    if ($state.params.IsAddRuleSet == 1) {\r\n                        $state.go('profile.AddNewRuleSet');\r\n                    }\r\n                    else {\r\n                        $state.go('profile.characters');\r\n                    }\r\n                }\r\n\r\n\r\n\r\n            }\r\n            else if ($state.params.action == 3) {\r\n              \r\n                //$scope.lists = false;\r\n                //$scope.list = true;\r\n                //$scope.RulesetId = $state.params.RuleSetId;\r\n                $scope.RulesetId = parseInt($state.params.RuleSetId);\r\n\r\n                var url = $location.absUrl().split('?')[0];\r\n                if (url.indexOf(\"Corestats\") > 0) {\r\n                    if (angular.equals({}, rulesetDataShareService.getcorestat()) == false) {\r\n                        $scope.Corestats = rulesetDataShareService.getcorestat();\r\n                        if ($scope.Corestats.length > 0) {\r\n                            $scope.lists = false;\r\n                            $scope.list = true;\r\n                        }\r\n                        else {\r\n                            $scope.lists = true;\r\n                            $scope.list = false;\r\n                        }\r\n                    }\r\n                    else {\r\n                        var corestats = rulesetService.GetRulesetCorestats(parseInt($state.params.RuleSetId));\r\n                        corestats.then(function (data) {\r\n\r\n                            if (data.data.StatusCode == 200) {\r\n                                $scope.Corestats = data.data.PayLoad;\r\n                                rulesetService.GetTypes().then(function (data) {\r\n\r\n                                    if (data.data.StatusCode == 200) {\r\n                                        $scope.Types = data.data.PayLoad;\r\n                                        rulesetDataShareService.setcorestat($scope.Corestats);\r\n                                        for (var i = 0; i < $scope.Types.length; i++) {\r\n                                            for (var j = 0; j < $scope.Corestats.length; j++) {\r\n                                                if ($scope.Types[i].TypeId == $scope.Corestats[j].TypeId) {\r\n                                                    $scope.Corestats[j].TypeName = $scope.Types[i].Name;\r\n                                                }\r\n                                            }\r\n\r\n                                        }\r\n                                        if ($scope.Corestats.length > 0) {\r\n                                            $scope.lists = false;\r\n                                            $scope.list = true;\r\n                                        }\r\n                                        else {\r\n                                            $scope.lists = true;\r\n                                            $scope.list = false;\r\n                                        }\r\n                                        $state.go(\"profile.Corestats\", { RuleSetId: parseInt($state.params.RuleSetId) })\r\n                                        $(\"#loading\").fadeOut(\"slow\");\r\n                                    }\r\n                                    else {\r\n                                        if (data.data.StatusCode == 400) {\r\n                                            if (data.data.ShowToUser == true) {\r\n                                                $(\"#loading\").fadeOut(\"slow\");\r\n                                                toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                                toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n                else {\r\n                    if (parseInt(RuleSetId) > 0) {\r\n                        UpdateRuleSet(parseInt(RuleSetId), CopyOrUpdate);\r\n                    }\r\n                }\r\n\r\n\r\n                $scope.addNewCoreStat = function () {\r\n\r\n                    var corestatsmetadata = rulesetService.GetCorestatsMetadata();\r\n                    corestatsmetadata.then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            $scope.Corestats = rulesetDataShareService.getcorestat();\r\n                            $scope.CoreStatProperties = data.data.PayLoad.RuleSetMetaData.Corestats;\r\n                            $scope.OperationTypeMode = \"Create\"\r\n                            $scope.CoreStatsInGrid = [];\r\n                            $scope.CoreStatProperties.Name = \"\";\r\n                            if ($scope.Corestats != null) {\r\n                                for (var i = 0; i < $scope.Corestats.length; i++) {\r\n                                    if ($scope.Corestats[i].TypeId == 14 || $scope.Corestats[i].TypeId == 5 || $scope.Corestats[i].TypeId == 6) {\r\n                                        $scope.CoreStatsInGrid.push($scope.Corestats[i]);\r\n                                    }\r\n                                }\r\n                                $scope.CoreStatsNameInGrid = $scope.Corestats;\r\n                            }\r\n                            $scope.CoreStatProperties.TypeId = \"\";\r\n                            $scope.CoreStatProperties.Description = \"\";\r\n                            $scope.IsButtonDisabled = true;\r\n                            $scope.CoreStatProperties.Heading = \"New Character Stats Details\";\r\n                            $scope.isInDatabaseCoreStat = true;\r\n                            $scope.pageName = \"New Character stat\";\r\n                            $scope.buttontext = \"Save\";\r\n                            var dlg = dialogs.create('/views/dialogs/addnewcorestat.html', 'dialogCreateCoreStat',\r\n                                { scope: $scope.CoreStatProperties, btntext: $scope.buttontext, tabname: $scope.pageName, IsenableBtn: $scope.IsButtonDisabled, CoreStatsInGrid: $scope.CoreStatsInGrid, CoreStatsNameInGrid: $scope.CoreStatsNameInGrid, CoreStatMode: $scope.OperationTypeMode }\r\n                            );\r\n\r\n                            dlg.result.then(function (res) {\r\n                                if (res != 'cancel') {\r\n                                    $scope.Corestatlist = [];\r\n                                    //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                                    res.RulesetId = $scope.RulesetId;\r\n                                    $scope.Corestatlist.push(res);\r\n                                    var savecorestat = rulesetService.CreateCorestats($scope.Corestatlist);\r\n                                    savecorestat.then(function (data) {\r\n                                        if (data.data.StatusCode == 200) {\r\n                                            //$scope.Corestats = data.data.PayLoad.Result;\r\n                                            $scope.Corestats = data.data.PayLoad;\r\n                                            rulesetDataShareService.setcorestat($scope.Corestats);\r\n                                            rulesetService.GetTypes().then(function (data) {\r\n\r\n                                                if (data.data.StatusCode == 200) {\r\n                                                    $scope.Types = data.data.PayLoad;\r\n                                                    //$scope.Types = rulesetDataShareService.getRpgtypeData()\r\n                                                    for (var i = 0; i < $scope.Types.length; i++) {\r\n                                                        for (var j = 0; j < $scope.Corestats.length; j++) {\r\n                                                            if ($scope.Types[i].TypeId == $scope.Corestats[j].TypeId) {\r\n                                                                $scope.Corestats[j].TypeName = $scope.Types[i].Name;\r\n                                                            }\r\n                                                        }\r\n\r\n                                                    }\r\n                                                    if ($scope.Corestats.length > 0) {\r\n                                                        $scope.lists = false;\r\n                                                        $scope.list = true;\r\n                                                    }\r\n                                                    else {\r\n                                                        $scope.lists = true;\r\n                                                        $scope.list = false;\r\n                                                    }\r\n\r\n                                                    $state.go(\"profile.Corestats\", { RuleSetId: $scope.RulesetId })\r\n                                                }\r\n                                            })\r\n\r\n                                        }\r\n                                        else if (data.data.StatusCode == 400) {\r\n                                            if (data.data.ShowToUser == true)\r\n                                            {\r\n                                                toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                            }\r\n                                            \r\n                                        }\r\n                                    })\r\n                                }\r\n                            });\r\n                        }\r\n                    })\r\n\r\n                };\r\n\r\n\r\n                $scope.editCoreStat = function (coreStat) {\r\n                    $scope.action = \"update\";\r\n                    $window.localStorage.setItem(\"RuleSetId\", coreStat.Id);\r\n                    $window.localStorage.setItem(\"Action\", \"edit\");\r\n                    $scope.isInDatabaseCoreStat = false;\r\n                    var resultdata = rulesetService.GetCoreStatById(coreStat.Id);\r\n                    resultdata.then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            $scope.CoreStatProperties = data.data.PayLoad;\r\n                            $scope.CoreStatProperties.Heading = \"Edit CoreStats Details\";\r\n                            var dlg = dialogs.create('/views/dialogs/addnewcorestat.html', 'dialogCreateCoreStat',\r\n                                { scope: $scope.CoreStatProperties }\r\n                            );\r\n\r\n                            dlg.result.then(function (res) {\r\n                                if (res != 'cancel') {\r\n                                    if ($scope.NewRuleSet.Corestats == null || $scope.NewRuleSet.Corestats == undefined) {\r\n                                        $scope.NewRuleSet.Corestats = [];\r\n                                    }\r\n                                    $scope.NewRuleSet.Corestats.push(res);\r\n                                    $scope.iscorestatsadded = true;\r\n                                }\r\n                            });\r\n                            $scope.CoreStatProperties.Action = \"Update\";\r\n                            $scope.CoreStatProperties.Heading = \"Update Ruleset Details for \" + $scope.CoreStatProperties.Name;\r\n                        }\r\n                        else {\r\n                            if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                    toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                        function () {\r\n                            toaster.pop(\"error\", 'Error in getting records');\r\n\r\n                        });\r\n\r\n                }\r\n\r\n                $scope.deleteCoreStat = function (coreStat) {\r\n                    var IsConf = confirm('You are about to delete ' + coreStat.Name + '. Are you sure?');\r\n                    if (IsConf) {\r\n                        var CoreStatdelete = rulesetService.DeleteCoreStat(coreStat.Id);\r\n                        $state.go(\"profile.AddNewRuleSet\");\r\n                    }\r\n                }\r\n                $scope.deleteCorestats = function (corestatindex) {\r\n                    $scope.NewRuleSet.Corestats.splice(corestatindex, 1);\r\n                }\r\n\r\n                $scope.ShowChoice = function () {\r\n\r\n                    if ($scope.TypeId == \"2\") {\r\n                        $scope.result = true;\r\n                    }\r\n                    else {\r\n                        $scope.result = false;\r\n\r\n                    }\r\n                }\r\n\r\n                var Choices = [];\r\n                $scope.AddChoices = { Choices: [] };\r\n                $scope.AddChoice = function () {\r\n                    $scope.AddChoices.Choices.push('');\r\n                }\r\n\r\n                //For Corestats\r\n                $scope.CopyCorestat = function (item, count) {\r\n                    $scope.Corestats = rulesetDataShareService.getcorestat();\r\n                    $scope.pageName = \"Copying Corestat\";\r\n                    $scope.buttontext = \"Copy\";\r\n                    $scope.IsButtonDisabled = false;\r\n                    $scope.OperationTypeMode = \"Copy\"\r\n                    $scope.CoreStatsInGrid = [];\r\n\r\n                    if ($scope.Corestats != null) {\r\n                        for (var i = 0; i < $scope.Corestats.length; i++) {\r\n                            if ($scope.Corestats[i].TypeId == 14 || $scope.Corestats[i].TypeId == 5 || $scope.Corestats[i].TypeId == 6) {\r\n                                $scope.CoreStatsInGrid.push($scope.Corestats[i]);\r\n                            }\r\n                        }\r\n                        $scope.CoreStatsNameInGrid = $scope.Corestats;\r\n                    }\r\n                    var dlg = dialogs.create('/views/dialogs/addnewcorestat.html', 'dialogCopyCoreStat',\r\n                        { scope: item, btntext: $scope.buttontext, tabname: $scope.pageName, IsenableBtn: $scope.IsButtonDisabled, CoreStatsNameInGrid: $scope.CoreStatsNameInGrid, CoreStatsInGrid: $scope.CoreStatsInGrid, CoreStatMode: $scope.OperationTypeMode}\r\n                    );\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            $scope.CorestatList = [];\r\n                            $scope.CorestatList.push(res);\r\n                            var copycorestat = rulesetService.CopyCorestats($scope.CorestatList);\r\n                            copycorestat.then(function (data) {\r\n                                if (data.data.StatusCode == 200) {\r\n                                    $scope.Corestats = data.data.PayLoad;\r\n                                    rulesetDataShareService.setcorestat($scope.Corestats);\r\n                                    rulesetService.GetTypes().then(function (data) {\r\n\r\n                                        if (data.data.StatusCode == 200) {\r\n                                            $scope.Types = data.data.PayLoad;\r\n                                            //$scope.Types = rulesetDataShareService.getRpgtypeData()\r\n                                            for (var i = 0; i < $scope.Types.length; i++) {\r\n                                                for (var j = 0; j < $scope.Corestats.length; j++) {\r\n                                                    if ($scope.Types[i].TypeId == $scope.Corestats[j].TypeId) {\r\n                                                        $scope.Corestats[j].TypeName = $scope.Types[i].Name;\r\n                                                    }\r\n                                                }\r\n\r\n                                            }\r\n                                            if ($scope.Corestats.length > 0) {\r\n                                                $scope.lists = false;\r\n                                                $scope.list = true;\r\n                                            }\r\n                                            else {\r\n                                                $scope.lists = true;\r\n                                                $scope.list = false;\r\n                                            }\r\n\r\n                                            $state.go(\"profile.Corestats\", { RuleSetId: $scope.RulesetId })\r\n                                        }\r\n                                    })\r\n                                    $state.go(\"profile.Corestats\", { RuleSetId: $scope.NewRuleSet.Id })\r\n                                }\r\n                                else if (data.data.StatusCode == 400)\r\n                                {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                    }\r\n                                }\r\n\r\n                            })\r\n                            //$scope.NewRuleSet.Corestats.push(res);\r\n                        }\r\n                    });\r\n                } \r\n\r\n                $scope.EditCorestat = function (item, count) {\r\n                    $scope.Corestats = rulesetDataShareService.getcorestat();\r\n                    $scope.pageName = \"Editing Corestat\";\r\n                    $scope.buttontext = \"Update\";\r\n                    $scope.IsButtonDisabled = false;\r\n                    $scope.OperationTypeMode = \"Edit\"\r\n                    $scope.CoreStatsInGrid = [];\r\n                    if ($scope.Corestats != null) {\r\n                        for (var i = 0; i < $scope.Corestats.length; i++) {\r\n                            if ($scope.Corestats[i].TypeId == 14 || $scope.Corestats[i].TypeId == 5 || $scope.Corestats[i].TypeId == 6) {\r\n                                $scope.CoreStatsInGrid.push($scope.Corestats[i]);\r\n                            }\r\n                        }\r\n                        $scope.CoreStatsNameInGrid = $scope.Corestats;\r\n                    }\r\n                    var dlg = dialogs.create('/views/dialogs/addnewcorestat.html', 'dialogCopyCoreStat',\r\n                        { scope: item, btntext: $scope.buttontext, IsenableBtn: $scope.IsButtonDisabled, tabname: $scope.pageName, CoreStatsNameInGrid: $scope.CoreStatsNameInGrid, CoreStatMode: $scope.OperationTypeMode, CoreStatsInGrid: $scope.CoreStatsInGrid }\r\n                    );\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            $scope.CorestatList = [];\r\n                            $scope.CorestatList.push(res);\r\n                            var editcorestat = rulesetService.UpdateCorestats($scope.CorestatList);\r\n                            editcorestat.then(function (data) {\r\n                                if (data.data.StatusCode == 200) {\r\n                                    //$scope.Corestats = data.data.PayLoad;\r\n                                    //$scope.Corestats = data.data.PayLoad.Result;\r\n                                    $scope.Corestats = data.data.PayLoad;\r\n\r\n                                    rulesetService.GetTypes().then(function (data) {\r\n\r\n                                        if (data.data.StatusCode == 200) {\r\n                                            $scope.Types = data.data.PayLoad;\r\n                                            //$scope.Types = rulesetDataShareService.getRpgtypeData()\r\n                                            for (var i = 0; i < $scope.Types.length; i++) {\r\n                                                for (var j = 0; j < $scope.Corestats.length; j++) {\r\n                                                    if ($scope.Types[i].TypeId == $scope.Corestats[j].TypeId) {\r\n                                                        $scope.Corestats[j].TypeName = $scope.Types[i].Name;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            if ($scope.Corestats.length > 0) {\r\n                                                $scope.lists = false;\r\n                                                $scope.list = true;\r\n                                            }\r\n                                            else {\r\n                                                $scope.lists = true;\r\n                                                $scope.list = false;\r\n                                            }\r\n                                            $state.go(\"profile.Corestats\", { RuleSetId: $scope.Corestats[0].RulesetId })\r\n                                        }\r\n                                    })\r\n                                    $state.go(\"profile.Corestats\", { RuleSetId: $scope.Corestats[0].RulesetId })\r\n                                }\r\n                                else if (data.data.StatusCode == 400) {\r\n\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                    }\r\n                                }\r\n                            })\r\n\r\n                          \r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n                $scope.RemoveCorestat = function (item) {\r\n                    $scope.Corestats = rulesetDataShareService.getcorestat();\r\n\r\n                    var dlg = dialogs.confirm(\r\n                        'Confirm Delete',\r\n                        'Are you sure you want to delete this Corestat, \"' + item.Name + '\"',\r\n                        {}\r\n                    );\r\n\r\n                    dlg.result.then(\r\n                        function (res) {\r\n                            if (res == \"yes\") {\r\n                                $scope.CorestatList = [];\r\n                                $scope.CorestatList.push(item);\r\n                                //$scope.Corestat = item;\r\n                                var deletecorestat = rulesetService.DeleteCorestats($scope.CorestatList);\r\n                                deletecorestat.then(function (data) {\r\n                                    if (data.data.StatusCode == 200) {\r\n                                        $scope.Corestats = data.data.PayLoad;\r\n                                        rulesetService.GetTypes().then(function (data) {\r\n\r\n                                            if (data.data.StatusCode == 200) {\r\n                                                $scope.Types = data.data.PayLoad;\r\n                                                //$scope.Types = rulesetDataShareService.getRpgtypeData()\r\n                                                for (var i = 0; i < $scope.Types.length; i++) {\r\n                                                    for (var j = 0; j < $scope.Corestats.length; j++) {\r\n                                                        if ($scope.Types[i].TypeId == $scope.Corestats[j].TypeId) {\r\n                                                            $scope.Corestats[j].TypeName = $scope.Types[i].Name;\r\n                                                        }\r\n                                                    }\r\n\r\n                                                }\r\n                                                if ($scope.Corestats.length > 0) {\r\n                                                    $scope.lists = false;\r\n                                                    $scope.list = true;\r\n                                                }\r\n                                                else {\r\n                                                    $scope.lists = true;\r\n                                                    $scope.list = false;\r\n                                                }\r\n\r\n                                                //$state.go(\"profile.Corestats\", { RuleSetId: $scope.RulesetId })\r\n                                            }\r\n                                        })\r\n                                        //$state.go(\"profile.Corestats\", { RuleSetId: $scope.NewRuleSet.Id });\r\n                                    }\r\n                                    else if (data.data.StatusCode == 400)\r\n                                    {\r\n                                        if (data.data.ShowToUser == true) {\r\n                                            toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                        }\r\n                                    }\r\n                                })\r\n                            }\r\n                        })\r\n                   \r\n                };\r\n\r\n                $scope.BackCoreStat = function () {\r\n                    //$scope.NewRuleSet = rulesetDataShareService.getruleset();\r\n                    //rulesetDataShareService.setruleset($scope.NewRuleSet);\r\n                    $state.go(\"profile.AddNewRuleSet\");\r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                }\r\n\r\n            }\r\n            else if ($state.params.action == 4) {\r\n                $scope.RulesetId = parseInt($state.params.RuleSetId);\r\n                var url = $location.absUrl().split('?')[0];\r\n                if (url.indexOf(\"Items\") > 0) {\r\n                    if (angular.equals({}, rulesetDataShareService.getRulesetItems()) == false) {\r\n                        $scope.RulesetItems = rulesetDataShareService.getRulesetItems();\r\n                        if ($scope.RulesetItems == null || $scope.RulesetItems == undefined || $scope.RulesetItems == {}) {\r\n                            $scope.RulesetItems = [];\r\n                        }\r\n                        if ($scope.RulesetItems.length > 0) {\r\n                            $scope.list = true;\r\n                            $scope.grid = true;\r\n                            $scope.Itemlist = false;\r\n                        }\r\n                        else {\r\n                            $scope.Itemlist = true;\r\n                            $scope.list = false;\r\n                            $scope.grid = false\r\n                        }\r\n                    }\r\n                    else {\r\n                        var items = rulesetService.GetRulesetItems($scope.RulesetId);\r\n                        items.then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                //$scope.Ruleset = data.data.PayLoad;\r\n                                $scope.RulesetItems = data.data.PayLoad;\r\n                                if ($scope.RulesetItems == null || $scope.RulesetItems == undefined || $scope.RulesetItems == {}) {\r\n                                    $scope.RulesetItems = [];\r\n                                }\r\n                                rulesetDataShareService.setRulesetItems($scope.RulesetItems);\r\n                                if ($scope.RulesetItems.length > 0) {\r\n                                    $scope.list = true;\r\n                                    $scope.grid = true;\r\n                                    $scope.Itemlist = false;\r\n                                }\r\n                                else {\r\n                                    $scope.list = false;\r\n                                    $scope.grid = false;\r\n                                    $scope.Itemlist = true;\r\n                                }\r\n                                $state.go(\"profile.Items\", { RuleSetId: $scope.RulesetId })\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                            }\r\n                            else if (data.data.StatusCode == 400) {\r\n                                if (data.ShowToUser == true) {\r\n                                    $(\"#loading\").fadeOut(\"slow\");\r\n                                    toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n\r\n                                }\r\n                            }\r\n\r\n                        })\r\n                    }\r\n                }\r\n                else if (url.indexOf(\"Spells\") > 0) {\r\n                    if (angular.equals({}, rulesetDataShareService.getRulesetSpells()) == false) {\r\n                        $scope.RulesetSpells = rulesetDataShareService.getRulesetSpells();\r\n                        if ($scope.RulesetSpells.length > 0) {\r\n                            $scope.list = true;\r\n                            $scope.grid = true;\r\n                            $scope.Itemlist = false;\r\n                        }\r\n                        else {\r\n                            $scope.list = false;\r\n                            $scope.grid = false;\r\n                            $scope.Itemlist = true;\r\n                        }\r\n                        //$state.go(\"profile.Spells\", { RuleSetId: $scope.Ruleset.Id })\r\n                    }\r\n                    else {\r\n                        var spells = rulesetService.GetRulesetSpells($scope.RulesetId);\r\n                        spells.then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                //$scope.Ruleset = data.data.PayLoad;\r\n                                $scope.RulesetSpells = data.data.PayLoad;\r\n                                rulesetDataShareService.setRulesetSpells($scope.RulesetSpells);\r\n                                if ($scope.RulesetSpells.length > 0) {\r\n                                    $scope.list = true;\r\n                                    $scope.grid = true;\r\n                                    $scope.Itemlist = false;\r\n                                }\r\n                                else {\r\n                                    $scope.list = false;\r\n                                    $scope.grid = false;\r\n                                    $scope.Itemlist = true;\r\n                                }\r\n                                $state.go(\"profile.Spells\", { RuleSetId: $scope.RulesetId });\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                            }\r\n                            else if (data.data.StatusCode == 400) {\r\n                                if (data.ShowToUser == true) {\r\n                                    $(\"#loading\").fadeOut(\"slow\");\r\n                                    toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                }\r\n                            }\r\n\r\n                        })\r\n                    }\r\n                }\r\n                else if (url.indexOf(\"Abilities\") > 0) {\r\n                    if (angular.equals({}, rulesetDataShareService.getRulesetAbilities()) == false) {\r\n                        $scope.RulesetAbilities = rulesetDataShareService.getRulesetAbilities();\r\n                        if ($scope.RulesetAbilities.length > 0) {\r\n                            $scope.list = true;\r\n                            $scope.grid = true;\r\n                            $scope.Itemlist = false;\r\n                        }\r\n                        else {\r\n                            $scope.list = false;\r\n                            $scope.grid = false;\r\n                            $scope.Itemlist = true;\r\n                        }\r\n                        //$state.go(\"profile.Abilities\", { RuleSetId: $scope.NewRuleSet.Id })\r\n                    }\r\n                    else {\r\n                        var abilities = rulesetService.GetRulesetAbilities($scope.RulesetId);\r\n                        abilities.then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                //$scope.Ruleset = data.data.PayLoad;\r\n                                $scope.RulesetAbilities = data.data.PayLoad;\r\n                                rulesetDataShareService.setRulesetAbilities($scope.RulesetAbilities);\r\n                                if ($scope.RulesetAbilities.length > 0) {\r\n                                    $scope.list = true;\r\n                                    $scope.grid = true;\r\n                                    $scope.Itemlist = false;\r\n                                }\r\n                                else {\r\n                                    $scope.list = false;\r\n                                    $scope.grid = false;\r\n                                    $scope.Itemlist = true;\r\n                                }\r\n                                $state.go(\"profile.Abilities\", { RuleSetId: $scope.RulesetId })\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                            }\r\n                            else if (data.data.StatusCode == 400) {\r\n                                if (data.ShowToUser == true) {\r\n                                    $(\"#loading\").fadeOut(\"slow\");\r\n                                    toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                }\r\n                            }\r\n\r\n                        })\r\n\r\n                    }\r\n                }\r\n                else {\r\n                    if (parseInt($scope.RulesetId) > 0) {\r\n                        UpdateRuleSet($scope.RulesetId, CopyOrUpdate);\r\n                    }\r\n                }\r\n\r\n                $scope.BackItem = function () {\r\n                    // $scope.NewRuleSet = rulesetDataShareService.getruleset();\r\n                    //rulesetDataShareService.setruleset($scope.NewRuleSet);\r\n                    //$state.go(\"profile.NewRuleSet\");\r\n                    $state.go(\"profile.AddNewRuleSet\");\r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                }\r\n\r\n                $scope.BackSpell = function () {\r\n                    //$scope.NewRuleSet = rulesetDataShareService.getruleset();\r\n                    //rulesetDataShareService.setruleset($scope.NewRuleSet);\r\n\r\n                    // $state.go(\"profile.NewRuleSet\");\r\n                    $state.go(\"profile.AddNewRuleSet\");\r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                }\r\n\r\n                $scope.BackAbility = function () {\r\n                    // $scope.NewRuleSet = rulesetDataShareService.getruleset();\r\n                    //rulesetDataShareService.setruleset($scope.NewRuleSet);\r\n\r\n                    // $state.go(\"profile.NewRuleSet\");\r\n                    $state.go(\"profile.AddNewRuleSet\");\r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                }\r\n\r\n                $scope.showlist = function () {\r\n                    $scope.list = true;\r\n                    $scope.grid = false;\r\n                }\r\n\r\n                $scope.showgrid = function () {\r\n                    $scope.list = false;\r\n                    $scope.grid = true;\r\n                }\r\n\r\n                //For Items\r\n                $scope.CreateItem = function () {\r\n                    //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                    var itemsmetadata = rulesetService.GetItemsMetadata($scope.RulesetId);\r\n                    itemsmetadata.then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            //$scope.RulesetItems = rulesetDataShareService.get();\r\n                            $scope.ItemProperties = data.data.PayLoad.RuleSetMetaData.ItemProperties;\r\n                            $scope.Rulesetproperty = data.data.PayLoad.Rulesetproperty;\r\n                            $scope.Spells = data.data.PayLoad.Spells;\r\n                            rulesetDataShareService.setRulesetSpells($scope.Spells);\r\n                            $scope.Abilities = data.data.PayLoad.Abilities;\r\n                            rulesetDataShareService.setRulesetAbilities($scope.Abilities);\r\n                            $scope.buttontext = \"Create\";\r\n                            $scope.tabName = \"Create New Item\";\r\n                            $scope.IsButtonDisabled = false;\r\n                            $scope.isBtnShow = false;\r\n                            $scope.OperationTypeMode = \"Create\"\r\n                            var weight = \"\";\r\n\t\t\t\t\t\t\tvar volume = \"\";\r\n\t\t\t\t\t\t\tvar currency = \"\";\r\n                            $scope.Content_ItemProperties = [];\r\n                            if ($scope.RulesetItems != null) {\r\n                                for (var i = 0; i < $scope.RulesetItems.length; i++) {\r\n                                    $scope.Content_ItemProperties.push($scope.RulesetItems[i].ItemProperties[0].Value.Text.value);\r\n                                }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor (var i = 0; i < $scope.Rulesetproperty.length; i++) {\r\n\t\t\t\t\t\t\t\tif ($scope.Rulesetproperty[i].TypeId == 1 && ($scope.Rulesetproperty[i].Name.indexOf('Currency Label') > -1)) {\r\n\t\t\t\t\t\t\t\t\tcurrency = $scope.Rulesetproperty[i].Value.Text.value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor (var j = 0; j < $scope.ItemProperties.length; j++) {\r\n\t\t\t\t\t\t\t\tif ($scope.ItemProperties[j].TypeId == 14) {\r\n\t\t\t\t\t\t\t\t\t$scope.ItemProperties[j].Value.Text = currency;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n                            for (var i = 0; i < $scope.Rulesetproperty.length; i++) {\r\n\t\t\t\t\t\t\t\tif ($scope.Rulesetproperty[i].TypeId == 1 && ($scope.Rulesetproperty[i].Name.indexOf('Weight') > -1)) {\r\n\t\t\t\t\t\t\t\t\tweight = $scope.Rulesetproperty[i].Value.Text.value;\r\n                                }\r\n                            }\r\n                            for (var j = 0; j < $scope.ItemProperties.length; j++) {\r\n                                if ($scope.ItemProperties[j].TypeId == 7) {\r\n                                    $scope.ItemProperties[j].Value.Weight.units.selectedUnit = weight;\r\n                                }\r\n                            }\r\n                            for (var i = 0; i < $scope.Rulesetproperty.length; i++) {\r\n                                if (($scope.Rulesetproperty[i].TypeId == 1) && ($scope.Rulesetproperty[i].Name.indexOf('Volume') > -1)) {\r\n                                    volume = $scope.Rulesetproperty[i].Value.Text.value;\r\n                                }\r\n                            }\r\n                            for (var j = 0; j < $scope.ItemProperties.length; j++) {\r\n                                if ($scope.ItemProperties[j].TypeId == 13) {\r\n                                    $scope.ItemProperties[j].Value.Volume.units.selectedUnit = volume;\r\n                                }\r\n                            }\r\n\t\t\t\t\t\t\tconsole.log(\"$scope.ItemProperties: \", $scope.ItemProperties);\r\n                            var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogCreateItem',\r\n                                { scope: $scope.ItemProperties, tabName: $scope.tabName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow, Content_ItemProperties: $scope.Content_ItemProperties, ItemMode: $scope.OperationTypeMode, Spells: $scope.Spells, Abilities: $scope.Abilities }\r\n                            );\r\n\r\n                            dlg.result.then(function (res) {\r\n\r\n                             \r\n\r\n                                if (res != \"cancel\") {\r\n                                    var NewItem = {}\r\n\t\t\t\t\t\t\t\t\tNewItem.ItemProperties = res.Properties;\r\n\t\t\t\t\t\t\t\t\tconsole.log(\"res.Properties: \", res.Properties);\r\n                                    NewItem.AssociatedSpells = res.AssociatedSpells;\r\n                                    NewItem.AssociatedAbilities = res.AssociatedAbilities;\r\n                                    NewItem.RulesetID = $scope.RulesetId;\r\n                                    //var ItemProperties = { \"ItemProperties\": res.Properties };\r\n                                    //var AssociatedSpells = { \"AssociatedSpells\": res.AssociatedSpells };\r\n                                    //$scope.NewRuleSet.Items.push(ItemProperties);\r\n                                    //$scope.NewRuleSet.Items.push(AssociatedSpells);\r\n                                    $scope.ItemList = [];\r\n                                    $scope.ItemList.push(NewItem);\r\n                                    var saveitem = rulesetService.CreateItems($scope.ItemList);\r\n                                    saveitem.then(function (data) {\r\n                                        if (data.data.StatusCode == 200) {\r\n                                            //$scope.Ruleset = data.data.PayLoad.Result;\r\n                                            var createdRulesetItems = [];\r\n                                            //createdRulesetItems = data.data.PayLoad.Result;\r\n                                            createdRulesetItems = data.data.PayLoad;\r\n                                            for (var i = 0; i < createdRulesetItems.length; i++) {\r\n                                                $scope.RulesetItems.push(createdRulesetItems[i]);\r\n                                            }\r\n                                            rulesetDataShareService.setRulesetItems($scope.RulesetItems);\r\n                                            if ($scope.RulesetItems.length > 0) {\r\n                                                $scope.list = true;\r\n                                                $scope.grid = true;\r\n                                                $scope.Itemlist = false;\r\n                                            }\r\n                                            else {\r\n                                                $scope.list = false;\r\n                                                $scope.grid = false;\r\n                                                $scope.Itemlist = true;\r\n                                            }\r\n                                            $(\"#loading\").fadeOut(\"slow\");\r\n                                            //$state.go(\"profile.Items\", { RuleSetId: $scope.Ruleset.Id })\r\n                                        }\r\n                                        else if (data.data.StatusCode == 400) {\r\n                                            if (data.data.ShowToUser == true) {\r\n                                                toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                            }\r\n                                        }\r\n                                       \r\n                                    });\r\n\r\n                                }\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                            });\r\n                        }\r\n                        else if (data.data.StatusCode == 400) {\r\n                            if (data.ShowToUser == true) {\r\n                                toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                };\r\n\r\n                $scope.CopyItem = function (item, count) {\r\n                    //$scope.RulesetItems = rulesetDataShareService.getRulesetItems();\r\n                    //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                    var spells = rulesetService.GetRulesetSpells($scope.RulesetId);\r\n                    spells.then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            $scope.Spells = data.data.PayLoad;\r\n                            var abilities = rulesetService.GetRulesetAbilities($scope.RulesetId);\r\n                            abilities.then(function (data) {\r\n                                if (data.data.StatusCode == 200) {\r\n                                    $scope.Abilities = data.data.PayLoad;\r\n                                    $scope.pageName = \"Copying Item\";\r\n                                    $scope.buttontext = \"Copy\";\r\n                                    $scope.IsButtonDisabled = true;\r\n                                    $scope.isBtnShow = true;\r\n                                    $scope.OperationTypeMode = \"Copy\"\r\n                                    $scope.Content_ItemProperties = [];\r\n                                    $scope.SelectAssociatedSpells = true;\r\n                                    $scope.SelectAssociatedAbilities = true;\r\n                                    if ($scope.RulesetItems != null) {\r\n                                        for (var i = 0; i < $scope.RulesetItems.length; i++) {\r\n                                            $scope.Content_ItemProperties.push($scope.RulesetItems[i].ItemProperties[0].Value.Text.value);\r\n                                        }\r\n                                    }\r\n                                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogCopyItem',\r\n                                        { scope: item.ItemProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow, ItemMode: $scope.OperationTypeMode, Spells: $scope.Spells, AssociatedSpells: $scope.RulesetItems[count].AssociatedSpells, Abilities: $scope.Abilities, AssociatedAbilities: $scope.RulesetItems[count].AssociatedAbilities, Content_ItemProperties: $scope.Content_ItemProperties, SelectAssociatedSpells: $scope.SelectAssociatedSpells, SelectAssociatedAbilities: $scope.SelectAssociatedAbilities }\r\n                                    );\r\n\r\n                                    dlg.result.then(function (res) {\r\n                                       // $(\"#loading\").css(\"display\", \"block\");\r\n                                        if (res != \"cancel\") {\r\n                                            var ItemProperties = { \"ItemProperties\": res.ItemProperties };\r\n                                            for (var i = 0; i < ItemProperties.ItemProperties.length; i++) {\r\n                                                ItemProperties.ItemProperties[i].ContentId = 0;\r\n                                            }\r\n                                            //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                                            var NewItem = {}\r\n                                            //NewItem.ItemProperties = res.Properties;\r\n                                            NewItem.ItemProperties = res.ItemProperties;\r\n                                            NewItem.AssociatedSpells = res.AssociatedSpells;\r\n                                            NewItem.AssociatedAbilities = res.AssociatedAbilities;\r\n                                            NewItem.RulesetId = $scope.RulesetId;\r\n                                            //$scope.RuleSetItems.push(ItemProperties);\r\n                                            $scope.ItemList = [];\r\n                                            $scope.ItemList.push(NewItem);\r\n                                            var copyitem = rulesetService.CopyItems($scope.ItemList);\r\n                                            copyitem.then(function (data) {\r\n                                                $(\"#loading\").fadeOut(\"slow\");\r\n                                                if (data.data.StatusCode == 200) {\r\n                                                    //$scope.Ruleset = data.data.PayLoad.Result;\r\n                                                    var createdRulesetItems = [];\r\n                                                    //createdRulesetItems = data.data.PayLoad.Result;\r\n                                                    createdRulesetItems = data.data.PayLoad;\r\n                                                    for (var i = 0; i < createdRulesetItems.length; i++) {\r\n                                                        $scope.RulesetItems.push(createdRulesetItems[i]);\r\n                                                    }\r\n                                                    rulesetDataShareService.setRulesetItems($scope.RulesetItems);\r\n                                                    if ($scope.RulesetItems.length > 0) {\r\n                                                        $scope.list = true;\r\n                                                        $scope.grid = true;\r\n                                                        $scope.Itemlist = false;\r\n                                                    }\r\n                                                    else {\r\n                                                        $scope.list = false;\r\n                                                        $scope.grid = false;\r\n                                                        $scope.Itemlist = true;\r\n                                                    }\r\n\r\n                                                    //$state.go(\"profile.Items\", { RuleSetId: $scope.Ruleset.Id })\r\n                                                }\r\n                                                else if (data.data.StatusCode == 400) {\r\n                                                    if (data.data.ShowToUser == true) {\r\n                                                        toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                                    }\r\n                                                }\r\n                                               \r\n                                            });\r\n                                        }\r\n\r\n                                        $(\"#loading\").fadeOut(\"slow\");\r\n                                    });\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                    // $scope.Spells = rulesetDataShareService.getspell();\r\n                    //$scope.Abilities = rulesetDataShareService.getability();\r\n\r\n                }\r\n\r\n                $scope.EditItem = function (item, count) {\r\n                    //$scope.RulesetItems = rulesetDataShareService.getRulesetItems();\r\n                    //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                    var spells = rulesetService.GetRulesetSpells($scope.RulesetId);\r\n                    spells.then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            $scope.Spells = data.data.PayLoad;\r\n                            var abilities = rulesetService.GetRulesetAbilities($scope.RulesetId);\r\n                            abilities.then(function (data) {\r\n                                if (data.data.StatusCode == 200) {\r\n                                    $scope.Abilities = data.data.PayLoad;\r\n                                    $scope.pageName = \"Editing Item\";\r\n                                    $scope.buttontext = \"Update\";\r\n                                    $scope.IsButtonDisabled = true;\r\n                                    $scope.isBtnShow = true;\r\n                                    $scope.OperationTypeMode = \"Edit\"\r\n\r\n                                    //var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogCreateItem',\r\n                                    //    { scope: $scope.ItemProperties, tabName: $scope.tabName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow, Content_ItemProperties: $scope.Content_ItemProperties, ItemMode: $scope.OperationTypeMode, AssociatedSpells: $scope.NewRuleSet.Spells, AssociatedAbilities: $scope.NewRuleSet.Abilities }\r\n                                    //);\r\n\r\n                                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogCopyItem',\r\n                                        { scope: item.ItemProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow, ItemMode: $scope.OperationTypeMode, Spells: $scope.Spells, AssociatedSpells: $scope.RulesetItems[count].AssociatedSpells, Abilities: $scope.Abilities, AssociatedAbilities: $scope.RulesetItems[count].AssociatedAbilities }\r\n                                    );\r\n\r\n                                    dlg.result.then(function (res) {\r\n                                       // $(\"#loading\").css(\"display\", \"block\");\r\n                                        if (res != \"cancel\") {\r\n                                            //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                                            var NewItem = {}\r\n                                            //NewItem.ItemProperties = res.Properties;\r\n                                            NewItem.ItemProperties = res.ItemProperties;\r\n                                            NewItem.AssociatedSpells = res.AssociatedSpells;\r\n                                            NewItem.AssociatedAbilities = res.AssociatedAbilities;\r\n                                            NewItem.RulesetId = $scope.RulesetId;\r\n                                            $scope.ItemList = [];\r\n                                            $scope.ItemList.push(NewItem);\r\n                                            var edititem = rulesetService.UpdateItems($scope.ItemList);\r\n                                            edititem.then(function (data) {\r\n                                                $(\"#loading\").fadeOut(\"slow\");\r\n                                                if (data.data.StatusCode == 200) {\r\n                                                    //$scope.Corestats = data.data.PayLoad;\r\n                                                    //$scope.Ruleset = data.data.PayLoad.Result;\r\n                                                    //$scope.RulesetItems = data.data.PayLoad.Result;\r\n\r\n                                                   // var updatedRulesetItems = data.data.PayLoad.Result;\r\n                                                    var updatedRulesetItems = data.data.PayLoad;\r\n\r\n                                                    for (var i = 0; i < updatedRulesetItems.length; i++) {\r\n                                                        for (var j = 0; j < $scope.RulesetItems.length; j++) {\r\n                                                            if (updatedRulesetItems[i].ItemProperties[0].ContentId == $scope.RulesetItems[j].ItemProperties[0].ContentId) {\r\n                                                                $scope.RulesetItems[j] = updatedRulesetItems[i];\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n\r\n                                                    rulesetDataShareService.setRulesetItems($scope.RulesetItems);\r\n\r\n                                                    if ($scope.RulesetItems.length > 0) {\r\n                                                        $scope.list = true;\r\n                                                        $scope.grid = true;\r\n                                                        $scope.Itemlist = false;\r\n                                                    }\r\n                                                    else {\r\n                                                        $scope.list = false;\r\n                                                        $scope.grid = false;\r\n                                                        $scope.Itemlist = true;\r\n                                                    }\r\n                                                    //$state.go(\"profile.Items\", { RuleSetId: $scope.Ruleset.Id })\r\n                                                    // $state.go(\"profile.Items\")\r\n                                                }\r\n                                                else if (data.data.StatusCode == 400) {\r\n                                                    if (data.data.ShowToUser == true) {\r\n                                                        toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                                    }\r\n                                                }\r\n                                            })\r\n\r\n                                            //$scope.NewRuleSet.Items[count] = NewItem;\r\n\r\n                                        }\r\n                                        $(\"#loading\").fadeOut(\"slow\");\r\n                                    });\r\n                                }\r\n                               \r\n                            })\r\n                        }\r\n                    });\r\n                    //$scope.Spells = rulesetDataShareService.getspell();\r\n                    //$scope.Abilities = rulesetDataShareService.getability();\r\n\r\n                }\r\n\r\n                $scope.Removeitem = function (item) {\r\n                   \r\n                    //var index = -1;\r\n                    //$scope.RulesetItems = rulesetDataShareService.get();\r\n\r\n                    var dlg = dialogs.confirm(\r\n                        'Confirm Delete',\r\n                        'Are you sure you want to delete this Item, \"' + item.ItemProperties[0].Value.Text.value + '\"',\r\n                        {}\r\n                    );\r\n\r\n                    dlg.result.then(\r\n                        function (res) {\r\n                           // $(\"#loading\").css(\"display\", \"block\");\r\n                            if (res == \"yes\") {\r\n                                var deleteItemList = [];\r\n                                //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                                item.RulesetId = $scope.RulesetId;\r\n                                deleteItemList.push(item);\r\n                                //$scope.Corestat = item;\r\n                                var deleteitems = rulesetService.DeleteItems(deleteItemList);\r\n                                deleteitems.then(function (data) {\r\n                                    \r\n                                    $(\"#loading\").fadeOut(\"slow\");\r\n                                    if (data.data.StatusCode == 200) {\r\n                                        //$scope.Ruleset = data.data.PayLoad;\r\n                                        //var deletedRulesetItems = data.data.PayLoad.Result;\r\n                                        var deletedRulesetItems = data.data.PayLoad;\r\n\r\n                                        var deletedRulesetItemIndexs = [];\r\n                                        for (var i = 0; i < deletedRulesetItems.length; i++) {\r\n                                            for (var j = 0; j < $scope.RulesetItems.length; j++) {\r\n                                                if (deletedRulesetItems[i].ItemProperties[0].ContentId == $scope.RulesetItems[j].ItemProperties[0].ContentId) {\r\n                                                    deletedRulesetItemIndexs.push(j);\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        for (var i = 0; i < deletedRulesetItemIndexs.length; i++) {\r\n                                            $scope.RulesetItems.splice(deletedRulesetItemIndexs[i], 1);\r\n                                        }\r\n\r\n                                        rulesetDataShareService.setRulesetItems($scope.RulesetItems);\r\n\r\n                                        if ($scope.RulesetItems.length > 0) {\r\n                                            $scope.list = true;\r\n                                            $scope.grid = true;\r\n                                            $scope.Itemlist = false;\r\n                                        }\r\n                                        else {\r\n                                            $scope.list = false;\r\n                                            $scope.grid = false;\r\n                                            $scope.Itemlist = true;\r\n                                        }\r\n                                        //$state.go(\"profile.Items\", { RuleSetId: $scope.RulesetId })\r\n                                    }\r\n                                    else if (data.data.StatusCode == 400) {\r\n                                        if (data.data.ShowToUser == true) {\r\n                                            toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                        })\r\n                  \r\n\r\n\r\n                };\r\n\r\n                //For Spells\r\n\r\n\r\n                $scope.CreateSpell = function () {\r\n\r\n                    //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                    var spellsmetadata = rulesetService.GetSpellsMetadata($scope.RulesetId);\r\n                    spellsmetadata.then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            $scope.RulesetSpells = rulesetDataShareService.getRulesetSpells();\r\n                            $scope.SpellProperties = data.data.PayLoad.RuleSetMetaData.SpellProperties;\r\n                            $scope.Rulesetproperty = data.data.PayLoad.Rulesetproperty;\r\n                            $scope.buttontext = \"Create\";\r\n                            $scope.tabName = \"Create New Spell\";\r\n                            $scope.isBtnShow = false;\r\n                            $scope.OperationTypeMode = \"Create\"\r\n                            var weight = \"\";\r\n                            var volume = \"\";\r\n                            $scope.Content_SpellProperties = [];\r\n                            if ($scope.RulesetSpells != null) {\r\n                                for (var i = 0; i < $scope.RulesetSpells.length; i++) {\r\n                                    $scope.Content_SpellProperties.push($scope.RulesetSpells[i].SpellProperties[0].Value.Text.value);\r\n                                }\r\n                            }\r\n                            for (var i = 0; i < $scope.Rulesetproperty.length; i++) {\r\n                                if ($scope.Rulesetproperty[i].TypeId == 7) {\r\n                                    weight = $scope.Rulesetproperty[i].Units.selectedUnit;\r\n                                }\r\n                            }\r\n                            for (var j = 0; j < $scope.SpellProperties.length; j++) {\r\n                                if ($scope.SpellProperties[j].TypeId == 7) {\r\n                                    $scope.SpellProperties[j].Value.Weight.units.selectedUnit = weight;\r\n                                }\r\n                            }\r\n                            for (var i = 0; i < $scope.Rulesetproperty.length; i++) {\r\n                                if (($scope.Rulesetproperty[i].TypeId == 1) && ($scope.Rulesetproperty[i].Name.indexOf('Volume') > -1)) {\r\n                                    volume = $scope.Rulesetproperty[i].Value.Text.value;\r\n                                }\r\n                            }\r\n                            for (var j = 0; j < $scope.SpellProperties.length; j++) {\r\n                                if ($scope.SpellProperties[j].TypeId == 13) {\r\n                                    $scope.SpellProperties[j].Value.Volume.units.selectedUnit = volume;\r\n                                }\r\n                            }\r\n                            var dlg = dialogs.create('/views/dialogs/createspells.html', 'dialogCreateSpell',\r\n                                { scope: $scope.SpellProperties, tabName: $scope.tabName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, Content_SpellProperties: $scope.Content_SpellProperties, SpellMode: $scope.OperationTypeMode }\r\n                            );\r\n\r\n                            dlg.result.then(function (res) {\r\n                               // $(\"#loading\").css(\"display\", \"block\");\r\n\r\n                                if (res != \"cancel\") {\r\n                                    var SpellProperties = res;\r\n                                    var newspell = {}\r\n                                    newspell.SpellProperties = SpellProperties;\r\n                                    newspell.RulesetID = $scope.RulesetId;\r\n\r\n                                    $scope.SpellList = [];\r\n                                    $scope.SpellList.push(newspell);\r\n                                    var savespell = rulesetService.CreateSpells($scope.SpellList);\r\n                                    savespell.then(function (data) {\r\n                                        $(\"#loading\").fadeOut(\"slow\");\r\n                                        if (data.data.StatusCode == 200) {\r\n\r\n                                            \r\n                                            //$scope.Ruleset = data.data.PayLoad.Result;\r\n                                            var createdRulesetSpells = [];\r\n                                            //createdRulesetSpells = data.data.PayLoad.Result;\r\n                                            createdRulesetSpells = data.data.PayLoad;\r\n                                            for (var i = 0; i < createdRulesetSpells.length; i++) {\r\n                                                $scope.RulesetSpells.push(createdRulesetSpells[i]);\r\n                                            }\r\n                                            rulesetDataShareService.setRulesetSpells($scope.RulesetSpells);\r\n                                            if ($scope.RulesetSpells.length > 0) {\r\n                                                $scope.list = true;\r\n                                                $scope.grid = true;\r\n                                                $scope.Itemlist = false;\r\n                                            }\r\n                                            else {\r\n                                                $scope.list = false;\r\n                                                $scope.grid = false;\r\n                                                $scope.Itemlist = true;\r\n                                            }\r\n                                            //$state.go(\"profile.Spells\", { RuleSetId: $scope.Ruleset.Id })\r\n                                        }\r\n                                        else if (data.data.StatusCode == 400) {\r\n                                            if (data.data.ShowToUser == true) {\r\n                                                toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                            }\r\n                                        }\r\n                                    });\r\n\r\n                                }\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                            });\r\n                        }\r\n                       \r\n                    })\r\n\r\n                };\r\n\r\n                $scope.CopySpell = function (item, count) {\r\n                    $scope.RulesetSpells = rulesetDataShareService.getRulesetSpells();\r\n                    $scope.pageName = \"Copying Spell\";\r\n                    $scope.buttontext = \"Copy\";\r\n                    $scope.isBtnShow = true;\r\n                    $scope.OperationTypeMode = \"Copy\"\r\n                    $scope.Content_SpellProperties = [];\r\n                    if ($scope.RulesetSpells != null) {\r\n                        for (var i = 0; i < $scope.RulesetSpells.length; i++) {\r\n                            $scope.Content_SpellProperties.push($scope.RulesetSpells[i].SpellProperties[0].Value.Text.value);\r\n                        }\r\n                    }\r\n                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogCopySpell',\r\n                        { scope: item.SpellProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, Content_SpellProperties: $scope.Content_SpellProperties, SpellMode: $scope.OperationTypeMode }\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                       // $(\"#loading\").css(\"display\", \"block\");\r\n                        if (res != \"cancel\") {\r\n\r\n                            var SpellProperties = res;\r\n                            for (var i = 0; i < SpellProperties.length; i++) {\r\n                                SpellProperties[i].ContentId = 0;\r\n                            }\r\n                            //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                            var NewSpell = {}\r\n                            //NewItem.ItemProperties = res.Properties;\r\n                            NewSpell.SpellProperties = SpellProperties;\r\n                            NewSpell.RulesetId = $scope.RulesetId;\r\n                            var SpellList = [];\r\n                            SpellList.push(NewSpell);\r\n                            var copyspell = rulesetService.CopySpells(SpellList);\r\n                            copyspell.then(function (data) {\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                if (data.data.StatusCode == 200) {\r\n                                    //$scope.RulesetSpells = data.data.PayLoad.Result;\r\n                                    var createdRulesetSpells = [];\r\n                                    //createdRulesetSpells = data.data.PayLoad.Result;\r\n                                    createdRulesetSpells = data.data.PayLoad;\r\n                                    for (var i = 0; i < createdRulesetSpells.length; i++) {\r\n                                        $scope.RulesetSpells.push(createdRulesetSpells[i]);\r\n                                    }\r\n\r\n                                    rulesetDataShareService.setRulesetSpells($scope.RulesetSpells);\r\n\r\n                                    if ($scope.RulesetSpells.length > 0) {\r\n                                        $scope.list = true;\r\n                                        $scope.grid = true;\r\n                                        $scope.Itemlist = false;\r\n                                    }\r\n                                    else {\r\n                                        $scope.list = false;\r\n                                        $scope.grid = false;\r\n                                        $scope.Itemlist = true;\r\n                                    }\r\n                                    //$state.go(\"profile.Spells\", { RuleSetId: $scope.Ruleset.Id })\r\n                                }\r\n                                else if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                    }\r\n                                }\r\n                            });\r\n                            //$scope.NewRuleSet.Spells.push(SpellProperties);\r\n\r\n                        }\r\n                        $(\"#loading\").fadeOut(\"slow\");\r\n\r\n                    });\r\n                }\r\n\r\n                $scope.EditSpell = function (item, count) {\r\n                    $scope.RulesetSpells = rulesetDataShareService.getRulesetSpells();\r\n                    $scope.pageName = \"Editing Spell\";\r\n                    $scope.buttontext = \"Update\";\r\n                    $scope.isBtnShow = true;\r\n                    $scope.OperationTypeMode = \"Edit\"\r\n                    var dlg = dialogs.create('/views/dialogs/createspells.html', 'dialogCopySpell',\r\n                        { scope: item.SpellProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, SpellMode: $scope.OperationTypeMode }\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                       // $(\"#loading\").css(\"display\", \"block\");\r\n                        if (res != \"cancel\") {\r\n                            var SpellProperties = res;\r\n                            //$scope.NewRuleSet.Spells[count] = SpellProperties\r\n                            //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                            var NewSpell = {}\r\n                            //NewItem.ItemProperties = res.Properties;\r\n                            NewSpell.SpellProperties = SpellProperties;\r\n                            NewSpell.RulesetId = $scope.RulesetId;\r\n                            var SpellList = [];\r\n                            SpellList.push(NewSpell);\r\n                            var editspell = rulesetService.UpdateSpells(SpellList);\r\n                            editspell.then(function (data) {\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                if (data.data.StatusCode == 200) {\r\n                                    //$scope.RulesetSpells = data.data.PayLoad.Result;\r\n\r\n                                    //var updatedRulesetSpells = data.data.PayLoad.Result;\r\n                                    var updatedRulesetSpells = data.data.PayLoad;\r\n\r\n                                    for (var i = 0; i < updatedRulesetSpells.length; i++) {\r\n                                        for (var j = 0; j < $scope.RulesetSpells.length; j++) {\r\n                                            if (updatedRulesetSpells[i].SpellProperties[0].ContentId == $scope.RulesetSpells[j].SpellProperties[0].ContentId) {\r\n                                                $scope.RulesetSpells[j] = updatedRulesetSpells[i];\r\n                                            }\r\n                                        }\r\n                                    }\r\n\r\n                                    rulesetDataShareService.setRulesetSpells($scope.RulesetSpells);\r\n\r\n                                    if ($scope.RulesetSpells.length > 0) {\r\n                                        $scope.list = true;\r\n                                        $scope.grid = true;\r\n                                        $scope.Itemlist = false;\r\n                                    }\r\n                                    else {\r\n                                        $scope.list = false;\r\n                                        $scope.grid = false;\r\n                                        $scope.Itemlist = true;\r\n                                    }\r\n                                    //$state.go(\"profile.Spells\", { RuleSetId: $scope.Ruleset.Id })\r\n\r\n                                }\r\n                                else if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                    }\r\n                                }\r\n                               \r\n                            });\r\n                        }\r\n                        $(\"#loading\").fadeOut(\"slow\");\r\n                    });\r\n                }\r\n\r\n                $scope.RemoveSpell = function (item) {\r\n                    //$scope.RulesetSpells = rulesetDataShareService.getRulesetSpells();\r\n                    //var index = -1;\r\n                    var dlg = dialogs.confirm(\r\n                        'Confirm Delete',\r\n                        'Are you sure you want to delete this Spell, \"' + item.SpellProperties[0].Value.Text.value + '\"',\r\n                        {}\r\n                    );\r\n\r\n                    dlg.result.then(\r\n                        function (res) {\r\n                           // $(\"#loading\").css(\"display\", \"block\");\r\n                            if (res == \"yes\") {\r\n                                $scope.SpellList = [];\r\n                                //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                                item.RulesetId = $scope.RulesetId;\r\n                                $scope.SpellList.push(item);\r\n                                //$scope.Corestat = item;\r\n                                var deletespells = rulesetService.DeleteSpells($scope.SpellList);\r\n                                deletespells.then(function (data) {\r\n                                    $(\"#loading\").fadeOut(\"slow\");\r\n                                    if (data.data.StatusCode == 200) {\r\n                                        //$scope.RulesetSpells = data.data.PayLoad.Result;\r\n                                        //rulesetDataShareService.setRulesetItems($scope.RulesetSpells);\r\n\r\n                                       // var deletedRulesetSpells = data.data.PayLoad.Result;\r\n                                        var deletedRulesetSpells = data.data.PayLoad;\r\n\r\n                                        var deletedRulesetSpellIndexs = [];\r\n                                        for (var i = 0; i < deletedRulesetSpells.length; i++) {\r\n                                            for (var j = 0; j < $scope.RulesetSpells.length; j++) {\r\n                                                if (deletedRulesetSpells[i].SpellProperties[0].ContentId == $scope.RulesetSpells[j].SpellProperties[0].ContentId) {\r\n                                                    deletedRulesetSpellIndexs.push(j);\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        for (var i = 0; i < deletedRulesetSpellIndexs.length; i++) {\r\n                                            $scope.RulesetSpells.splice(deletedRulesetSpellIndexs[i], 1);\r\n                                        }\r\n\r\n                                        rulesetDataShareService.setRulesetSpells($scope.RulesetSpells);\r\n\r\n                                        if ($scope.RulesetSpells.length > 0) {\r\n                                            $scope.list = true;\r\n                                            $scope.grid = true;\r\n                                            $scope.Itemlist = false;\r\n                                        }\r\n                                        else {\r\n                                            $scope.list = false;\r\n                                            $scope.grid = false;\r\n                                            $scope.Itemlist = true;\r\n                                        }\r\n                                        //$state.go(\"profile.Spells\", { RuleSetId: $scope.Ruleset.Id })\r\n                                    }\r\n                                    else if (data.data.StatusCode == 400) {\r\n                                        if (data.data.ShowToUser == true) {\r\n                                            toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                        }\r\n                                    }\r\n                                })\r\n                            }\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                        })\r\n\r\n                };\r\n                //For Abilitiies\r\n\r\n                $scope.CreateAbility = function () {\r\n                    //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                    var abilitiesmetadata = rulesetService.GetAbilitiesMetadata($scope.RulesetId);\r\n                    abilitiesmetadata.then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            $scope.RulesetAbilities = rulesetDataShareService.getRulesetAbilities();\r\n                            $scope.AbilityProperties = data.data.PayLoad.RuleSetMetaData.AbilityProperties;\r\n                            $scope.Rulesetproperty = data.data.PayLoad.Rulesetproperty;\r\n                            $scope.buttontext = \"Create\";\r\n                            $scope.tabName = \"Create Ability\";\r\n                            $scope.isBtnShow = false;\r\n                            $scope.OperationTypeMode = \"Create\"\r\n                            var weight = \"\";\r\n                            var volume = \"\";\r\n                            $scope.Content_AbilityProperties = [];\r\n                            if ($scope.RulesetAbilities != null) {\r\n                                for (var i = 0; i < $scope.RulesetAbilities.length; i++) {\r\n                                    $scope.Content_AbilityProperties.push($scope.RulesetAbilities[i].AbilityProperties[0].Value.Text.value);\r\n                                }\r\n                            }\r\n                            for (var i = 0; i < $scope.Rulesetproperty.length; i++) {\r\n                                if ($scope.Rulesetproperty[i].TypeId == 7) {\r\n                                    weight = $scope.Rulesetproperty[i].Units.selectedUnit;\r\n                                }\r\n                            }\r\n                            for (var j = 0; j < $scope.AbilityProperties.length; j++) {\r\n                                if ($scope.AbilityProperties[j].TypeId == 7) {\r\n                                    $scope.AbilityProperties[j].Value.Weight.units.selectedUnit = weight;\r\n                                }\r\n                            }\r\n                            for (var i = 0; i < $scope.Rulesetproperty.length; i++) {\r\n                                if (($scope.Rulesetproperty[i].TypeId == 1) && ($scope.Rulesetproperty[i].Name.indexOf('Volume') > -1)) {\r\n                                    volume = $scope.Rulesetproperty[i].Value.Text.value;\r\n                                }\r\n                            }\r\n                            for (var j = 0; j < $scope.AbilityProperties.length; j++) {\r\n                                if ($scope.AbilityProperties[j].TypeId == 13) {\r\n                                    $scope.AbilityProperties[j].Value.Volume.units.selectedUnit = volume;\r\n                                }\r\n                            }\r\n                            var dlg = dialogs.create('/views/dialogs/createabilities.html', 'dialogCreateAbility',\r\n                                { scope: $scope.AbilityProperties, tabName: $scope.tabName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, Content_AbilityProperties: $scope.Content_AbilityProperties, AbilityMode: $scope.OperationTypeMode }\r\n                            );\r\n\r\n                            dlg.result.then(function (res) {\r\n\r\n                               // $(\"#loading\").css(\"display\", \"block\");\r\n                                if (res != \"cancel\") {\r\n                                    var AbilityProperties = res;\r\n                                    var NewsAbility = {}\r\n                                    NewsAbility.AbilityProperties = AbilityProperties;\r\n                                    NewsAbility.RulesetID = $scope.RulesetId;\r\n                                    $scope.AbilityList = [];\r\n                                    $scope.AbilityList.push(NewsAbility);\r\n                                    var saveability = rulesetService.CreateAbilities($scope.AbilityList);\r\n                                    saveability.then(function (data) {\r\n                                        $(\"#loading\").fadeOut(\"slow\");\r\n                                        if (data.data.StatusCode == 200) {\r\n                                            //$scope.Ruleset = data.data.PayLoad.Result;\r\n                                            //$scope.RulesetAbilities = data.data.PayLoad.Result;\r\n\r\n                                            var createdRulesetAbilities = [];\r\n                                            //createdRulesetAbilities = data.data.PayLoad.Result;\r\n                                            createdRulesetAbilities = data.data.PayLoad;\r\n                                            for (var i = 0; i < createdRulesetAbilities.length; i++) {\r\n                                                $scope.RulesetAbilities.push(createdRulesetAbilities[i]);\r\n                                            }\r\n                                            rulesetDataShareService.setRulesetAbilities($scope.RulesetAbilities);\r\n\r\n                                            if ($scope.RulesetAbilities.length > 0) {\r\n                                                $scope.list = true;\r\n                                                $scope.grid = true;\r\n                                                $scope.Itemlist = false;\r\n                                            }\r\n                                            else {\r\n                                                $scope.list = false;\r\n                                                $scope.grid = false;\r\n                                                $scope.Itemlist = true;\r\n                                            }\r\n                                            //$state.go(\"profile.Abilities\", { RuleSetId: $scope.NewRuleSet.Id })\r\n                                        }\r\n                                        else if (data.data.StatusCode == 400) {\r\n                                            if (data.data.ShowToUser == true) {\r\n                                                toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n\r\n                                            }\r\n                                        }\r\n                                    });\r\n\r\n                                }\r\n                               \r\n                            });\r\n                        }\r\n                        $(\"#loading\").fadeOut(\"slow\");\r\n                    });\r\n\r\n                };\r\n\r\n                $scope.CopyAbility = function (item, count) {\r\n                    //$scope.RulesetAbilities = rulesetDataShareService.getability();\r\n                    $scope.pageName = \"Copying Ability\";\r\n                    $scope.buttontext = \"Copy\";\r\n                    $scope.isBtnShow = true;\r\n                    $scope.OperationTypeMode = \"Copy\"\r\n                    $scope.Content_AbilityProperties = [];\r\n                    if ($scope.RulesetAbilities != null) {\r\n                        for (var i = 0; i < $scope.RulesetAbilities.length; i++) {\r\n                            $scope.Content_AbilityProperties.push($scope.RulesetAbilities[i].AbilityProperties[0].Value.Text.value);\r\n                        }\r\n                    }\r\n                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogCopyAbility',\r\n                        { scope: item.AbilityProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, Content_AbilityProperties: $scope.Content_AbilityProperties, AbilityMode: $scope.OperationTypeMode }\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                      //  $(\"#loading\").css(\"display\", \"block\");\r\n                        if (res != \"cancel\") {\r\n                            var AbilityProperties = res;\r\n                            for (var i = 0; i < AbilityProperties.length; i++) {\r\n                                AbilityProperties[i].ContentId = 0;\r\n                            }\r\n                            //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                            var NewAbility = {}\r\n                            //NewItem.ItemProperties = res.Properties;\r\n                            NewAbility.AbilityProperties = AbilityProperties;\r\n                            NewAbility.RulesetId = $scope.RulesetId;\r\n                            $scope.AbilityList = [];\r\n                            $scope.AbilityList.push(NewAbility);\r\n                            var copyability = rulesetService.CopyAbilities($scope.AbilityList);\r\n                            copyability.then(function (data) {\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                if (data.data.StatusCode == 200) {\r\n\r\n                                    var createdRulesetAbilities = [];\r\n                                    //createdRulesetAbilities = data.data.PayLoad.Result;\r\n                                    createdRulesetAbilities = data.data.PayLoad;\r\n                                    for (var i = 0; i < createdRulesetAbilities.length; i++) {\r\n                                        $scope.RulesetAbilities.push(createdRulesetAbilities[i]);\r\n                                    }\r\n\r\n                                    rulesetDataShareService.setRulesetAbilities($scope.RulesetAbilities);\r\n\r\n                                    if ($scope.RulesetAbilities.length > 0) {\r\n                                        $scope.list = true;\r\n                                        $scope.grid = true;\r\n                                        $scope.Itemlist = false;\r\n                                    }\r\n                                    else {\r\n                                        $scope.list = false;\r\n                                        $scope.grid = false;\r\n                                        $scope.Itemlist = true;\r\n                                    }\r\n                                    //$state.go(\"profile.Abilities\", { RuleSetId: $scope.NewRuleSet.Id })\r\n                                }\r\n                                else if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        $(\"#loading\").fadeOut(\"slow\");\r\n                    });\r\n                }\r\n\r\n                $scope.EditAbility = function (item, count) {\r\n                    $scope.pageName = \"Editing Ability\";\r\n                    $scope.buttontext = \"Update\";\r\n                    $scope.isBtnShow = true;\r\n                    $scope.OperationTypeMode = \"Edit\"\r\n                    var dlg = dialogs.create('/views/dialogs/createabilities.html', 'dialogCopyAbility',\r\n                        { scope: item.AbilityProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, AbilityMode: $scope.OperationTypeMode }\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                       // $(\"#loading\").css(\"display\", \"block\");\r\n                        if (res != \"cancel\") {\r\n                            var AbilityProperties = res;\r\n                            //$scope.NewRuleSet.Spells[count] = SpellProperties\r\n                            //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                            var NewAbility = {}\r\n                            //NewItem.ItemProperties = res.Properties;\r\n                            NewAbility.AbilityProperties = AbilityProperties;\r\n                            NewAbility.RulesetId = $scope.RulesetId;\r\n                            $scope.AbilityList = [];\r\n                            $scope.AbilityList.push(NewAbility);\r\n                            var editability = rulesetService.UpdateAbilities($scope.AbilityList);\r\n                            editability.then(function (data) {\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                                if (data.data.StatusCode == 200) {\r\n\r\n                                   //var updatedRulesetAbilities = data.data.PayLoad.Result;\r\n                                    var updatedRulesetAbilities = data.data.PayLoad;\r\n\r\n                                    for (var i = 0; i < updatedRulesetAbilities.length; i++) {\r\n                                        for (var j = 0; j < $scope.RulesetAbilities.length; j++) {\r\n                                            if (updatedRulesetAbilities[i].AbilityProperties[0].ContentId == $scope.RulesetAbilities[j].AbilityProperties[0].ContentId) {\r\n                                                $scope.RulesetAbilities[j] = updatedRulesetAbilities[i];\r\n                                            }\r\n                                        }\r\n                                    }\r\n\r\n                                    rulesetDataShareService.setRulesetAbilities($scope.RulesetAbilities);\r\n\r\n                                    if ($scope.RulesetAbilities.length > 0) {\r\n                                        $scope.list = true;\r\n                                        $scope.grid = true;\r\n                                        $scope.Itemlist = false;\r\n                                    }\r\n                                    else {\r\n                                        $scope.list = false;\r\n                                        $scope.grid = false;\r\n                                        $scope.Itemlist = true;\r\n                                    }\r\n                                   //$state.go(\"profile.Abilities\", { RuleSetId: $scope.NewRuleSet.Id })\r\n\r\n                                }\r\n                                else if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        $(\"#loading\").fadeOut(\"slow\");\r\n                    });\r\n                }\r\n\r\n                $scope.RemoveAbility = function (item) {\r\n                    //$scope.RulesetAbilities = rulesetDataShareService.getability();\r\n                    //var index = -1;\r\n                    var dlg = dialogs.confirm(\r\n                        'Confirm Delete',\r\n                        'Are you sure you want to delete this Ability, \"' + item.AbilityProperties[0].Value.Text.value + '\"',\r\n                        {}\r\n                    );\r\n\r\n                    dlg.result.then(\r\n                        function (res) {\r\n                         //   $(\"#loading\").css(\"display\", \"block\");\r\n                            if (res == \"yes\") {\r\n                                $scope.AbilityList = [];\r\n                                //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                                item.RulesetID = $scope.RulesetId;\r\n                                $scope.AbilityList.push(item);\r\n                                //$scope.Corestat = item;\r\n                                var deleteabilities = rulesetService.DeleteAbilities($scope.AbilityList);\r\n                                deleteabilities.then(function (data) {\r\n                                    $(\"#loading\").fadeOut(\"slow\");\r\n                                    if (data.data.StatusCode == 200) {\r\n\r\n                                        //var deletedRulesetAbilities = data.data.PayLoad.Result;\r\n                                        var deletedRulesetAbilities = data.data.PayLoad;\r\n\r\n                                        var deletedRulesetAbilityIndexs = [];\r\n                                        for (var i = 0; i < deletedRulesetAbilities.length; i++) {\r\n                                            for (var j = 0; j < $scope.RulesetAbilities.length; j++) {\r\n                                                if (deletedRulesetAbilities[i].AbilityProperties[0].ContentId == $scope.RulesetAbilities[j].AbilityProperties[0].ContentId) {\r\n                                                    deletedRulesetAbilityIndexs.push(j);\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        for (var i = 0; i < deletedRulesetAbilityIndexs.length; i++) {\r\n                                            $scope.RulesetAbilities.splice(deletedRulesetAbilityIndexs[i], 1);\r\n                                        }\r\n\r\n                                        rulesetDataShareService.setRulesetAbilities($scope.RulesetAbilities);\r\n\r\n                                        if ($scope.RulesetAbilities.length > 0) {\r\n                                            $scope.list = true;\r\n                                            $scope.grid = true;\r\n                                            $scope.Itemlist = false;\r\n                                        }\r\n                                        else {\r\n                                            $scope.list = false;\r\n                                            $scope.grid = false;\r\n                                            $scope.Itemlist = true;\r\n                                        }\r\n                                        //$state.go(\"profile.Abilities\", { RuleSetId: $scope.NewRuleSet.Id })\r\n                                    }\r\n                                    else if (data.data.StatusCode == 400) {\r\n                                        if (data.data.ShowToUser == true) {\r\n                                            toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                        }\r\n                                    }\r\n                                })\r\n                            }\r\n                            $(\"#loading\").fadeOut(\"slow\");\r\n                        })\r\n\r\n\r\n                };\r\n\r\n                $scope.ShowAllItemProperties = function (index) {\r\n                    $state.go(\"profile.RulesetItemDetails\", { index: index, RuleSetId: $scope.RulesetId });\r\n                } \r\n\r\n                $scope.ShowAllSpellsContent = function (index) {\r\n                    //alert(\"Testing Aleart\");\r\n                    $state.go(\"profile.RulesetSpellDetails\", { index: index, RuleSetId: $scope.RulesetId });\r\n                }\r\n\r\n                $scope.ShowAllAbilityContent = function (index) {\r\n                    $state.go(\"profile.RulesetAbilityDetails\", { index: index, RuleSetId: $scope.RulesetId });\r\n                }\r\n\r\n            }\r\n            else if ($state.params.action == 5) {\r\n                $scope.RulesetId = parseInt($state.params.RuleSetId);\r\n                $scope.initialClientObjectId = 0;\r\n                if (angular.equals({}, rulesetDataShareService.getRulesetData()) == false) {\r\n                    $scope.NewRuleSet = rulesetDataShareService.getRulesetData();\r\n                }\r\n                else {\r\n                    if (parseInt(RuleSetId) > 0) {\r\n                        UpdateRuleSet(parseInt(RuleSetId), CopyOrUpdate);\r\n                    }\r\n                }\r\n\t\t\t\t\r\n                if ($state.params.contentType == 1) {\r\n                    $scope.RulesetItems = rulesetDataShareService.getRulesetItems();\r\n                    $scope.RulesetContent = $scope.RulesetItems[$state.params.index];\r\n\t\t\t\t\tconsole.log(\"$scope.RulesetContent: \", $scope.RulesetContent);\r\n                    // Setting ClientObjectId For Tiles.\r\n                    for (var i = 0; i < $scope.RulesetContent.ItemProperties.length; i++) {\r\n                        var ItemPropertyLst = $scope.RulesetContent.ItemProperties[i];\r\n                        if (ItemPropertyLst.Id == 0 || ItemPropertyLst.Id == undefined || ItemPropertyLst.Id == \"\") {\r\n                            $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                            ItemPropertyLst.tile.ClientObjectId = $scope.initialClientObjectId;\r\n                            $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                        }\r\n                    }\r\n                }\r\n                else if ($state.params.contentType == 2) {\r\n                    $scope.RulesetSpells = rulesetDataShareService.getRulesetSpells();\r\n                    $scope.RulesetContent = $scope.RulesetSpells[$state.params.index];\r\n                    // Setting ClientObjectId For Tiles.\r\n                    for (var i = 0; i < $scope.RulesetContent.SpellProperties.length; i++) {\r\n                        var spellPropertyLst = $scope.RulesetContent.SpellProperties[i];\r\n                        if (spellPropertyLst.Id == 0 || spellPropertyLst.Id == undefined || spellPropertyLst.Id == \"\") {\r\n                            $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                            spellPropertyLst.tile.ClientObjectId = $scope.initialClientObjectId;\r\n                            $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                        }\r\n                    }\r\n                    //   $scope.LinkExecuteTileContent = $scope.NewRuleSet;\r\n                }\r\n                else if ($state.params.contentType == 3) {\r\n                    $scope.RulesetAbilities = rulesetDataShareService.getRulesetAbilities();\r\n                    $scope.RulesetContent = $scope.RulesetAbilities[$state.params.index];\r\n                    // Setting ClientObjectId For Tiles.\r\n                    for (var i = 0; i < $scope.RulesetContent.AbilityProperties.length; i++) {\r\n                        var abilityPropertyLst = $scope.RulesetContent.AbilityProperties[i];\r\n                        if (abilityPropertyLst.Id == 0 || abilityPropertyLst.Id == undefined || abilityPropertyLst.Id == \"\") {\r\n                            $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                            abilityPropertyLst.tile.ClientObjectId = $scope.initialClientObjectId;\r\n                            $scope.initialClientObjectId = $scope.initialClientObjectId + 1;\r\n                        }\r\n                    }\r\n                    //   $scope.LinkExecuteTileContent = $scope.NewRuleSet;\r\n                }\r\n\r\n                $scope.BackContent = function (val) {\r\n                    $scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                    if (val == 1) {\r\n\r\n                        $state.go(\"profile.Items\", { RuleSetId: $scope.RulesetId });\r\n                    }\r\n                    else if (val == 2) {\r\n                        $state.go(\"profile.Spells\", { RuleSetId: $scope.RulesetId });\r\n                    }\r\n                    else if (val == 3) {\r\n                        $state.go(\"profile.Abilities\", { RuleSetId: $scope.RulesetId });\r\n                    }\r\n                }\r\n                //For Detail Screen Editing,Copying,Removing of Item.\r\n                $scope.CopyItem = function (item) {\r\n                    \r\n                    //$scope.RulesetItems = rulesetDataShareService.getRulesetItems();\r\n                    //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                    var spells = rulesetService.GetRulesetSpells($scope.RulesetId);\r\n                    spells.then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            $scope.Spells = data.data.PayLoad;\r\n                            var abilities = rulesetService.GetRulesetAbilities($scope.RulesetId);\r\n                            abilities.then(function (data) {\r\n                                if (data.data.StatusCode == 200) {\r\n                                    $scope.Abilities = data.data.PayLoad;\r\n                                    $scope.pageName = \"Copying Item\";\r\n                                    $scope.buttontext = \"Copy\";\r\n                                    $scope.IsButtonDisabled = true;\r\n                                    $scope.isBtnShow = true;\r\n                                    $scope.OperationTypeMode = \"Copy\"\r\n                                    $scope.Content_ItemProperties = [];\r\n                                    if ($scope.RulesetItems != null) {\r\n                                        for (var i = 0; i < $scope.RulesetItems.length; i++) {\r\n                                            $scope.Content_ItemProperties.push($scope.RulesetItems[i].ItemProperties[0].Value.Text.value);\r\n                                        }\r\n                                    }\r\n                                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogCopyItem',\r\n                                        { scope: item.ItemProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow, ItemMode: $scope.OperationTypeMode, Spells: $scope.Spells, AssociatedSpells: $scope.RulesetContent.AssociatedSpells, Abilities: $scope.Abilities, AssociatedAbilities: $scope.RulesetContent.AssociatedAbilities, Content_ItemProperties: $scope.Content_ItemProperties }\r\n                                    );\r\n\r\n                                    dlg.result.then(function (res) {\r\n                                        \r\n                                        if (res != \"cancel\") {\r\n                                            var ItemProperties = { \"ItemProperties\": res.ItemProperties };\r\n                                            for (var i = 0; i < ItemProperties.ItemProperties.length; i++) {\r\n                                                ItemProperties.ItemProperties[i].ContentId = 0;\r\n                                            }\r\n                                            //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                                            var NewItem = {}\r\n                                            //NewItem.ItemProperties = res.Properties;\r\n                                            NewItem.ItemProperties = res.ItemProperties;\r\n                                            NewItem.AssociatedSpells = res.AssociatedSpells;\r\n                                            NewItem.AssociatedAbilities = res.AssociatedAbilities;\r\n                                            NewItem.RulesetId = $scope.RulesetId;\r\n                                            //$scope.RuleSetItems.push(ItemProperties);\r\n                                            $scope.ItemList = [];\r\n                                            $scope.ItemList.push(NewItem);\r\n                                            var copyitem = rulesetService.CopyItems($scope.ItemList);\r\n                                            copyitem.then(function (data) {\r\n                                             \r\n                                                if (data.data.StatusCode == 200) {\r\n                                                    //$scope.Ruleset = data.data.PayLoad.Result;\r\n                                                    var createdRulesetItems = [];\r\n                                                    createdRulesetItems = data.data.PayLoad;\r\n                                                    for (var i = 0; i < createdRulesetItems.length; i++) {\r\n                                                        $scope.RulesetItems.push(createdRulesetItems[i]);\r\n                                                    }\r\n                                                    rulesetDataShareService.setRulesetItems($scope.RulesetItems);\r\n                                                    if ($scope.RulesetItems.length > 0) {\r\n                                                        $scope.list = true;\r\n                                                        $scope.grid = true;\r\n                                                        $scope.Itemlist = false;\r\n                                                    }\r\n                                                    else {\r\n                                                        $scope.list = false;\r\n                                                        $scope.grid = false;\r\n                                                        $scope.Itemlist = true;\r\n                                                    }\r\n                                                    $state.go(\"profile.Items\", { RuleSetId: $scope.RulesetId })\r\n                                                }\r\n                                                else if (data.data.StatusCode == 400) {\r\n                                                    if (data.ShowToUser == true) {\r\n                                                        toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                                    }\r\n                                                }\r\n\r\n                                            });\r\n                                        }\r\n\r\n\r\n                                    });\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                    // $scope.Spells = rulesetDataShareService.getspell();\r\n                    //$scope.Abilities = rulesetDataShareService.getability();\r\n\r\n                }\r\n\r\n                $scope.EditItem = function (item) {\r\n                    //$scope.RulesetItems = rulesetDataShareService.getRulesetItems();\r\n                    //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                    var spells = rulesetService.GetRulesetSpells($scope.RulesetId);\r\n                    spells.then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            $scope.Spells = data.data.PayLoad;\r\n                            var abilities = rulesetService.GetRulesetAbilities($scope.RulesetId);\r\n                            abilities.then(function (data) {\r\n                                if (data.data.StatusCode == 200) {\r\n                                    $scope.Abilities = data.data.PayLoad;\r\n                                    $scope.pageName = \"Editing Item\";\r\n                                    $scope.buttontext = \"Update\";\r\n                                    $scope.IsButtonDisabled = true;\r\n                                    $scope.isBtnShow = true;\r\n                                    $scope.OperationTypeMode = \"Edit\"\r\n\r\n                                    //var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogCreateItem',\r\n                                    //    { scope: $scope.ItemProperties, tabName: $scope.tabName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow, Content_ItemProperties: $scope.Content_ItemProperties, ItemMode: $scope.OperationTypeMode, AssociatedSpells: $scope.NewRuleSet.Spells, AssociatedAbilities: $scope.NewRuleSet.Abilities }\r\n                                    //);\r\n\r\n                                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogCopyItem',\r\n                                        { scope: item.ItemProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnDisabled: $scope.IsButtonDisabled, IsBtnShow: $scope.isBtnShow, ItemMode: $scope.OperationTypeMode, Spells: $scope.Spells, AssociatedSpells: $scope.RulesetContent.AssociatedSpells, Abilities: $scope.Abilities, AssociatedAbilities: $scope.RulesetContent.AssociatedAbilities }\r\n                                    );\r\n\r\n                                    dlg.result.then(function (res) {\r\n                                        if (res != \"cancel\") {\r\n                                            //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                                            var NewItem = {}\r\n                                            //NewItem.ItemProperties = res.Properties;\r\n                                            NewItem.ItemProperties = res.ItemProperties;\r\n                                            NewItem.AssociatedSpells = res.AssociatedSpells;\r\n                                            NewItem.AssociatedAbilities = res.AssociatedAbilities;\r\n                                            NewItem.RulesetId = $scope.RulesetId;\r\n                                            $scope.ItemList = [];\r\n                                            $scope.ItemList.push(NewItem);\r\n                                            var edititem = rulesetService.UpdateItems($scope.ItemList);\r\n                                            edititem.then(function (data) {\r\n                                                if (data.data.StatusCode == 200) {\r\n                                                 \r\n                                                    var updatedRulesetItems = data.data.PayLoad;\r\n\r\n                                                    for (var i = 0; i < updatedRulesetItems.length; i++) {\r\n                                                        for (var j = 0; j < $scope.RulesetItems.length; j++) {\r\n                                                            if (updatedRulesetItems[i].ItemProperties[0].ContentId == $scope.RulesetItems[j].ItemProperties[0].ContentId) {\r\n                                                                $scope.RulesetItems[j] = updatedRulesetItems[i];\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n\r\n                                                    rulesetDataShareService.setRulesetItems($scope.RulesetItems);\r\n\r\n                                                    if ($scope.RulesetItems.length > 0) {\r\n                                                        $scope.list = true;\r\n                                                        $scope.grid = true;\r\n                                                        $scope.Itemlist = false;\r\n                                                    }\r\n                                                    else {\r\n                                                        $scope.list = false;\r\n                                                        $scope.grid = false;\r\n                                                        $scope.Itemlist = true;\r\n                                                    }\r\n                                                    $state.go(\"profile.Items\", { RuleSetId: $scope.RulesetId })\r\n                                                    // $state.go(\"profile.Items\")\r\n                                                }\r\n                                            })\r\n\r\n                                            //$scope.NewRuleSet.Items[count] = NewItem;\r\n\r\n                                        }\r\n                                    });\r\n                                }\r\n                            })\r\n                        }\r\n                    });\r\n                  \r\n                }\r\n                $scope.Removeitem = function (item) {\r\n                    //var index = -1;\r\n                    //$scope.RulesetItems = rulesetDataShareService.get();\r\n\r\n                    var dlg = dialogs.confirm(\r\n                        'Confirm Delete',\r\n                        'Are you sure you want to delete this Item, \"' + item.ItemProperties[0].Value.Text.value + '\"',\r\n                        {}\r\n                    );\r\n\r\n                    dlg.result.then(\r\n                        function (res) {\r\n                            if (res == \"yes\") {\r\n                                var deleteItemList = [];\r\n                                //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                                //item.RulesetId = $scope.RulesetId;\r\n                                deleteItemList.push(item);\r\n                                //$scope.Corestat = item;\r\n                                var deleteitems = rulesetService.DeleteItems(deleteItemList);\r\n                                deleteitems.then(function (data) {\r\n                                    debugger;\r\n                                    if (data.data.StatusCode == 200) {\r\n                                        //$scope.Ruleset = data.data.PayLoad;\r\n                                        var deletedRulesetItems = data.data.PayLoad;\r\n\r\n                                        var deletedRulesetItemIndexs = [];\r\n                                        for (var i = 0; i < deletedRulesetItems.length; i++) {\r\n                                            for (var j = 0; j < $scope.RulesetItems.length; j++) {\r\n                                                if (deletedRulesetItems[i].ItemProperties[0].ContentId == $scope.RulesetItems[j].ItemProperties[0].ContentId) {\r\n                                                    deletedRulesetItemIndexs.push(j);\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        for (var i = 0; i < deletedRulesetItemIndexs.length; i++) {\r\n                                            $scope.RulesetItems.splice(deletedRulesetItemIndexs[i], 1);\r\n                                        }\r\n\r\n                                        rulesetDataShareService.setRulesetItems($scope.RulesetItems);\r\n\r\n                                        if ($scope.RulesetItems.length > 0) {\r\n                                            $scope.list = true;\r\n                                            $scope.grid = true;\r\n                                            $scope.Itemlist = false;\r\n                                        }\r\n                                        else {\r\n                                            $scope.list = false;\r\n                                            $scope.grid = false;\r\n                                            $scope.Itemlist = true;\r\n                                        }\r\n                                        $state.go(\"profile.Items\", { RuleSetId: $scope.RulesetId })\r\n                                    }\r\n                                })\r\n                            }\r\n                        })\r\n\r\n                };\r\n                //For Detail Screen Editing,Copying,Removing of Spell.\r\n                $scope.CopySpell = function (item) {\r\n                    $scope.RulesetSpells = rulesetDataShareService.getRulesetSpells();\r\n                    $scope.pageName = \"Copying Spell\";\r\n                    $scope.buttontext = \"Copy\";\r\n                    $scope.isBtnShow = true;\r\n                    $scope.OperationTypeMode = \"Copy\"\r\n                    $scope.Content_SpellProperties = [];\r\n                    if ($scope.RulesetSpells != null) {\r\n                        for (var i = 0; i < $scope.RulesetSpells.length; i++) {\r\n                            $scope.Content_SpellProperties.push($scope.RulesetSpells[i].SpellProperties[0].Value.Text.value);\r\n                        }\r\n                    }\r\n                    var dlg = dialogs.create('/views/dialogs/createspells.html', 'dialogCopySpell',\r\n                        { scope: item.SpellProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, Content_SpellProperties: $scope.Content_SpellProperties, SpellMode: $scope.OperationTypeMode }\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            var SpellProperties = res;\r\n                            for (var i = 0; i < SpellProperties.length; i++) {\r\n                                SpellProperties[i].ContentId = 0;\r\n                            }\r\n                            //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                            var NewSpell = {}\r\n                            //NewItem.ItemProperties = res.Properties;\r\n                            NewSpell.SpellProperties = SpellProperties;\r\n                            NewSpell.RulesetId = $scope.RulesetId;\r\n                            var SpellList = [];\r\n                            SpellList.push(NewSpell);\r\n                            var copyspell = rulesetService.CopySpells(SpellList);\r\n                            copyspell.then(function (data) {\r\n\r\n                                if (data.data.StatusCode == 200) {\r\n                                    //$scope.RulesetSpells = data.data.PayLoad.Result;\r\n                                    var createdRulesetSpells = [];\r\n                                    createdRulesetSpells = data.data.PayLoad;\r\n                                    for (var i = 0; i < createdRulesetSpells.length; i++) {\r\n                                        $scope.RulesetSpells.push(createdRulesetSpells[i]);\r\n                                    }\r\n\r\n                                    rulesetDataShareService.setRulesetSpells($scope.RulesetSpells);\r\n\r\n                                    if ($scope.RulesetSpells.length > 0) {\r\n                                        $scope.list = true;\r\n                                        $scope.grid = true;\r\n                                        $scope.Itemlist = false;\r\n                                    }\r\n                                    else {\r\n                                        $scope.list = false;\r\n                                        $scope.grid = false;\r\n                                        $scope.Itemlist = true;\r\n                                    }\r\n                                    $state.go(\"profile.Spells\", { RuleSetId: $scope.RulesetId })\r\n                                }\r\n\r\n                            });\r\n                            //$scope.NewRuleSet.Spells.push(SpellProperties);\r\n\r\n                        }\r\n\r\n                    });\r\n                }\r\n\r\n                $scope.EditSpell = function (item) {\r\n                    $scope.RulesetSpells = rulesetDataShareService.getRulesetSpells();\r\n                    $scope.pageName = \"Editing Spell\";\r\n                    $scope.buttontext = \"Update\";\r\n                    $scope.isBtnShow = true;\r\n                    $scope.OperationTypeMode = \"Edit\"\r\n                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogCopySpell',\r\n                        { scope: item.SpellProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, SpellMode: $scope.OperationTypeMode }\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            var SpellProperties = res;\r\n                            //$scope.NewRuleSet.Spells[count] = SpellProperties\r\n                            //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                            var NewSpell = {}\r\n                            //NewItem.ItemProperties = res.Properties;\r\n                            NewSpell.SpellProperties = SpellProperties;\r\n                            NewSpell.RulesetId = $scope.RulesetId;\r\n                            var SpellList = [];\r\n                            SpellList.push(NewSpell);\r\n                            var editspell = rulesetService.UpdateSpells(SpellList);\r\n                            editspell.then(function (data) {\r\n                                if (data.data.StatusCode == 200) {\r\n                                    //$scope.RulesetSpells = data.data.PayLoad.Result;\r\n\r\n                                    var updatedRulesetSpells = data.data.PayLoad;\r\n\r\n                                    for (var i = 0; i < updatedRulesetSpells.length; i++) {\r\n                                        for (var j = 0; j < $scope.RulesetSpells.length; j++) {\r\n                                            if (updatedRulesetSpells[i].SpellProperties[0].ContentId == $scope.RulesetSpells[j].SpellProperties[0].ContentId) {\r\n                                                $scope.RulesetSpells[j] = updatedRulesetSpells[i];\r\n                                            }\r\n                                        }\r\n                                    }\r\n\r\n                                    rulesetDataShareService.setRulesetSpells($scope.RulesetSpells);\r\n\r\n                                    if ($scope.RulesetSpells.length > 0) {\r\n                                        $scope.list = true;\r\n                                        $scope.grid = true;\r\n                                        $scope.Itemlist = false;\r\n                                    }\r\n                                    else {\r\n                                        $scope.list = false;\r\n                                        $scope.grid = false;\r\n                                        $scope.Itemlist = true;\r\n                                    }\r\n                                    $state.go(\"profile.Spells\", { RuleSetId: $scope.RulesetId })\r\n\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                $scope.RemoveSpell = function (item) {\r\n                    //$scope.RulesetSpells = rulesetDataShareService.getRulesetSpells();\r\n                    //var index = -1;\r\n                    var dlg = dialogs.confirm(\r\n                        'Confirm Delete',\r\n                        'Are you sure you want to delete this Spell, \"' + item.SpellProperties[0].Value.Text.value + '\"',\r\n                        {}\r\n                    );\r\n\r\n                    dlg.result.then(\r\n                        function (res) {\r\n                            if (res == \"yes\") {\r\n                                $scope.SpellList = [];\r\n                                //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                                item.RulesetId = $scope.RulesetId;\r\n                                $scope.SpellList.push(item);\r\n                                //$scope.Corestat = item;\r\n                                var deletespells = rulesetService.DeleteSpells($scope.SpellList);\r\n                                deletespells.then(function (data) {\r\n                                    if (data.data.StatusCode == 200) {\r\n                                        //$scope.RulesetSpells = data.data.PayLoad.Result;\r\n                                        //rulesetDataShareService.setRulesetItems($scope.RulesetSpells);\r\n\r\n                                        var deletedRulesetSpells = data.data.PayLoad;\r\n\r\n                                        var deletedRulesetSpellIndexs = [];\r\n                                        for (var i = 0; i < deletedRulesetSpells.length; i++) {\r\n                                            for (var j = 0; j < $scope.RulesetSpells.length; j++) {\r\n                                                if (deletedRulesetSpells[i].SpellProperties[0].ContentId == $scope.RulesetSpells[j].SpellProperties[0].ContentId) {\r\n                                                    deletedRulesetSpellIndexs.push(j);\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        for (var i = 0; i < deletedRulesetSpellIndexs.length; i++) {\r\n                                            $scope.RulesetSpells.splice(deletedRulesetSpellIndexs[i], 1);\r\n                                        }\r\n\r\n                                        rulesetDataShareService.setRulesetSpells($scope.RulesetSpells);\r\n\r\n                                        if ($scope.RulesetSpells.length > 0) {\r\n                                            $scope.list = true;\r\n                                            $scope.grid = true;\r\n                                            $scope.Itemlist = false;\r\n                                        }\r\n                                        else {\r\n                                            $scope.list = false;\r\n                                            $scope.grid = false;\r\n                                            $scope.Itemlist = true;\r\n                                        }\r\n                                        $state.go(\"profile.Spells\", { RuleSetId: $scope.RulesetId })\r\n                                    }\r\n                                })\r\n                            }\r\n                        })\r\n\r\n                };\r\n                //For Detail Screen Editing,Copying,Removing of Ability.\r\n                $scope.CopyAbility = function (item, count) {\r\n                    //$scope.RulesetAbilities = rulesetDataShareService.getability();\r\n                    $scope.pageName = \"Copying Ability\";\r\n                    $scope.buttontext = \"Copy\";\r\n                    $scope.isBtnShow = true;\r\n                    $scope.OperationTypeMode = \"Copy\"\r\n                    $scope.Content_AbilityProperties = [];\r\n                    if ($scope.RulesetAbilities != null) {\r\n                        for (var i = 0; i < $scope.RulesetAbilities.length; i++) {\r\n                            $scope.Content_AbilityProperties.push($scope.RulesetAbilities[i].AbilityProperties[0].Value.Text.value);\r\n                        }\r\n                    }\r\n                    var dlg = dialogs.create('/views/dialogs/createabilities.html', 'dialogCopyAbility',\r\n                        { scope: item.AbilityProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, Content_AbilityProperties: $scope.Content_AbilityProperties, AbilityMode: $scope.OperationTypeMode }\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            var AbilityProperties = res;\r\n                            for (var i = 0; i < AbilityProperties.length; i++) {\r\n                                AbilityProperties[i].ContentId = 0;\r\n                            }\r\n                            //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                            var NewAbility = {}\r\n                            //NewItem.ItemProperties = res.Properties;\r\n                            NewAbility.AbilityProperties = AbilityProperties;\r\n                            NewAbility.RulesetId = $scope.RulesetId;\r\n                            $scope.AbilityList = [];\r\n                            $scope.AbilityList.push(NewAbility);\r\n                            var copyability = rulesetService.CopyAbilities($scope.AbilityList);\r\n                            copyability.then(function (data) {\r\n                                if (data.data.StatusCode == 200) {\r\n\r\n                                    var createdRulesetAbilities = [];\r\n                                    createdRulesetAbilities = data.data.PayLoad;\r\n                                    for (var i = 0; i < createdRulesetAbilities.length; i++) {\r\n                                        $scope.RulesetAbilities.push(createdRulesetAbilities[i]);\r\n                                    }\r\n\r\n                                    rulesetDataShareService.setRulesetAbilities($scope.RulesetAbilities);\r\n\r\n                                    if ($scope.RulesetAbilities.length > 0) {\r\n                                        $scope.list = true;\r\n                                        $scope.grid = true;\r\n                                        $scope.Itemlist = false;\r\n                                    }\r\n                                    else {\r\n                                        $scope.list = false;\r\n                                        $scope.grid = false;\r\n                                        $scope.Itemlist = true;\r\n                                    }\r\n                                    $state.go(\"profile.Abilities\", { RuleSetId: $scope.RulesetId })\r\n                                }\r\n\r\n                            });\r\n                        }\r\n\r\n\r\n                    });\r\n                }\r\n\r\n                $scope.EditAbility = function (item, count) {\r\n                    $scope.pageName = \"Editing Ability\";\r\n                    $scope.buttontext = \"Update\";\r\n                    $scope.isBtnShow = true;\r\n                    $scope.OperationTypeMode = \"Edit\"\r\n                    var dlg = dialogs.create('/views/dialogs/createitems.html', 'dialogCopyAbility',\r\n                        { scope: item.AbilityProperties, tabName: $scope.pageName, btntext: $scope.buttontext, IsBtnShow: $scope.isBtnShow, AbilityMode: $scope.OperationTypeMode }\r\n                    );\r\n\r\n                    dlg.result.then(function (res) {\r\n                        if (res != \"cancel\") {\r\n                            var AbilityProperties = res;\r\n                            //$scope.NewRuleSet.Spells[count] = SpellProperties\r\n                            //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                            var NewAbility = {}\r\n                            //NewItem.ItemProperties = res.Properties;\r\n                            NewAbility.AbilityProperties = AbilityProperties;\r\n                            NewAbility.RulesetId = $scope.RulesetId;\r\n                            $scope.AbilityList = [];\r\n                            $scope.AbilityList.push(NewAbility);\r\n                            var editability = rulesetService.UpdateAbilities($scope.AbilityList);\r\n                            editability.then(function (data) {\r\n                                if (data.data.StatusCode == 200) {\r\n\r\n                                    var updatedRulesetAbilities = data.data.PayLoad;\r\n\r\n                                    for (var i = 0; i < updatedRulesetAbilities.length; i++) {\r\n                                        for (var j = 0; j < $scope.RulesetAbilities.length; j++) {\r\n                                            if (updatedRulesetAbilities[i].AbilityProperties[0].ContentId == $scope.RulesetAbilities[j].AbilityProperties[0].ContentId) {\r\n                                                $scope.RulesetAbilities[j] = updatedRulesetAbilities[i];\r\n                                            }\r\n                                        }\r\n                                    }\r\n\r\n                                    rulesetDataShareService.setRulesetAbilities($scope.RulesetAbilities);\r\n\r\n                                    if ($scope.RulesetAbilities.length > 0) {\r\n                                        $scope.list = true;\r\n                                        $scope.grid = true;\r\n                                        $scope.Itemlist = false;\r\n                                    }\r\n                                    else {\r\n                                        $scope.list = false;\r\n                                        $scope.grid = false;\r\n                                        $scope.Itemlist = true;\r\n                                    }\r\n                                    $state.go(\"profile.Abilities\", { RuleSetId: $scope.RulesetId })\r\n\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                    });\r\n                }\r\n\r\n                $scope.RemoveAbility = function (item) {\r\n                    //$scope.RulesetAbilities = rulesetDataShareService.getability();\r\n                    //var index = -1;\r\n                    var dlg = dialogs.confirm(\r\n                        'Confirm Delete',\r\n                        'Are you sure you want to delete this Ability, \"' + item.AbilityProperties[0].Value.Text.value + '\"',\r\n                        {}\r\n                    );\r\n\r\n                    dlg.result.then(\r\n                        function (res) {\r\n                            if (res == \"yes\") {\r\n                                $scope.AbilityList = [];\r\n                                //$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n                                item.RulesetID = $scope.RulesetId;\r\n                                $scope.AbilityList.push(item);\r\n                                //$scope.Corestat = item;\r\n                                var deleteabilities = rulesetService.DeleteAbilities($scope.AbilityList);\r\n                                deleteabilities.then(function (data) {\r\n                                    if (data.data.StatusCode == 200) {\r\n                                        var deletedRulesetAbilities = data.data.PayLoad;\r\n\r\n                                        var deletedRulesetAbilityIndexs = [];\r\n                                        for (var i = 0; i < deletedRulesetAbilities.length; i++) {\r\n                                            for (var j = 0; j < $scope.RulesetAbilities.length; j++) {\r\n                                                if (deletedRulesetAbilities[i].AbilityProperties[0].ContentId == $scope.RulesetAbilities[j].AbilityProperties[0].ContentId) {\r\n                                                    deletedRulesetAbilityIndexs.push(j);\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        for (var i = 0; i < deletedRulesetAbilityIndexs.length; i++) {\r\n                                            $scope.RulesetAbilities.splice(deletedRulesetAbilityIndexs[i], 1);\r\n                                        }\r\n\r\n                                        rulesetDataShareService.setRulesetAbilities($scope.RulesetAbilities);\r\n\r\n                                        if ($scope.RulesetAbilities.length > 0) {\r\n                                            $scope.list = true;\r\n                                            $scope.grid = true;\r\n                                            $scope.Itemlist = false;\r\n                                        }\r\n                                        else {\r\n                                            $scope.list = false;\r\n                                            $scope.grid = false;\r\n                                            $scope.Itemlist = true;\r\n                                        }\r\n                                        $state.go(\"profile.Abilities\", { RuleSetId: $scope.RulesetId})\r\n                                    }\r\n                                })\r\n                            }\r\n                        })\r\n\r\n\r\n                };\r\n                //For Tiles\r\n                $scope.ShowTiles = function (val) {\r\n                    var tilesmetadata = rulesetService.GetTilesMetadataForRuleset();\r\n                    tilesmetadata.then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            $scope.TileTypes = data.data.PayLoad.RuleSetMetaData.TileTypes;\r\n                            $scope.ItemPropertyForTile = data.data.PayLoad.RuleSetMetaData.ItemProperty;\r\n\r\n                            $scope.Tile = data.data.PayLoad.RuleSetMetaData.Tile;\r\n                            for (var i = 0; i < $scope.TileTypes.length; i++) {\r\n                                if ($scope.TileTypes[i].TileType == \"Attribute\") {\r\n                                    var index = 2;\r\n                                    if (index != -1) {\r\n                                        $scope.TileTypes.splice(index, 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                            var dlg = dialogs.create('/views/dialogs/tile-type-picker.html', 'dialogTileTypes',\r\n                                { scope: $scope.TileTypes }\r\n                            );\r\n                            dlg.result.then(function (res) {\r\n                                if (res.TileType == \"Note\") {\r\n                                    $scope.Tile.TileTypeId = res.TileId;\r\n                                    $scope.Tile.TileTypeName = res.TileType;\r\n                                    $scope.Tile.Value = res.Value;\r\n                                    var dlg = dialogs.create('/views/dialogs/tile-editor-1.html', 'NoteTile',\r\n                                        { scope: $scope.Tile }\r\n                                    );\r\n                                    dlg.result.then(function (res) {\r\n                                        if (res != \"cancel\") {\r\n                                            res.Height = \"5\";\r\n                                            res.Width = \"5\";\r\n                                            res.X = \"0\";\r\n                                            res.Y = \"0\";\r\n                                            res.IsSync = false;\r\n                                            res.SyncDate = Date.now();\r\n                                            var tile = { \"tile\": res };\r\n                                            var ItemPropertyForTile = $scope.ItemPropertyForTile;\r\n                                            ItemPropertyForTile.tile = res;\r\n                                            val.push(ItemPropertyForTile);\r\n\r\n                                        }\r\n                                        $scope.ClientScopeChange = true;\r\n                                    });\r\n                                }\r\n                                else if (res.TileType == \"Counter\") {\r\n                                    $scope.Tile.TileTypeId = res.TileId;\r\n                                    $scope.Tile.TileTypeName = res.TileType;\r\n                                    $scope.Tile.Value = res.Value;\r\n                                    var dlg = dialogs.create('/views/dialogs/tile-editor-2.html', 'NoteTile',\r\n                                        { scope: $scope.Tile }\r\n                                    );\r\n                                    dlg.result.then(function (res) {\r\n                                        if (res != \"cancel\") {\r\n                                            res.Height = \"5\";\r\n                                            res.Width = \"5\";\r\n                                            res.X = \"0\";\r\n                                            res.Y = \"0\";\r\n                                            res.IsSync = false;\r\n                                            res.SyncDate = Date.now();\r\n                                            var tile = { \"tile\": res };\r\n                                            var ItemPropertyForTile = $scope.ItemPropertyForTile;\r\n                                            ItemPropertyForTile.tile = res;\r\n                                            val.push(ItemPropertyForTile);\r\n                                        }\r\n                                        $scope.ClientScopeChange = true;\r\n\r\n                                    });\r\n                                }\r\n                                \r\n                                else if (res.TileType == \"Link\") {\r\n                                    \r\n                                    $scope.RuleSetContentForLinkExecuteTile = {};\r\n                                    if (angular.equals({}, rulesetDataShareService.getRulesetItems()) == false) {\r\n                                        $scope.RuleSetContentForLinkExecuteTile.Items = rulesetDataShareService.getRulesetItems();\r\n                                    }\r\n                                    else\r\n                                    {\r\n                                        var items = rulesetService.GetRulesetItems(parseInt($state.params.RuleSetId));\r\n                                        items.then(function (data) {\r\n                                            if (data.data.StatusCode == 200) {\r\n                                                //$scope.Ruleset = data.data.PayLoad;\r\n                                                $scope.RuleSetContentForLinkExecuteTile.RulesetItems = data.data.PayLoad;\r\n                                                rulesetDataShareService.setRulesetItems($scope.RuleSetContentForLinkExecuteTile.Items);\r\n                                                $(\"#loading\").fadeOut(\"slow\");\r\n                                            }\r\n                                            else if (data.data.StatusCode == 400) {\r\n                                                if (data.ShowToUser == true) {\r\n                                                    $(\"#loading\").fadeOut(\"slow\");\r\n                                                    toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n\r\n                                                }\r\n                                            }\r\n\r\n                                        })\r\n                                    }\r\n\r\n                                    if (angular.equals({}, rulesetDataShareService.getRulesetSpells()) == false) {\r\n                                        $scope.RuleSetContentForLinkExecuteTile.Spells = rulesetDataShareService.getRulesetSpells();\r\n                                    }\r\n                                    else\r\n                                    {\r\n                                        var spells = rulesetService.GetRulesetSpells(parseInt($state.params.RuleSetId));\r\n                                        spells.then(function (data) {\r\n                                            if (data.data.StatusCode == 200) {\r\n                                                //$scope.Ruleset = data.data.PayLoad;\r\n                                                $scope.RuleSetContentForLinkExecuteTile.Spells = data.data.PayLoad;\r\n                                                rulesetDataShareService.setRulesetSpells($scope.RuleSetContentForLinkExecuteTile.Spells);\r\n                                                $(\"#loading\").fadeOut(\"slow\");\r\n                                            }\r\n                                            else if (data.data.StatusCode == 400) {\r\n                                                if (data.ShowToUser == true) {\r\n                                                    $(\"#loading\").fadeOut(\"slow\");\r\n                                                    toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                                }\r\n                                            }\r\n\r\n                                        })\r\n                                    }\r\n                                    if (angular.equals({}, rulesetDataShareService.getRulesetAbilities()) == false) {\r\n                                        $scope.RuleSetContentForLinkExecuteTile.Abilities = rulesetDataShareService.getRulesetAbilities();\r\n                                    }\r\n                                    else {\r\n                                        var abilities = rulesetService.GetRulesetAbilities(parseInt($state.params.RuleSetId));\r\n                                        abilities.then(function (data) {\r\n                                            if (data.data.StatusCode == 200) {\r\n                                                //$scope.Ruleset = data.data.PayLoad;\r\n                                                $scope.RuleSetContentForLinkExecuteTile.Abilities = data.data.PayLoad;\r\n                                                rulesetDataShareService.setRulesetAbilities($scope.RuleSetContentForLinkExecuteTile.Abilities);\r\n                                                $(\"#loading\").fadeOut(\"slow\");\r\n                                            }\r\n                                            else if (data.data.StatusCode == 400) {\r\n                                                if (data.ShowToUser == true) {\r\n                                                    $(\"#loading\").fadeOut(\"slow\");\r\n                                                    toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                                }\r\n                                            }\r\n\r\n                                        })\r\n                                    }\r\n                                    $scope.Tile.TileTypeId = res.TileId;\r\n                                    $scope.Tile.TileTypeName = res.TileType;\r\n                                    $scope.Tile.Value = res.Value;\r\n\r\n                                    var dlg = dialogs.create('/views/dialogs/tile-editor-4.html', 'NoteTile',\r\n                                        { scope: $scope.Tile, RuleSetContentForLinkExecuteTile: $scope.RuleSetContentForLinkExecuteTile }\r\n                                    );\r\n                                    dlg.result.then(function (res) {\r\n                                        if (res != \"cancel\") {\r\n                                            res.Height = \"5\";\r\n                                            res.Width = \"5\";\r\n                                            res.X = \"0\";\r\n                                            res.Y = \"0\";\r\n                                            res.IsSync = false;\r\n                                            res.SyncDate = Date.now();\r\n                                            var tile = { \"tile\": res };\r\n                                            var ItemPropertyForTile = $scope.ItemPropertyForTile;\r\n                                            ItemPropertyForTile.tile = res;\r\n                                            val.push(ItemPropertyForTile);\r\n\r\n                                        }\r\n                                        $scope.ClientScopeChange = true;\r\n\r\n                                    });\r\n                                }\r\n                                else if (res.TileType == \"Execute\") {\r\n                                   \r\n                                    $scope.RuleSetContentForLinkExecuteTile = {};\r\n                                    if (angular.equals({}, rulesetDataShareService.getRulesetItems()) == false) {\r\n                                        $scope.RuleSetContentForLinkExecuteTile.Items = rulesetDataShareService.getRulesetItems();\r\n                                    }\r\n                                    else {\r\n                                        var items = rulesetService.GetRulesetItems(parseInt($state.params.RuleSetId));\r\n                                        items.then(function (data) {\r\n                                            if (data.data.StatusCode == 200) {\r\n                                                //$scope.Ruleset = data.data.PayLoad;\r\n                                                $scope.RuleSetContentForLinkExecuteTile.RulesetItems = data.data.PayLoad;\r\n                                                rulesetDataShareService.setRulesetItems($scope.RuleSetContentForLinkExecuteTile.Items);\r\n                                                $(\"#loading\").fadeOut(\"slow\");\r\n                                            }\r\n                                            else if (data.data.StatusCode == 400) {\r\n                                                if (data.ShowToUser == true) {\r\n                                                    $(\"#loading\").fadeOut(\"slow\");\r\n                                                    toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                                }\r\n                                            }\r\n\r\n                                        })\r\n                                    }\r\n\r\n                                    if (angular.equals({}, rulesetDataShareService.getRulesetSpells()) == false) {\r\n                                        $scope.RuleSetContentForLinkExecuteTile.Spells = rulesetDataShareService.getRulesetSpells();\r\n                                    }\r\n                                    else {\r\n                                        var spells = rulesetService.GetRulesetSpells(parseInt($state.params.RuleSetId));\r\n                                        spells.then(function (data) {\r\n                                            if (data.data.StatusCode == 200) {\r\n                                                //$scope.Ruleset = data.data.PayLoad;\r\n                                                $scope.RuleSetContentForLinkExecuteTile.Spells = data.data.PayLoad;\r\n                                                rulesetDataShareService.setRulesetSpells($scope.RuleSetContentForLinkExecuteTile.Spells);\r\n                                                $(\"#loading\").fadeOut(\"slow\");\r\n                                            }\r\n                                            else if (data.data.StatusCode == 400) {\r\n                                                if (data.ShowToUser == true) {\r\n                                                    $(\"#loading\").fadeOut(\"slow\");\r\n                                                    toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                                }\r\n                                            }\r\n\r\n                                        })\r\n                                    }\r\n                                    if (angular.equals({}, rulesetDataShareService.getRulesetAbilities()) == false) {\r\n                                        $scope.RuleSetContentForLinkExecuteTile.Abilities = rulesetDataShareService.getRulesetAbilities();\r\n                                    }\r\n                                    else {\r\n                                        var abilities = rulesetService.GetRulesetAbilities(parseInt($state.params.RuleSetId));\r\n                                        abilities.then(function (data) {\r\n                                            if (data.data.StatusCode == 200) {\r\n                                                //$scope.Ruleset = data.data.PayLoad;\r\n                                                $scope.RuleSetContentForLinkExecuteTile.Abilities = data.data.PayLoad;\r\n                                                rulesetDataShareService.setRulesetAbilities($scope.RuleSetContentForLinkExecuteTile.Abilities);\r\n                                                $(\"#loading\").fadeOut(\"slow\");\r\n                                            }\r\n                                            else if (data.data.StatusCode == 400) {\r\n                                                if (data.ShowToUser == true) {\r\n                                                    $(\"#loading\").fadeOut(\"slow\");\r\n                                                    toaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n                                                }\r\n                                            }\r\n\r\n                                        })\r\n                                    }\r\n\r\n                                    $scope.Tile.TileTypeId = res.TileId;\r\n                                    $scope.Tile.TileTypeName = res.TileType;\r\n                                    $scope.Tile.Value = res.Value;\r\n                                    var dlg = dialogs.create('/views/dialogs/tile-editor-5.html', 'NoteTile',\r\n                                        { scope: $scope.Tile, RuleSetContentForLinkExecuteTile: $scope.RuleSetContentForLinkExecuteTile }\r\n                                    );\r\n                                    dlg.result.then(function (res) {\r\n                                        if (res != \"cancel\") {\r\n                                            res.Height = \"5\";\r\n                                            res.Width = \"5\";\r\n                                            res.X = \"0\";\r\n                                            res.Y = \"0\";\r\n                                            res.IsSync = false;\r\n                                            res.SyncDate = Date.now();\r\n                                            var tile = { \"tile\": res };\r\n                                            var ItemPropertyForTile = $scope.ItemPropertyForTile;\r\n                                            ItemPropertyForTile.tile = res;\r\n                                            val.push(ItemPropertyForTile);\r\n                                        }\r\n                                        $scope.ClientScopeChange = true;\r\n                                    })\r\n\r\n                                }\r\n                                else if (res.TileType == \"Command\") {\r\n                                    $scope.Tile.TileTypeId = res.TileId;\r\n                                    $scope.Tile.TileTypeName = res.TileType;\r\n                                    $scope.Tile.Value = res.Value;\r\n                                    var dlg = dialogs.create('/views/dialogs/tile-editor-6.html', 'NoteTile',\r\n                                        { scope: $scope.Tile }\r\n                                    );\r\n                                    dlg.result.then(function (res) {\r\n\r\n                                        if (res != \"cancel\") {\r\n                                            res.Height = \"5\";\r\n                                            res.Width = \"5\";\r\n                                            res.X = \"0\";\r\n                                            res.Y = \"0\";\r\n                                            res.IsSync = false;\r\n                                            res.SyncDate = Date.now();\r\n                                            var tile = { \"tile\": res };\r\n                                            var ItemPropertyForTile = $scope.ItemPropertyForTile;\r\n                                            ItemPropertyForTile.tile = res;\r\n                                            val.push(ItemPropertyForTile);\r\n                                        }\r\n\r\n                                        $scope.ClientScopeChange = true;\r\n\r\n                                    });\r\n                                }\r\n                                else if (res.TileType == \"Image\") {\r\n                                    $scope.Tile.TileTypeId = res.TileId;\r\n                                    $scope.Tile.TileTypeName = res.TileType;\r\n                                    $scope.Tile.Value = res.Value;\r\n                                    var dlg = dialogs.create('/views/dialogs/tile-editor-7.html', 'NoteTile',\r\n                                        { scope: $scope.Tile }\r\n                                    );\r\n                                    dlg.result.then(function (res) {\r\n                                        if (res != \"cancel\") {\r\n                                            res.Height = \"5\";\r\n                                            res.Width = \"5\";\r\n                                            res.X = \"0\";\r\n                                            res.Y = \"0\";\r\n                                            res.IsSync = false;\r\n                                            res.SyncDate = Date.now();\r\n                                            var tile = { \"tile\": res };\r\n                                            var ItemPropertyForTile = $scope.ItemPropertyForTile;\r\n                                            ItemPropertyForTile.tile = res;\r\n                                            val.push(ItemPropertyForTile);\r\n                                        }\r\n\r\n                                        $scope.ClientScopeChange = true;\r\n                                    });\r\n\r\n                                }\r\n                            })\r\n\r\n                        }\r\n                    })\r\n                    //var TileTypes = $scope.NewRuleSet.RuleSetMetaData.TileTypes;\r\n                }\r\n\r\n                $scope.SaveTilesForRuleset = function (tilecontent, Num) {\r\n                    //$scope.NewLayout = rulesetDataShareService.getLayoutData();\r\n\r\n                    if (Num == 1) {\r\n                        //$scope.SelectedItemContent = tilecontent;\r\n                        var RulesetTiles = {}\r\n                        RulesetTiles.ItemProperties = tilecontent;\r\n                        RulesetTiles.SpellProperties = null;\r\n                        RulesetTiles.AbilityProperties = null\r\n                        var items = rulesetService.SaveRulesetTiles(RulesetTiles).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                $scope.RulesetContent = data.data.PayLoad.Result;\r\n                                toaster.pop('success', \"Tile Added Successfully\");\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (Num == 2) {\r\n                        var RulesetTiles = {}\r\n                        RulesetTiles.ItemProperties = null;\r\n                        RulesetTiles.SpellProperties = tilecontent;\r\n                        RulesetTiles.AbilityProperties = null\r\n                        var items = rulesetService.SaveRulesetTiles(RulesetTiles).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                $scope.RulesetContent = data.data.PayLoad.Result;\r\n                                toaster.pop('success', \"Tile Added Successfully\");\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (Num == 3) {\r\n                        var RulesetTiles = {}\r\n                        RulesetTiles.ItemProperties = null;\r\n                        RulesetTiles.SpellProperties = null;\r\n                        RulesetTiles.AbilityProperties = tilecontent\r\n                        var items = rulesetService.SaveRulesetTiles(RulesetTiles).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                $scope.RulesetContent = data.data.PayLoad.Result;\r\n                                toaster.pop('success', \"Tile Added Successfully\");\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                $scope.stackOptions = {\r\n                    height: 150,\r\n                    width: 400,\r\n                    cellHeight: 30,\r\n                    minWidth: 1,\r\n\r\n                    pixelWidth: 35,\r\n                    verticalMargin: 5,\r\n                    alwaysShowResizeHandle: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),\r\n\r\n                    resizable: {\r\n                        handles: 'e, se, s, sw, w'\r\n                    },\r\n                    draggable: {\r\n                        refreshPositions: true,\r\n                        handle: '.grid-stack-item-content'\r\n                    }\r\n                };\r\n\r\n                $scope.onDragStart = function (event, ui) {\r\n                    $timeout(function () {\r\n                        $scope.state.tileDragging = true;\r\n                    });\r\n                };\r\n\r\n                $scope.onDragStop = function (event, ui) {\r\n                    $timeout(function () {\r\n                        $scope.state.tileDragging = false;\r\n                    });\r\n                };\r\n\r\n                $scope.state = {\r\n                    tilesEditing: false,\r\n                    tileDragging: false,\r\n                    tileDeleteId: null\r\n                };\r\n\r\n                $scope.moveWidget = function () {\r\n                    $scope.widgets[0].x = 1;\r\n                    $scope.widgets[0].width = 2;\r\n                    $scope.widgets[0].height = 2;\r\n                };\r\n\r\n                $scope.widgets = [{ x: 0, y: 0, width: 1, height: 1 }, { x: 0, y: 0, width: 3, height: 1 }];\r\n                $scope.onChange = function (event, items) {\r\n                    $log.log(\"onChange event: \" + event + \" items:\" + items);\r\n                };\r\n\r\n                $scope.onResizeStop = function (event, ui) {\r\n                    $log.log(\"onResizeStop event: \" + event + \" ui:\" + ui);\r\n                };\r\n\r\n                $scope.onItemAdded = function (item) {\r\n                    $log.log(\"onItemAdded item: \" + item);\r\n                };\r\n\r\n                $scope.onItemRemoved = function (item) {\r\n                    $log.log(\"onItemRemoved item: \" + item);\r\n                };\r\n\r\n\r\n                $scope.ShowAssociatedSpells = function (index) {\r\n                    $state.go(\"profile.RulesetSpellDetails\", { index: index });\r\n                }\r\n\r\n                $scope.ShowAllSpellsContent = function (index) {\r\n                    //alert(\"Testing Aleart\");\r\n\r\n                    $state.go(\"profile.RulesetSpellDetails\", { index: index });\r\n                }\r\n\r\n                $scope.ShowAssociatedSpells = function (index) {\r\n                    //alert(\"Testing Aleart\");\r\n\r\n                    $state.go(\"profile.RulesetSpellDetails\", { index: index });\r\n                }\r\n\r\n\r\n            }\r\n\r\n            function UpdateRuleSet(Id, CopyOrUpdate) {\r\n                $(\"#loading\").css(\"display\", \"block\");\r\n                var getData = rulesetService.GetNewRulesetByRuleSetId(Id);\r\n                getData.then(function (data) {\r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                    if (data.data.StatusCode == 200) {\r\n                        $scope.NewRuleSet = data.data.PayLoad\r\n                        $scope.ItemProperties = $scope.NewRuleSet.RuleSetMetaData.ItemProperties;\r\n                        $scope.SpellProperties = $scope.NewRuleSet.RuleSetMetaData.SpellProperties;\r\n                        $scope.AbilityProperties = $scope.NewRuleSet.RuleSetMetaData.AbilityProperties;\r\n                        $scope.CoreStatProperties = $scope.NewRuleSet.RuleSetMetaData.Corestats;\r\n\r\n                        $scope.NewRuleSet.ImportRquired = true;\r\n\r\n                        rulesetDataShareService.setRulesetData(null);\r\n                        rulesetDataShareService.setRulesetData($scope.NewRuleSet);\r\n\r\n                        if ($scope.NewRuleSet.Corestats.length == 0) {\r\n                            $scope.NewRuleSet.IsAddDisabled = false;\r\n                            $scope.iscorestatsadded = false;\r\n                        }\r\n                        else {\r\n                            $scope.NewRuleSet.IsAddDisabled = true;\r\n                            $scope.iscorestatsadded = true;\r\n                        }\r\n                        if ($scope.NewRuleSet.Items.length == 0) {\r\n                            $scope.isitemsadded = false;\r\n                        }\r\n                        else {\r\n                            $scope.isitemsadded = true;\r\n                        }\r\n                        if ($scope.NewRuleSet.Spells.length == 0) {\r\n                            $scope.isspellsadded = false;\r\n                        }\r\n                        else {\r\n                            $scope.isspellsadded = true;\r\n                        }\r\n                        if ($scope.NewRuleSet.Abilities.length == 0) {\r\n                            $scope.isabilitiesadded = false;\r\n                        }\r\n                        else {\r\n                            $scope.isabilitiesadded = true;\r\n                        }\r\n\r\n                        if (angular.equals({}, rulesetDataShareService.getruleset()) == false) {\r\n                            $scope.NewRuleSet = rulesetDataShareService.getruleset();\r\n                            if ($scope.NewRuleSet.Corestats != null) {\r\n                                if ($scope.NewRuleSet.Corestats.length > 0) {\r\n                                    $scope.iscorestatsadded = true;\r\n                                }\r\n                            }\r\n                            if ($scope.NewRuleSet.Items != null) {\r\n                                if ($scope.NewRuleSet.Items.length > 0) {\r\n                                    $scope.isitemsadded = true;\r\n                                }\r\n                            }\r\n                            if ($scope.NewRuleSet.Spells != null) {\r\n                                if ($scope.NewRuleSet.Spells.length > 0) {\r\n                                    $scope.isspellsadded = true;\r\n                                }\r\n                            }\r\n                            if ($scope.NewRuleSet.Abilities != null) {\r\n                                if ($scope.NewRuleSet.Abilities.length > 0) {\r\n                                    $scope.isabilitiesadded = true;\r\n                                }\r\n                            }\r\n                        }\r\n                        //if (angular.equals({}, rulesetDataShareService.getRulesetcontent()) == false) {\r\n                        //    $scope.RulesetContent = rulesetDataShareService.getRulesetcontent();\r\n                        //    $scope.isabilitiesadded = true;\r\n                        //}\r\n\r\n                        for (var i = 0; i < $scope.NewRuleSet.Corestats.length; i++) {\r\n                            var result = $scope.NewRuleSet.Corestats[i];\r\n                            for (var k = 0; k < $scope.Types.length; k++) {\r\n                                if ($scope.Types[k].TypeId == result.TypeId) {\r\n                                    result.TypeName = $scope.Types[k].Name;\r\n                                }\r\n                            }\r\n                        }\r\n                        $scope.ItemsCount = $scope.NewRuleSet.Items.length;\r\n                        $scope.SpellsCount = $scope.NewRuleSet.Spells.length;\r\n                        $scope.AbilitiesCount = $scope.NewRuleSet.Abilities.length;\r\n                        if (CopyOrUpdate == 0) {\r\n                            $scope.NewRuleSet.Action = \"Copy\";\r\n                            $scope.NewRuleSet.ActionIcon = \"fa fa-clone\";\r\n                            $scope.NewRuleSet.Heading = \"Copy Ruleset Details\";\r\n                        }\r\n                        else {\r\n                            $scope.NewRuleSet.Action = \"Update\";\r\n                            $scope.NewRuleSet.ActionIcon = \"fa fa-pencil-square-o\";\r\n                            $scope.NewRuleSet.Heading = \"Update Ruleset Details for \" + $scope.NewRuleSet.Name;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (data.data.StatusCode == 400) {\r\n                            if (data.data.ShowToUser == true) {\r\n                                toaster.pop(\"error\", data.data.ErrorMessage);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                    function () {\r\n                        toaster.pop(\"error\", 'Error in getting records');\r\n\r\n                    });\r\n            }\r\n\r\n            function AddRuleSet() {\r\n                $(\"#loading\").css(\"display\", \"block\");\r\n                rulesetService.GetNewRuleset().then(function (data) {\r\n                    $(\"#loading\").fadeOut(\"slow\");\r\n                    if (data.data.StatusCode == 200) {\r\n                        $scope.NewRuleSet = data.data.PayLoad\r\n                        $scope.ItemProperties = $scope.NewRuleSet.RuleSetMetaData.ItemProperties;\r\n                        $scope.SpellProperties = $scope.NewRuleSet.RuleSetMetaData.SpellProperties;\r\n                        $scope.AbilityProperties = $scope.NewRuleSet.RuleSetMetaData.AbilityProperties;\r\n                        $scope.CoreStatProperties = $scope.NewRuleSet.RuleSetMetaData.Corestats;\r\n\r\n                        rulesetDataShareService.setRulesetData(null);\r\n                        rulesetDataShareService.setRulesetData($scope.NewRuleSet);\r\n\r\n                       \r\n\r\n                        $scope.NewRuleSet.IsAddDisabled = false;\r\n                        $scope.NewRuleSet.Action = \"Add\";\r\n                        $scope.NewRuleSet.ActionIcon = \"fa fa-plus\";\r\n                        $scope.NewRuleSet.Heading = \"Add New Ruleset\";\r\n                    }\r\n                    else {\r\n                        if (data.data.StatusCode == 400) {\r\n                            if (data.data.ShowToUser == true) {\r\n                                toaster.pop(\"error\", data.data.ErrorMessage);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            $scope.onDeleteDrop = function (event, ui) {\r\n                var tile = GridStackUI.Utils.getNodeData(ui.helper);\r\n                var ClientObjectTileId = ui.helper[0].dataset.gsId;\r\n\r\n                var deletedTileIndex = -1;\r\n                if ($scope.RulesetContent.ItemProperties != undefined && $scope.RulesetContent.ItemProperties != null && $scope.RulesetContent.ItemProperties != \"\")\r\n                {\r\n                    for (var i = 0; i < $scope.RulesetContent.ItemProperties.length; i++) {\r\n                        var ItemPropertyLst = $scope.RulesetContent.ItemProperties[i];\r\n                        if (ItemPropertyLst.Id == 0 || ItemPropertyLst.Id == undefined || ItemPropertyLst.Id == \"\") {\r\n                            if (ClientObjectTileId == $scope.RulesetContent.ItemProperties[i].tile.ClientObjectId) {\r\n                                deletedTileIndex = i;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if ($scope.RulesetContent.ItemProperties[deletedTileIndex].tile.TileId == 0) {\r\n                        $scope.RulesetContent.ItemProperties.splice(deletedTileIndex, 1);\r\n                    }\r\n                    else {\r\n                        tileService.deleteTile($scope.RulesetContent.ItemProperties[deletedTileIndex].tile).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                $scope.RulesetContent.ItemProperties.splice(deletedTileIndex, 1);\r\n                            }\r\n                            else if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                    toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                else if ($scope.RulesetContent.SpellProperties != undefined && $scope.RulesetContent.SpellProperties != null && $scope.RulesetContent.SpellProperties != \"\") {\r\n                    for (var i = 0; i < $scope.RulesetContent.SpellProperties.length; i++) {\r\n                        var spellPropertyLst = $scope.RulesetContent.SpellProperties[i];\r\n                        if (spellPropertyLst.Id == 0 || spellPropertyLst.Id == undefined || spellPropertyLst.Id == \"\") {\r\n                            if (ClientObjectTileId == $scope.RulesetContent.SpellProperties[i].tile.ClientObjectId) {\r\n                                    deletedTileIndex = i;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    if ($scope.RulesetContent.SpellProperties[deletedTileIndex].tile.TileId == 0) {\r\n                        $scope.RulesetContent.SpellProperties.splice(deletedTileIndex, 1);\r\n                        }\r\n                        else {\r\n                        tileService.deleteTile($scope.RulesetContent.SpellProperties[deletedTileIndex].tile).then(function (data) {\r\n                                if (data.data.StatusCode == 200) {\r\n                                    $scope.RulesetContent.SpellProperties.splice(deletedTileIndex, 1);\r\n                                }\r\n                                else if (data.data.StatusCode == 400) {\r\n                                    if (data.data.ShowToUser == true) {\r\n                                        toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                }\r\n                else if ($scope.RulesetContent.AbilityProperties != undefined && $scope.RulesetContent.AbilityProperties != null && $scope.RulesetContent.AbilityProperties != \"\") {\r\n                    for (var i = 0; i < $scope.RulesetContent.AbilityProperties.length; i++) {\r\n                        var abilityPropertyLst = $scope.RulesetContent.AbilityProperties[i];\r\n                        if (abilityPropertyLst.Id == 0 || abilityPropertyLst.Id == undefined || abilityPropertyLst.Id == \"\") {\r\n                            if (ClientObjectTileId == $scope.RulesetContent.AbilityProperties[i].tile.ClientObjectId) {\r\n                                deletedTileIndex = i;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if ($scope.RulesetContent.AbilityProperties[deletedTileIndex].tile.TileId == 0) {\r\n                        $scope.RulesetContent.AbilityProperties.splice(deletedTileIndex, 1);\r\n                    }\r\n                    else {\r\n                        tileService.deleteTile($scope.RulesetContent.AbilityProperties[deletedTileIndex].tile).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n                                $scope.RulesetContent.AbilityProperties.splice(deletedTileIndex, 1);\r\n                            }\r\n                            else if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                    toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                \r\n\r\n                \r\n            };\r\n            $scope.onDeleteDropCharacterItem = function (event, ui) {\r\n                var tile = GridStackUI.Utils.getNodeData(ui.helper);\r\n                var TileId = ui.helper[0].dataset.gsId;\r\n                if (TileId)\r\n                    tileService.deleteTile(parseInt(TileId)).then(function (data) {\r\n                        if (data.data.StatusCode == 200) {\r\n                            //$scope.RuleSet = $scope.NewRuleSet;\r\n                            $scope.RuleSetItems = rulesetDataShareService.getRulesetItems();\r\n                            $scope.RuleSetSpells = rulesetDataShareService.getRulesetSpells();\r\n                            $scope.RuleSetAbilities = rulesetDataShareService.getRulesetAbilities();\r\n                            for (var i = 0; i < $scope.RuleSetItems.length; i++) {\r\n                                var Item = $scope.RuleSetItems[i];\r\n                                var ItemPropertyLst = Item.ItemProperties;\r\n                                for (var j = 0; j < ItemPropertyLst.length; j++) {\r\n                                    var TileItemProperties = ItemPropertyLst[j];\r\n                                    if (ItemPropertyLst[j].ContentTypeId == null) {\r\n                                        var RemainingTiles = [];\r\n                                        if (j != 0) {\r\n                                            RemainingTiles.push(ItemPropertyLst[j]);\r\n                                        }\r\n                                        if (ItemPropertyLst[j].tile.TileId == parseInt(TileId)) {\r\n                                            if (j == 0) {\r\n                                                ItemPropertyLst.splice(j, 1);\r\n                                                TileItemProperties = RemainingTiles;\r\n                                            }\r\n                                            else {\r\n                                                ItemPropertyLst.splice(j, 1);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            for (var i = 0; i < $scope.RuleSetSpells.length; i++) {\r\n                                var Spell = $scope.RuleSetSpells[i];\r\n                                var SpellPropertyLst = Spell.SpellProperties;\r\n                                for (var j = 0; j < SpellPropertyLst.length; j++) {\r\n                                    var TileSpellProperties = SpellPropertyLst[j];\r\n                                    if (SpellPropertyLst[j].ContentTypeId == null) {\r\n                                        var RemainingTiles = [];\r\n                                        if (j != 0) {\r\n                                            RemainingTiles.push(SpellPropertyLst[j]);\r\n                                        }\r\n                                        if (SpellPropertyLst[j].tile.TileId == parseInt(TileId)) {\r\n                                            if (j == 0) {\r\n                                                SpellPropertyLst.splice(j, 1);\r\n                                                TileSpellProperties = RemainingTiles;\r\n                                            }\r\n                                            else {\r\n                                                SpellPropertyLst.splice(j, 1);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            for (var i = 0; i < $scope.RuleSetAbilities.length; i++) {\r\n                                var Ability = $scope.RuleSetAbilities[i];\r\n                                var AbilityPropertyLst = Ability.AbilityProperties;\r\n                                for (var j = 0; j < AbilityPropertyLst.length; j++) {\r\n                                    var TileAbilityProperties = AbilityPropertyLst[j];\r\n                                    if (AbilityPropertyLst[j].ContentTypeId == null) {\r\n                                        var RemainingTiles = [];\r\n                                        if (j != 0) {\r\n                                            RemainingTiles.push(SpellPropertyLst[j]);\r\n                                        }\r\n                                        if (AbilityPropertyLst[j].tile.TileId == parseInt(TileId)) {\r\n                                            if (j == 0) {\r\n                                                AbilityPropertyLst.splice(j, 1);\r\n                                                TileAbilityProperties = RemainingTiles;\r\n                                            }\r\n                                            else {\r\n                                                AbilityPropertyLst.splice(j, 1);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            //$scope.NewRuleSet = [];\r\n                            //$scope.NewRuleSet = $scope.RuleSet;\r\n                            toaster.pop('success', \"Tile deleted Successfully.\");\r\n                        }\r\n                        else {\r\n                            if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                    toaster.pop(\"error\", data.data.ErrorMessage);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n\t\t\t};\r\n\r\n\t\t\t//Bing Search\r\n\t\t\t$scope.OpenBingSearch = function () {\r\n\t\t\t\t$scope.buttontext = \"Ok\";\r\n\t\t\t\t$scope.pageName = \"Bing Image Search\";\r\n\t\t\t\tvar dlg = dialogs.create('/views/search/BingSearch.html', 'dialogGeneralSettings',\r\n\t\t\t\t\t{ btntext: $scope.buttontext, tabname: $scope.pageName, BingSearch: $scope.BingSearch }\r\n\t\t\t\t);\r\n\t\t\t\tdlg.result.then(function (res) {\r\n\t\t\t\t\tif (res != 'cancel') {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n            // For New Design\r\n\r\n            $scope.RulesetGeneralSettings = function () {\r\n                var settings = rulesetService.GetGeneralSettingsMetadata();\r\n                settings.then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        $scope.GeneralSettingsMetadata = data.data.PayLoad.Rulesetproperty;\r\n                        $scope.buttontext = \"Next\";\r\n                        $scope.pageName = \"New Rule Set\";\r\n                        var dlg = dialogs.create('/views/dialogs/rulesetgeneralsettings.html', 'dialogGeneralSettings',\r\n\t\t\t\t\t\t\t{ OpenBingSearch: $scope.OpenBingSearch,OpenFile: $scope.OpenFile, scope: $scope.GeneralSettingsMetadata, btntext: $scope.buttontext, tabname: $scope.pageName, BingSearch: $scope.BingSearch}\r\n                        );\r\n                        dlg.result.then(function (res) {\r\n                            if (res != 'cancel') {\r\n                                GetRulesets();\r\n                                $state.go('profile.AddNewRuleSet');\r\n                                toaster.pop(\"success\", \"Rule Set created successfully\");\r\n                                $(\"#loading\").fadeOut(\"slow\");\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (data.data.StatusCode == 400) {\r\n                        if (data.data.ShowToUser == true) {\r\n                            toaster.pop(\"error\", data.data.ErrorMessage);\r\n                        }\r\n                    }\r\n                })\r\n\r\n\t\t\t}\r\n\r\n\t\t\t$scope.ManageRuleset = function (val) {\r\n               // $(\"#loading\").css(\"display\", \"block\");\r\n\t\t\t\tconsole.log(\"Val: \", val);\r\n\t\t\t\tvar editsettings = rulesetService.GetRuleSetGeneralSettings(val);\r\n\t\t\t\teditsettings.then(function (data) {\r\n\t\t\t\t\tconsole.log(\"editsettings: \", editsettings);\r\n\t\t\t\t\tif (data.data.StatusCode == 200) {\r\n\t\t\t\t\t\t$scope.GeneralSettings = data.data.PayLoad;\r\n\t\t\t\t\t\t$scope.buttontext = \"Update\";\r\n\t\t\t\t\t\t$scope.pageName = \"Edit Rule Set\";\r\n\t\t\t\t\t\t$scope.Disabled = \"Edit\";\r\n\t\t\t\t\t\t$scope.DisableName = true;\r\n\r\n\t\t\t\t\t\t//Pass the ruleset in the dialog here\r\n\t\t\t\t\t\t$scope.RulesetId = val;\r\n\t\t\t\t\t\trulesetDataShareService.setRulesetsData($scope.RulesetId);\r\n\t\t\t\t\t\tvar dlg = dialogs.create('/views/dialogs/manageruleset.html', 'dialogManageRuleset',\r\n\t\t\t\t\t\t\t{ scope: $scope.GeneralSettings}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tdlg.result.then(function (res, Id) {\r\n\t\t\t\t\t\t\tif (res == \"General\") {\r\n\t\t\t\t\t\t\t\t$(\"#loading\").css(\"display\", \"block\");\r\n\t\t\t\t\t\t\t\t$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n\t\t\t\t\t\t\t\t$scope.EditGeneralSettings($scope.RulesetId);\r\n\t\t\t\t\t\t\t} else if (res == \"Corestat\") {\r\n\t\t\t\t\t\t\t\t$(\"#loading\").css(\"display\", \"block\");\r\n\t\t\t\t\t\t\t\t$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n\t\t\t\t\t\t\t\tvar corestats = rulesetService.GetRulesetCorestats($scope.RulesetId);\r\n\t\t\t\t\t\t\t\tcorestats.then(function (data) {\r\n\t\t\t\t\t\t\t\t\t$(\"#loading\").fadeOut(\"slow\");\r\n\t\t\t\t\t\t\t\t\tif (data.data.StatusCode == 200) {\r\n\t\t\t\t\t\t\t\t\t\t$scope.Corestats = data.data.PayLoad;\r\n\t\t\t\t\t\t\t\t\t\trulesetService.GetTypes().then(function (data) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (data.data.StatusCode == 200) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t$scope.Types = data.data.PayLoad;\r\n\t\t\t\t\t\t\t\t\t\t\t\trulesetDataShareService.setcorestat($scope.Corestats);\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < $scope.Types.length; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (var j = 0; j < $scope.Corestats.length; j++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($scope.Types[i].TypeId == $scope.Corestats[j].TypeId) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$scope.Corestats[j].TypeName = $scope.Types[i].Name;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tif ($scope.Corestats.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t$scope.lists = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t$scope.list = false;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t$scope.lists = false;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t$scope.list = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t$state.go(\"profile.Corestats\", { RuleSetId: $scope.RulesetId })\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (data.data.StatusCode == 400) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (data.data.ShowToUser == true) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoaster.pop(\"error\", data.data.ErrorMessage);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (res == \"Items\") {\r\n\t\t\t\t\t\t\t\t$(\"#loading\").css(\"display\", \"block\");\r\n\t\t\t\t\t\t\t\t$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n\t\t\t\t\t\t\t\tvar items = rulesetService.GetRulesetItems($scope.RulesetId);\r\n\t\t\t\t\t\t\t\titems.then(function (data) {\r\n\t\t\t\t\t\t\t\t\t$(\"#loading\").fadeOut(\"slow\");\r\n\t\t\t\t\t\t\t\t\tif (data.data.StatusCode == 200) {\r\n\t\t\t\t\t\t\t\t\t\t//$scope.Ruleset = data.data.PayLoad;\r\n\t\t\t\t\t\t\t\t\t\t$scope.RulesetItems = data.data.PayLoad;\r\n\t\t\t\t\t\t\t\t\t\trulesetDataShareService.setRulesetItems($scope.RulesetItems);\r\n\t\t\t\t\t\t\t\t\t\tif ($scope.RulesetItems.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.list = true;\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.grid = true;\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.Itemlist = false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.list = false;\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.grid = false;\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.Itemlist = true;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t$state.go(\"profile.Items\", { RuleSetId: $scope.RulesetId })\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (data.data.StatusCode == 400) {\r\n\t\t\t\t\t\t\t\t\t\tif (data.ShowToUser == true) {\r\n\t\t\t\t\t\t\t\t\t\t\ttoaster.pop(\"error\", data.data.ErrorMessage);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (res == \"Spells\") {\r\n\t\t\t\t\t\t\t\t$(\"#loading\").css(\"display\", \"block\");\r\n\t\t\t\t\t\t\t\t$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n\t\t\t\t\t\t\t\tvar spells = rulesetService.GetRulesetSpells($scope.RulesetId);\r\n\t\t\t\t\t\t\t\tspells.then(function (data) {\r\n\t\t\t\t\t\t\t\t\t$(\"#loading\").fadeOut(\"slow\");\r\n\t\t\t\t\t\t\t\t\tif (data.data.StatusCode == 200) {\r\n\t\t\t\t\t\t\t\t\t\t//$scope.Ruleset = data.data.PayLoad;\r\n\t\t\t\t\t\t\t\t\t\t$scope.RulesetSpells = data.data.PayLoad;\r\n\t\t\t\t\t\t\t\t\t\trulesetDataShareService.setRulesetSpells($scope.RulesetSpells);\r\n\t\t\t\t\t\t\t\t\t\tif ($scope.RulesetSpells.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.list = true;\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.grid = true;\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.Itemlist = false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.list = false;\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.grid = false;\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.Itemlist = true;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t$state.go(\"profile.Spells\", { RuleSetId: $scope.RulesetId })\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (data.data.StatusCode == 400) {\r\n\t\t\t\t\t\t\t\t\t\tif (data.ShowToUser == true) {\r\n\t\t\t\t\t\t\t\t\t\t\ttoaster.pop(\"error\", data.data.ErrorMessage);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\telse if (res == \"Abilities\") {\r\n\t\t\t\t\t\t\t\t$(\"#loading\").css(\"display\", \"block\");\r\n\t\t\t\t\t\t\t\t$scope.RulesetId = rulesetDataShareService.getRulesetsData();\r\n\t\t\t\t\t\t\t\tvar abilities = rulesetService.GetRulesetAbilities($scope.RulesetId);\r\n\t\t\t\t\t\t\t\tabilities.then(function (data) {\r\n\t\t\t\t\t\t\t\t\t$(\"#loading\").fadeOut(\"slow\");\r\n\t\t\t\t\t\t\t\t\tif (data.data.StatusCode == 200) {\r\n\t\t\t\t\t\t\t\t\t\t//$scope.Ruleset = data.data.PayLoad;\r\n\t\t\t\t\t\t\t\t\t\t$scope.RulesetAbilities = data.data.PayLoad;\r\n\t\t\t\t\t\t\t\t\t\trulesetDataShareService.setRulesetAbilities($scope.RulesetAbilities);\r\n\t\t\t\t\t\t\t\t\t\tif ($scope.RulesetAbilities.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.list = true;\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.grid = true;\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.Itemlist = false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.list = false;\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.grid = false;\r\n\t\t\t\t\t\t\t\t\t\t\t$scope.Itemlist = true;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t$state.go(\"profile.Abilities\", { RuleSetId: $scope.RulesetId })\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (data.data.StatusCode == 400) {\r\n\t\t\t\t\t\t\t\t\t\tif (data.ShowToUser == true) {\r\n\t\t\t\t\t\t\t\t\t\t\ttoaster.pop(\"error\", data.data.ErrorMessage);\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t$(\"#loading\").fadeOut(\"slow\");\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n                \r\n            }\r\n\r\n            $scope.showContextMenu = function (c) {\r\n\r\n                var cardActionsHover = angular.element(c.target).parents(\".card\").find(\".card-actions\");\r\n\r\n                if (cardActionsHover.hasClass(\"hide\")) {\r\n                    cardActionsHover.removeClass(\"hide\");\r\n                    cardActionsHover.addClass(\"show\");\r\n                }\r\n                else {\r\n                    cardActionsHover.removeClass(\"show\");\r\n                    cardActionsHover.addClass(\"hide\");\r\n                }\r\n\r\n            };\r\n\r\n            $scope.hideConteextMenu = function (c) {\r\n                var cardActionsHover = angular.element(c.target).parents(\".card\").find(\".card-actions\");\r\n                cardActionsHover.removeClass(\"show\");\r\n                cardActionsHover.addClass(\"hide\");\r\n            };\r\n\r\n            $scope.EditGeneralSettings = function (val) {\r\n                var editsettings = rulesetService.GetRuleSetGeneralSettings(val)\r\n                editsettings.then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        $scope.GeneralSettings = data.data.PayLoad;\r\n                        $scope.buttontext = \"Update\";\r\n                        $scope.pageName = \"Edit Rule Set\";\r\n                        $scope.Disabled = \"Edit\";\r\n                        $scope.DisableName = true;\r\n                        var dlg = dialogs.create('/views/dialogs/rulesetgeneralsettings.html', 'dialogGeneralSettings',\r\n\t\t\t\t\t\t\t{ openManageRuleset: $scope.ManageRuleset, scope: $scope.GeneralSettings, btntext: $scope.buttontext, tabname: $scope.pageName, IsenableBtn: $scope.IsButtonDisabled, CoreStatsInGrid: $scope.CoreStatsInGrid, CoreStatsNameInGrid: $scope.CoreStatsNameInGrid, CoreStatMode: $scope.OperationTypeMode, Disabled: $scope.Disabled, DisableName: $scope.DisableName, BingSearch: $scope.BingSearch}\r\n\t\t\t\t\t\t);\r\n\r\n                        dlg.result.then(function (res) {\r\n                            if (res != \"cancel\") {\r\n                                // $state.go(\"profile.AddNewRuleSet\")\r\n                                var editedRuleSetIndex = -1;\r\n                                for (var i = 0; i < $scope.RuleSets.length; i++) {\r\n                                    if ($scope.RuleSets[i].Id == res[0].RulesetId) {\r\n                                        editedRuleSetIndex = i;\r\n                                    }\r\n                                }\r\n                                if (editedRuleSetIndex > -1) {\r\n                                    $scope.RuleSets[editedRuleSetIndex].Name = res[0].RulesetName;\r\n                                    $scope.RuleSets[editedRuleSetIndex].Rulesetproperty = res;\r\n                                }\r\n                                toaster.pop('success', \"Ruleset Updated Successfully\");\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n\r\n            $scope.CopyRuleSet = function (item) {\r\n                item.Rulesetproperty[0].RulesetId = item.Id;\r\n                $scope.buttontext = \"Copy\";\r\n                $scope.pageName = \"Copy Ruleset\";\r\n                $scope.Disabled = \"Copy\";\r\n                $scope.DisableName = false;\r\n                var dlg = dialogs.create('/views/dialogs/rulesetgeneralsettings.html', 'dialogGeneralSettings',\r\n                    { scope: item.Rulesetproperty, btntext: $scope.buttontext, tabname: $scope.pageName, IsenableBtn: $scope.IsButtonDisabled, CoreStatsInGrid: $scope.CoreStatsInGrid, CoreStatsNameInGrid: $scope.CoreStatsNameInGrid, CoreStatMode: $scope.OperationTypeMode, Disabled: $scope.Disabled, DisableName: $scope.DisableName}\r\n                );\r\n\r\n                dlg.result.then(function (res) {\r\n                    if (res != \"cancel\") {\r\n                        GetRulesets();\r\n                        //  $state.go(\"profile.AddNewRuleSet\")\r\n                        toaster.pop('success', res);\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n\r\n            $scope.GridViewTrigger = function (e) {\r\n                var gridViewTrigger = angular.element(e.target);\r\n                gridViewTrigger.parent().children().removeClass(\"selected\");\r\n                gridViewTrigger.addClass(\"selected\");\r\n\r\n                angular.element(\".card-list\").removeClass(\"view-list\");\r\n            }\r\n\r\n            $scope.ListViewTrigger = function (e) {\r\n                var listViewTrigger = angular.element(e.target);\r\n                listViewTrigger.parent().children().removeClass(\"selected\");\r\n                listViewTrigger.addClass(\"selected\");\r\n\r\n                angular.element(\".card-list\").addClass(\"view-list\");\r\n            }\r\n\r\n\r\n            $scope.showContextMenu = function (c) {\r\n\r\n                var cardActionsHover = angular.element(c.target).parents(\".card\").find(\".card-actions\");\r\n\r\n                if (cardActionsHover.hasClass(\"hide\")) {\r\n                    cardActionsHover.removeClass(\"hide\");\r\n                    cardActionsHover.addClass(\"show\");\r\n                }\r\n                else {\r\n                    cardActionsHover.removeClass(\"show\");\r\n                    cardActionsHover.addClass(\"hide\");\r\n                }\r\n\r\n            };\r\n\r\n\r\n            $scope.hideConteextMenu = function (c) {\r\n                var cardActionsHover = angular.element(c.target).parents(\".card\").find(\".card-actions\");\r\n                cardActionsHover.removeClass(\"show\");\r\n                cardActionsHover.addClass(\"hide\");\r\n            };\r\n\r\n            function b64toBlob(b64Data, contentType, sliceSize) {\r\n                contentType = contentType || '';\r\n                sliceSize = sliceSize || 512;\r\n\r\n                var byteCharacters = atob(b64Data);\r\n                var byteArrays = [];\r\n\r\n                for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n                    var slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n                    var byteNumbers = new Array(slice.length);\r\n                    for (var i = 0; i < slice.length; i++) {\r\n                        byteNumbers[i] = slice.charCodeAt(i);\r\n                    }\r\n\r\n                    var byteArray = new Uint8Array(byteNumbers);\r\n\r\n                    byteArrays.push(byteArray);\r\n                }\r\n\r\n                var blob = new Blob(byteArrays, { type: contentType });\r\n                return blob;\r\n            }\r\n\r\n        }\r\n    ])\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-controllers');\r\n\r\n    app.controller('tilePageController', ['$scope', '$q', '$state', '$timeout', '$log', 'dialogs', 'navService', 'rulesetDataShareService', 'layoutService', 'tabService','tileService',\r\n        function ($scope, $q, $state, $timeout, $log, dialogs, navService, rulesetDataShareService, layoutService, tabService, tileService) {\r\n\r\n            $scope.navService = navService;\r\n            //$scope.dataService = dataService;\r\n            debugger;\r\n            $scope.NewLayout = rulesetDataShareService.getlayoutmetadata();\r\n            GetAllTabs();\r\n          \r\n               \r\n            \r\n            function GetAllTabs() {\r\n                debugger;\r\n                tabService.GetTabs($scope.NewLayout[0].LayoutId).then(function (data) {\r\n                    if (data.data.StatusCode == 200) {\r\n                        $scope.LayoutTabs = data.data.PayLoad\r\n                    }\r\n                    else {\r\n                        if (data.data.StatusCode == 400) {\r\n                            if (data.data.ShowToUser == true) {\r\n                                alert(data.data.ErrorMessage);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n           \r\n            var _autoPosition = false;\r\n\r\n            var _menuOptionView = {\r\n                id: 'nav.layouts.open',\r\n                name: 'Switch Layout',\r\n                icon: 'fa-fw fa-random',\r\n                menus: []\r\n            };\r\n\r\n            $scope.menuHamburger = {\r\n                opened: false,\r\n                menus: navService.getCommonHamburger([\r\n                    {\r\n                        name: 'Layouts',\r\n                        header: true,\r\n                        icon: 'fa-fw'\r\n                    },\r\n                    _menuOptionView,\r\n                    {\r\n                        id: 'view.new',\r\n                        name: 'New Layout',\r\n                        action: function () {\r\n                            layoutAdd();\r\n                        },\r\n                        icon: 'fa-fw fa-file-o',\r\n                    },\r\n                    {\r\n                        id: 'view.rename',\r\n                        name: 'Rename Layout',\r\n                        action: function () {\r\n                            layoutRename();\r\n                        },\r\n                        icon: 'fa-fw fa-i-cursor'\r\n                    },\r\n                    {\r\n                        id: 'view.delete',\r\n                        name: 'Delete Layout',\r\n                        action: function () {\r\n                            layoutDelete();\r\n                        },\r\n                        icon: 'fa-fw fa-trash-o',\r\n                    },\r\n                    {\r\n                        id: 'view.copy',\r\n                        name: 'Copy Layout',\r\n                        action: function () {\r\n                            layoutCopy();\r\n                        },\r\n                        icon: 'fa-fw fa-files-o'\r\n                    },\r\n                    {\r\n                        name: 'Tiles',\r\n                        header: true,\r\n                        icon: 'fa-fw'\r\n                    },\r\n                    {\r\n                        id: 'tiles.edit',\r\n                        name: 'Edit Tiles',\r\n                        action: function () {\r\n                            $scope.state.tilesEditing = !$scope.state.tilesEditing;\r\n                        },\r\n                        icon: 'fa-fw fa-pencil-square-o',\r\n                    },\r\n                    {\r\n                        name: 'Pages',\r\n                        header: true,\r\n                        icon: 'fa-fw'\r\n                    },\r\n                    {\r\n                        id: 'tab.new',\r\n                        name: 'New Page',\r\n                        action: function () {\r\n                            tabAdd();\r\n                        },\r\n                        icon: 'fa-fw fa-file-o',\r\n                    },\r\n                    {\r\n                        id: 'tab.rename',\r\n                        name: 'Rename Page',\r\n                        action: function () {\r\n                            tabRename();\r\n                        },\r\n                        icon: 'fa-fw fa-i-cursor'\r\n                    },\r\n                    {\r\n                        id: 'tab.delete',\r\n                        name: 'Delete Page',\r\n                        action: function () {\r\n                            tabDelete();\r\n                        },\r\n                        icon: 'fa-fw fa-trash-o',\r\n                    },\r\n                    {\r\n                        id: 'tab.copy',\r\n                        name: 'Copy Page',\r\n                        action: function () {\r\n                            tabCopy();\r\n                        },\r\n                        icon: 'fa-fw fa-files-o'\r\n                    },\r\n                    {\r\n                        id: 'tab.reorder',\r\n                        name: 'Reorder Pages',\r\n                        action: function () {\r\n                            tabReorder();\r\n                        },\r\n                        icon: 'fa-fw fa-sort'\r\n                    }\r\n                ]),\r\n                menuClick: function (item) {\r\n                    $scope.menuHamburger.opened = false;\r\n                }\r\n            };\r\n\r\n            $scope.menuCharacter = {\r\n                opened: false,\r\n                menus: navService.getCommonCharacterNav([]),\r\n                menuClick: function (item) {\r\n                    $scope.menuCharacter.opened = false;\r\n                }\r\n            };\r\n\r\n            navService.registerNav('hamburger', $scope.menuHamburger);\r\n            navService.registerNav('character', $scope.menuCharacter);\r\n\r\n            $scope.state = {\r\n                tilesEditing: false,\r\n                tileDragging: false,\r\n                tileDeleteId: null\r\n            };\r\n\r\n            $scope.stackOptions = {\r\n                height: 0,\r\n                width: 100,\r\n                cellHeight: 30,\r\n                minWidth: 1,\r\n                // The width, plus padding.\r\n                pixelWidth: 35,\r\n                verticalMargin: 5,\r\n                alwaysShowResizeHandle: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),\r\n                //alwaysShowResizeHandle: true,\r\n                resizable: {\r\n                    handles: 'e, se, s, sw, w'\r\n                },\r\n                draggable: {\r\n                    refreshPositions: true,\r\n                    handle: '.grid-stack-item-content'\r\n                }\r\n            };\r\n\r\n            $scope.tabSet = {\r\n                api: {},\r\n                index: -1\r\n            };\r\n\r\n            //$scope.LayoutTabs =\r\n            //    [\r\n            //    {\r\n            //        \"name\": \"Main1\",\r\n            //        \"tiles\": [{\r\n            //            \"id\": \"2\",\r\n            //            \"x\": \"12\",\r\n            //            \"y\": \"8\",\r\n            //            \"width\": \"4\",\r\n            //            \"height\": \"4\",\r\n            //            \"minWidth\": \"2\",\r\n            //            \"minHeight\": \"2\",\r\n            //            \"typeId\": \"2\"\r\n            //        }]\r\n            //    },\r\n            //    {\r\n            //        \"name\": \"Main2\",\r\n            //        \"tiles\": [{\r\n            //            \"id\": \"1\",\r\n            //            \"x\": \"4\",\r\n            //            \"y\": \"0\",\r\n            //            \"width\": \"11\",\r\n            //            \"height\": \"4\",\r\n            //            \"minWidth\": \"5\",\r\n            //            \"minHeight\": \"2\",\r\n            //            \"typeId\": \"1\"\r\n            //        }]\r\n            //    },\r\n            //    {\r\n            //        \"name\": \"Main3\",\r\n            //        \"tiles\": [{\r\n            //            \"id\": \"3\",\r\n            //            \"x\": \"8\",\r\n            //            \"y\": \"8\",\r\n            //            \"width\": \"8\",\r\n            //            \"height\": \"0\",\r\n            //            \"minWidth\": \"4\",\r\n            //            \"minHeight\": \"0\",\r\n            //            \"typeId\":\"3\"\r\n            //        }]\r\n            //    },\r\n            //    {\r\n            //        \"name\": \"Main4\",\r\n            //        \"tiles\": [{\r\n            //            \"id\": \"4\",\r\n            //            \"x\": \"4\",\r\n            //            \"y\": \"8\",\r\n            //            \"width\": \"4\",\r\n            //            \"height\": \"0\",\r\n            //            \"minWidth\": \"2\",\r\n            //            \"minHeight\": \"0\",\r\n            //            \"typeId\": \"4\"\r\n            //        }]\r\n            //    }]\r\n            //{\r\n            //    name: \"+\",\r\n            //    action: function () {\r\n            //        tabAdd();\r\n            //    }\r\n            //        //\"tiles\": [{\r\n            //        //    \"id\": \"4\",\r\n            //        //    \"x\": \"4\",\r\n            //        //    \"y\": \"8\",\r\n            //        //    \"width\": \"4\",\r\n            //        //    \"height\": \"0\",\r\n            //        //    \"minWidth\": \"2\",\r\n            //        //    \"minHeight\": \"0\",\r\n            //        //    \"typeId\": \"\"\r\n            //        //}]\r\n            //}]\r\n\r\n            $scope.tilePickerApi = {\r\n                messageId: null,\r\n                beforeSelect: function () {\r\n                },\r\n                onClose: function () {\r\n                }\r\n            };\r\n\r\n            var updateTabs = function () {\r\n                $scope.navService.updateBody(true, $scope.LayoutTabs.length);\r\n                $scope.tabSet.api.doRecalculate();\r\n                $scope.tabSet.api.scrollTabIntoView();\r\n            };\r\n\r\n            var getActiveTab = function () {\r\n                if ($scope.tabSet.index >= 0)\r\n                    return LayoutTabs[$scope.tabSet.index];\r\n                return null;\r\n            };\r\n\r\n            var tabsSort = function (arr) {\r\n                (arr || []).sort(function (a, b) { return a.order - b.order; });\r\n            };\r\n\r\n            //var layoutLoad = function (layoutId) {\r\n\r\n            //    $scope.state.tilesEditing = false;\r\n\r\n            //    dataService.loadLayout(layoutId).then(function () {\r\n                    \r\n            //        var pageId = navService.getLastPageId(dataService.character, dataService.layout);\r\n\r\n            //        navService\r\n            //            .gotoLayout(dataService.character.id, dataService.layout.id, pageId, true)\r\n            //            .transition.onSuccess({}, function () {\r\n            //                $timeout(function () {\r\n            //                    layoutRender();\r\n            //                });\r\n            //            });\r\n            //    });\r\n            //};\r\n\r\n            var layoutRender = function (pageIndex) {\r\n\r\n                //$scope.state.tilesEditing = true;\r\n                tabsSort($scope.LayoutTabs);\r\n\r\n                if ($scope.LayoutTabs.length) {\r\n\r\n                    if (pageIndex || pageIndex === 0) {\r\n                        pageIndex = Math.clamp(0, $scope.LayoutTabs - 1);                        \r\n                    }\r\n                    else {\r\n                        pageIndex = 0;\r\n\r\n                        var pageId = $state.params.pageId;\r\n                        if (pageId) {\r\n                            pageIndex = $scope.LayoutTabs.findIndex(function (element, index) {\r\n                                return element.id === pageId;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    pageIndex = -1;\r\n                }\r\n\r\n                $scope.tabSet.index = pageIndex;\r\n                updateTabs();\r\n            };\r\n            //$scope.tab = function ()\r\n            //{\r\n            //    $state.go('profile.addnewcharacter');\r\n            //}\r\n            //var layoutDelete = function () {\r\n\r\n            //    var dlg = dialogs.confirm(\r\n            //        'Confirm Delete',\r\n            //        'Are you sure you want to delete this view, \"' + dataService.layout.name + '\", and all associated pages, tabs, and tiles?',\r\n            //        { size: 'sm' }\r\n            //    );\r\n\r\n            //    dlg.result.then(\r\n            //        function (btn) {\r\n\r\n            //            dataService.deleteLayout(dataService.layout);\r\n            //            dataService\r\n            //                .saveChanges()\r\n            //                .then(function () {\r\n            //                    navService.gotoLayouts(dataService.character.id, true);\r\n            //                });\r\n            //        }\r\n            //    );\r\n            //};\r\n\r\n            var layoutAdd = function () {\r\n\r\n                var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n                    { name: '' },\r\n                    { size: 'sm' }\r\n                );\r\n\r\n                dlg.result.then(function (name) {\r\n                    debugger;\r\n                    $scope.LayoutViewModel = {\r\n                        Name: name,\r\n                        CharacterProfileId:1\r\n                    }\r\n\r\n                    layoutService.createLayout($scope.LayoutViewModel).then(function (data) {\r\n                        if (data.data.status.StatusCode === 200) {\r\n                            alert(\"Success\");\r\n                        }\r\n                        else {\r\n                            alert(\"Failed\");\r\n                        }\r\n                    });\r\n\r\n                    dataService.character.layouts.push(layout);\r\n                    dataService\r\n                        .saveChanges()\r\n                        .then(function () {\r\n                            layoutLoad(layout.id);\r\n                        });\r\n                });\r\n            };\r\n\r\n            //var layoutRename = function () {\r\n\r\n            //    var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n            //        { name: dataService.layout.name },\r\n            //        { size: 'sm' }\r\n            //    );\r\n\r\n            //    dlg.result.then(function (name) {\r\n            //        dataService.layout.name = name;\r\n            //        dataService.saveChanges()\r\n            //    });\r\n            //};\r\n\r\n            //var layoutCopy = function () {\r\n\r\n            //    var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n            //        { name: dataService.layout.name },\r\n            //        { size: 'sm' }\r\n            //    );\r\n\r\n            //    dlg.result.then(function (name) {\r\n\r\n            //        var layout = dataService.copyEntity(dataService.layout);\r\n            //        layout.name = name;\r\n\r\n            //        dataService\r\n            //            .saveChanges()\r\n            //            .then(function () {\r\n            //                layoutLoad(layout.id);\r\n            //            });\r\n            //    });\r\n            //};\r\n\r\n            var tabDelete = function () {\r\n\r\n                var tab = getActiveTab();\r\n\r\n                if (tab) {\r\n\r\n                    var dlg = dialogs.confirm(\r\n                        'Confirm Delete',\r\n                        'Are you sure you want to delete \"' + tab.name + '\" and all its content?',\r\n                        { size: 'sm' }\r\n                    );\r\n\r\n                    dlg.result.then(\r\n                        function (btn) {\r\n\r\n                            dataService.deleteTab(tab);\r\n\r\n                            $scope.tabSet.index--;\r\n                            if ($scope.tabSet.index === -1 && $scope.LayoutTabs.length)\r\n                                $scope.tabSet.index = 0;\r\n\r\n                            dataService.saveChanges();\r\n\r\n                            $timeout(function () {\r\n                                $scope.tabSet.api.scrollTabIntoView();\r\n                            });\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n\r\n            var tabAdd = function () {\r\n\r\n                var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n                    { name: null },\r\n                    { size: 'sm' }\r\n                );\r\n\r\n                dlg.result.then(function (name) {\r\n\r\n                    $timeout(function () {\r\n\r\n                        var tab = dataService.createTab({\r\n                            name: name,\r\n                            order: $scope.LayoutTabs.length\r\n                        });\r\n\r\n                        $scope.LayoutTabs.push(tab);\r\n                        $scope.state.tilesEditing = true;\r\n\r\n                        $timeout(function () {\r\n                            $scope.tabSet.index = tab.order;\r\n                            updateTabs();\r\n                        });\r\n                    });\r\n                });\r\n            };\r\n            $scope.AddNewtab = function () {\r\n                debugger;\r\n                var Scope = $scope.NewLayout[0].LayoutMetaData.Tab;\r\n                Scope.LayoutId = $scope.LayoutTabs[0].LayoutId;\r\n                var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n                    { scope: Scope}\r\n                );\r\n\r\n                dlg.result.then(function (res) {\r\n                    debugger;\r\n                    tabService.AddTab(res).then(function (data) {\r\n                        debugger;\r\n                        if (data.data.StatusCode == 200) {\r\n                            GetAllTabs();\r\n                        }\r\n                        else {\r\n                            if (data.data.StatusCode == 400) {\r\n                                if (data.data.ShowToUser == true) {\r\n                                    alert(data.data.ErrorMessage);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n\r\n\r\n\r\n            $scope.ShowTiles = function () {\r\n                debugger;\r\n                var dlg = dialogs.create('/views/dialogs/showalltiles.html', 'dialogTileTypes',\r\n                    {}\r\n                );\r\n                dlg.result.then(function (res) {\r\n                    debugger;\r\n                });\r\n            }\r\n\r\n\r\n            //$scope.AddCorestatvalues = function () {\r\n            //    debugger;\r\n            //    $scope.characters = rulesetDataShareService.getcorestatvalue();\r\n            //    var dlg = dialogs.create('/views/dialogs/addcorestatvalues.html', 'dialogAddCorestatValues',\r\n            //        { scope: $scope.characters }\r\n\r\n            //    );\r\n\r\n            //    dlg.result.then(function (res) {\r\n            //        debugger;\r\n            //        var values = characterService.AddCorestatValues(res);\r\n            //        values.then(function (data)\r\n            //        {\r\n            //            debugger;\r\n            //        })\r\n\r\n            //        //$scope.LayoutTabs.push({ \"name\": res });\r\n            //    });\r\n            //}\r\n            //var tabRename = function () {\r\n\r\n            //    var tab = getActiveTab();\r\n\r\n            //    if (tab) {\r\n\r\n            //        var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'dialogTabRename',\r\n            //            { name: tab.name },\r\n            //            { size: 'sm' }\r\n            //        );\r\n\r\n            //        dlg.result.then(function (name) {\r\n            //            tab.name = name;\r\n            //            dataService.saveChanges()\r\n            //        });\r\n            //    }\r\n            \r\n\r\n            var tabCopy = function () {\r\n\r\n                var dlg = dialogs.create('/views/dialogs/tab-rename.html', 'addNewCoreStat',\r\n                    { name: 'Add New Core Stat' },\r\n                    { size: 'sm' }\r\n                );\r\n\r\n                dlg.result.then(function (name) {\r\n                    // Shuffle the order of the other tabs. The copy will add it to the backing array.\r\n                  \r\n                });\r\n            };\r\n\r\n            var tabReorder = function () {\r\n                debugger;\r\n                var tab = getActiveTab(),\r\n                    currentIdx = $scope.tabSet.index;\r\n\r\n                var dlg = dialogs.create('/views/dialogs/tab-reorder.html', 'dialogTabReorder',\r\n                    {\r\n                        items: $scope.NewLayout.TabList,\r\n                        sorter: tabsSort\r\n                    },\r\n                    { size: 'sm', copy: false }\r\n                );\r\n\r\n                dlg.result.then(function (items) {\r\n\r\n                    $timeout(function () {\r\n\r\n                        items.forEach(function (item, idx) {\r\n                            item.order = idx;\r\n                            if (item === tab)\r\n                                currentIdx = idx;\r\n                        });\r\n\r\n                        tabsSort($scope.NewLayout.TabList);\r\n                        $scope.tabSet.index = currentIdx;\r\n\r\n                        updateTabs();\r\n\r\n                    });\r\n                });\r\n            }\r\n\r\n            $scope.getTileClass = function (tile) {\r\n\r\n                var arr = [];\r\n\r\n                if ($scope.state.tilesEditing)\r\n                    arr.push(tile.__randomShake);\r\n\r\n                if (tile.id === $scope.state.tileDeleteId)\r\n                    arr.push('over-delete');\r\n\r\n                return arr.join(' ');\r\n            };\r\n\r\n            $scope.getAutoPosition = function (tile) {\r\n                var x = tile.id > 0 ? false : _autoPosition;\r\n                return x;\r\n            };\r\n\r\n            $scope.tileSelect = function (tile) {\r\n                if ($scope.tilePickerApi.selecting)\r\n                    $scope.tilePickerApi.endSelect(tile);\r\n            };\r\n\r\n            $scope.tileEdit = function () {\r\n                $scope.tilePickerApi.beginSelect(function (tile) {\r\n                   // tileService.edit(tile, true).then(function () {\r\n                        // Nothing to do\r\n                    //});\r\n                });\r\n            }\r\n\r\n            //$scope.tileAdd = function () {\r\n\r\n            //    tileService.add().then(function (tile) {\r\n\r\n            //        _autoPosition = true;\r\n\r\n            //        var tab = getActiveTab();\r\n\r\n            //        tile.tabId = tab.id;\r\n            //        tab.tiles.push(tile);\r\n\r\n            //        $timeout(function () {\r\n            //            _autoPosition = false;\r\n            //        });\r\n            //    });\r\n            //};\r\n\r\n            //$scope.onDragStart = function (event, ui) {\r\n            //    $timeout(function () {\r\n            //        $scope.state.tileDragging = true;\r\n            //    });\r\n            //};\r\n\r\n            //$scope.onDragStop = function (event, ui) {\r\n            //    $timeout(function () {\r\n            //        $scope.state.tileDragging = false;\r\n            //    });\r\n            //};\r\n\r\n            //$scope.onDeleteDrop = function (event, ui) {\r\n            //    var tile = GridStackUI.Utils.getNodeData(ui.helper);\r\n            //    if (tile)\r\n            //        dataService.deleteTile(tile);\r\n            //};\r\n\r\n            //$scope.onDeleteOver = function (event, ui) {\r\n            //    var node = GridStackUI.Utils.getNodeData(ui.helper);\r\n            //    if (node) {\r\n            //        $timeout(function () {\r\n            //            $scope.state.tileDeleteId = node.id;\r\n            //        });\r\n            //    }\r\n            //};\r\n\r\n            //$scope.onDeleteOut = function (event) {\r\n            //    if ($scope.state.tileDeleteId) {\r\n            //        $timeout(function () {\r\n            //            $scope.state.tileDeleteId = null;\r\n            //        });\r\n            //    }\r\n            //};\r\n\r\n            //$scope.onTabSelected = function (tab, index) {\r\n\r\n            //    //console.log('onTabSelected');\r\n                \r\n            //    //if (tab && tab.id) {\r\n            //    //    navService.setLastTabId(dataService.character.id, dataService.layout.id, tab.id);\r\n            //    //    navService.gotoLayout(dataService.character.id, dataService.layout.id, tab.id, true);\r\n            //    //}\r\n            //};\r\n\r\n            //$scope.saveChanges = function () {\r\n            //    $scope.state.tilesEditing = false;\r\n            //    return dataService.saveChanges();\r\n            //};\r\n\r\n            (function () {\r\n\r\n                $scope.navService.updateBody(true, true);\r\n                $scope.state.tilesEditing = false;\r\n\r\n                //rpgsmith.fillArray(dataService.character.layouts, _menuOptionView.menus, function (layout) {\r\n                //    return {\r\n                //        id: 'view.load',\r\n                //        context: layout,\r\n                //        name: layout.name,\r\n                //        action: function (item) {\r\n                //            layoutLoad(item.context.id);\r\n                //        },\r\n                //        icon: 'fa-fw'\r\n                //    };\r\n                //});\r\n\r\n                $timeout(function () {\r\n                    layoutRender();\r\n                });\r\n\r\n            })();\r\n        }\r\n    ]);\r\n\r\n})();","(function () {\r\n\t'use strict';\r\n\r\n\tvar app = angular.module('rpgsmith-directives');\r\n\r\n\tapp.directive('rpgsmithrulesettype', ['$compile', 'dialogs', function ($compile, dialogs) {\r\n\t\tvar templateUrl1_withvalidation = '<ng-form name=\"form\">' +\r\n\t\t\t'<div class=\"form-group\">' +\r\n\t\t\t'<span ng-show=\"form.input.$invalid\">' +\r\n\t\t\t'</span>' +\r\n\t\t\t'<input type=\"text\" placeholder=\"Enter {{info.Name}}\" class=\"form-control\" ng-model=\"info.Value.Text.value\" name=\"input\" />';\r\n\t\t'</div>' +\r\n\t\t\t'</ng-form>';\r\n\t\tvar templateUrl1 = '<div class=\"form-group\"><input type=\"text\" ng-model=\"info.Value.Text.value\" class=\"form-control\" placeholder=\"Enter {{info.Name}} value\"></div>';\r\n\t\t//var templateUrl7 = '<select class=\"form-control inline\" ng-options=\"unit for unit in info.Value.Weight.units.availableUnits\" ng-model=\"info.Units.selectedUnit\" >' +\r\n\t\t//    '<option value=\"\">--Select--</option></select>';\r\n\t\t//var templateUrl7_withvalidation =\r\n\t\t//    '<ng-form name=\"form\">' +\r\n\t\t//    '<div class=\"form-group\">' +\r\n\t\t//    '<span ng-show=\"form.input.$invalid\">' +\r\n\t\t//    '</span>' +\r\n\t\t//    '<select class=\"select_dropdown form-control inline\" ng-options=\"unit for unit in info.Value.Weight.units.availableUnits\" ng-model=\"info.Units.selectedUnit\" name=\"input\"  ng-required=\"info\"> ' +\r\n\t\t//    '<option value=\"\">--Select--</option></select>' +\r\n\t\t//    '</div>' +\r\n\t\t//    '</ng-form>';\r\n\r\n\t\tvar templateUrl7 = '<div class=\"form-group\"><input type=\"text\"  ng-model=\"info.Units.selectedUnit\" placeholder=\"Enter {{info.Name}}\" class=\"form-control\"/></div>';\r\n\t\tvar templateUrl7_withvalidation =\r\n\t\t\t'<ng-form name=\"form\">' +\r\n\t\t\t'<div class=\"form-group\">' +\r\n\t\t\t'<span ng-show=\"form.input.$invalid\">' +\r\n\t\t\t'</span>' +\r\n\t\t\t'<div class=\"form-group\"><input type=\"text\"  ng-model=\"info.Units.selectedUnit\" placeholder=\"Enter {{info.Name}}\" class=\"form-control\"/></div>' +\r\n\t\t\t'</div>' +\r\n\t\t\t'</ng-form>';\r\n\r\n\t\t//var templateUrl8 = '<div class=\"pull-left edit-character-portrait\"><img id=\"GeneralStngImage\" ng-src=\"{{info.Value.Image.image}}\" ng-model=\"info.Value.Image.image\" alt=\"RuleSet Image\" ngf-resize=\"{width: 120, height: 120}\" /></div><div class=\"profile_image\"><span>Choose Portrait</span><input type=\"file\" name=\"file\" onchange=\"angular.element(this).scope().ItemImageUpload(this)\" accept=\"x-png,gif,jpeg\"/></div>';\r\n\t\tvar templateUrl8 = '<div class=\"form-group input-image\"><div class=\"input-image-control-wrapper\"><div class=\"input-image-note icon icon-upload\"><span ng-model=\"info.Value.Image.image\">Click here to upload.</span><small>(320 x 320 px)</small></div><input type=\"file\"  class=\"form-control-file\"  onchange=\"angular.element(this).scope().ItemImageUpload(this)\" accept=\"x-png,gif,jpeg\"></div></div>';\r\n\t\tvar templateUrl8_withvalidation = '<ng-form name=\"form\">' +\r\n\t\t\t'<div class=\"form-group\">' +\r\n\t\t\t'<span ng-show=\"form.input.$invalid\">' +\r\n\t\t\t'</span>' +\r\n\t\t\t'<div class=\"form-group input-image\"><div class=\"input-image-control-wrapper\"><div class=\"input-image-note icon icon-upload\"><span ng-model=\"info.Value.Image.image\">Click here to upload.</span><small>(320 x 320 px)</small></div><input type=\"file\"  class=\"form-control-file\"  onchange=\"angular.element(this).scope().ItemImageUpload(this)\" accept=\"x-png,gif,jpeg\"></div></div>';\r\n\t\t//'<div class=\"pull-left edit-character-portrait\"><img id=\"GeneralStngImage\" ng-src=\"{{info.Value.Image.image}}\" name=\"input\" ng-model=\"info.Value.Image.image\" alt=\"RuleSet Image\" ngf-resize=\"{width: 120, height: 120}\" /></div><div class=\"profile_image\"><span>Choose Portrait</span><input type=\"file\" rpgsmithtype=\"info.Value.Image.image\" ng-class=\"{red: form.input.$dirty && form.input.$error.required}\" ng-required=\"info\" onchange=\"angular.element(this).scope().ItemImageUpload(this)\" accept=\"x-png,gif,jpeg\" /> </div>';\r\n\t\t'</div>' +\r\n\t\t\t'</ng-form>';\r\n\r\n\r\n\t\tvar templateUrl15 = '<span class=\"input-group-btn\"><button type=\"button\" title=\"\" data-toggle=\"tooltip\" class=\"btn icon icon-dice icon-rsi btn-simple-primary\" data-original-title=\"Show Dice\" ng-click=\"defaultDiceSelect()\"></button></span><input type=\"text\" ng-model=\"info.Value.DefaultDice.value\" class=\"form-control\" placeholder=\"Select dice\">';\r\n\t\tvar templateUrl15_withvalidation =\r\n\t\t\t'<ng-form name=\"form\">' +\r\n\t\t\t'<div class=\"form-group\">' +\r\n\t\t\t'<span ng-show=\"form.input.$invalid\">' +\r\n\t\t\t'</span>' +\r\n\t\t\t'<span class=\"input-group-btn\"><button type=\"button\" title=\"\" data-toggle=\"tooltip\" class=\"btn icon icon-dice icon-rsi btn-simple-primary\" data-original-title=\"Show Dice\" ng-click=\"defaultDiceSelect()\"></button></span><input type=\"text\" ng-model=\"info.Value.DefaultDice.value\" class=\"form-control\" placeholder=\"Select dice\">';\r\n\t\t'</div>' +\r\n\t\t\t'</ng-form>';\r\n\r\n\t\tvar getTemplate = function (contentType, IsMandatory) {\r\n\t\t\tvar template = '';\r\n\r\n\t\t\tswitch (contentType) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tif (IsMandatory == true) {\r\n\t\t\t\t\t\ttemplate = templateUrl1_withvalidation;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttemplate = templateUrl1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\ttemplate = templateUrl2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\ttemplate = templateUrl3;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\ttemplate = templateUrl4;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 5:\r\n\t\t\t\t\ttemplate = templateUrl5;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\ttemplate = templateUrl6;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\tif (IsMandatory == true) {\r\n\t\t\t\t\t\ttemplate = templateUrl7_withvalidation;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttemplate = templateUrl7;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//case 8:\r\n\t\t\t\t//    template = templateUrl8;\r\n\t\t\t\t//    break;\r\n\r\n\t\t\t\tcase 8:\r\n\r\n\t\t\t\t\tif (IsMandatory == true) {\r\n\t\t\t\t\t\ttemplate = templateUrl8_withvalidation;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttemplate = templateUrl8;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 12:\r\n\t\t\t\t\ttemplate = templateUrl12;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 13:\r\n\t\t\t\t\ttemplate = templateUrl13;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 14:\r\n\t\t\t\t\ttemplate = templateUrl14;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 15:\r\n\t\t\t\t\tif (IsMandatory == true) {\r\n\t\t\t\t\t\ttemplate = templateUrl15_withvalidation;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttemplate = templateUrl15;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn template;\r\n\t\t};\r\n\r\n\r\n\t\tvar linker = function (scope, element, attrs) {\r\n\t\t\tdebugger;\r\n\r\n\t\t\tvar items = angular.copy(scope.info);\r\n\r\n\t\t\telement.html(getTemplate(items.TypeId, items.IsMandatory));\r\n\r\n\t\t\t$compile(element.contents())(scope);\r\n\r\n\t\t\tscope.defaultDiceSelect = function () {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tvar dlg = dialogs.create('/views/dialogs/defaultdiceselection.html', 'dialogDefaultDiceSelect',\r\n\t\t\t\t\t{ \"mode\": 1 }\r\n\t\t\t\t);\r\n\t\t\t\tdlg.result.then(function (res) {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\t//    scope.dice = res;\r\n\t\t\t\t\tscope.info.Value.DefaultDice.value = res;\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t\tscope.getThumbNail = function () {\r\n\t\t\t\tif (scope.file)\r\n\t\t\t\t\treturn $scope.file;\r\n\r\n\t\t\t\tvar c = scope.item;\r\n\t\t\t\tif (c.id && c.portrait)\r\n\t\t\t\t\treturn '/characterdata/' + c.id + '/' + c.portrait;\r\n\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\t//scope.uploadFile = function (input) {\r\n\t\t\t//    debugger;\r\n\t\t\t//    for (var file = 0; file < input.length; file++) {\r\n\t\t\t//        scope.info.Value.Image.image = input[file];\r\n\t\t\t//    }\r\n\t\t\t//}\r\n\t\t\tscope.ItemImageUpload = function (input) {\r\n\t\t\t\tdebugger\r\n\t\t\t\tif (input.files && input.files[0]) {\r\n\t\t\t\t\tvar reader = new FileReader();\r\n\t\t\t\t\treader.onload = function (e) {\r\n\t\t\t\t\t\t$('#GeneralStngImage')\r\n\t\t\t\t\t\t\t.attr(\"Src\", e.target.result)\r\n\t\t\t\t\t\t\t.width(120)\r\n\t\t\t\t\t\t\t.height(120);\r\n\t\t\t\t\t\tscope.info.Value.Image.image = e.target.result;\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\treader.readAsDataURL(input.files[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn {\r\n\t\t\trestrict: \"E\",\r\n\t\t\treplace: true,\r\n\t\t\tlink: linker,\r\n\t\t\tscope: {\r\n\t\t\t\tinfo: '='\r\n\t\t\t}\r\n\t\t}\r\n\t}]);\r\n\r\n\r\n})();","(function () {\r\n\t'use strict';\r\n\r\n\tvar app = angular.module('rpgsmith-directives');\r\n\r\n\tapp.directive('rpgsmithtype', ['$compile', 'dialogs', function ($compile, dialogs) {\r\n\r\n\t\tvar templateUrl1_withvalidation = '<ng-form name=\"form\">' +\r\n\t\t\t'<div class=\"form-group\">' +\r\n\t\t\t'<span ng-show=\"form.itemname.$invalid\">' +\r\n\t\t\t'</span>' +\r\n\t\t\t'<input type=\"text\" ng-disabled=\"DisableField\" placeholder=\"Enter {{info.Name}}\" name=\"itemname\" id=\"itemname\" class=\"form-control text-line\" ng-model=\"info.Value.Text.value\" name=\"input\" ng-class=\"{red: form.input.$dirty && form.input.$error.required}\" ng-required=\"info\" > ' +\r\n\t\t\t'</div>' +\r\n\t\t\t'</ng-form>';\r\n\r\n\t\tvar templateUrl1 = ' <input type=\"text\" ng-disabled=\"DisableField\" placeholder=\"Enter {{info.Name}}\" class=\"form-control\" ng-model=\"info.Value.Text.value\" />';\r\n\t\tvar templateUrl7 = '<input type=\"number\" min=0 class=\"form-control inline\" ng-model=\"info.Value.Weight.value\" placeholder=\"Enter {{info.Name}}\"  ng-disabled=\"DisableField\"  /> ' +\r\n\t\t\t'<input type=\"text\"  ng-model=\"info.Value.Weight.units.selectedUnit \" ng-disabled=\"DisableField\" placeholder=\"Enter {{info.Name}}\" class=\"form-control inline_old\" readonly/>';\r\n\t\tvar templateUrl7_withvalidation =\r\n\t\t\t'<ng-form name=\"form\">' +\r\n\t\t\t'<div class=\"form-group\">' +\r\n\t\t\t'<span ng-show=\"form.weight.$invalid\">' +\r\n\t\t\t'</span>' +\r\n\t\t\t'<input type=\"number\" name=\"weight\" id=\"weight\" min=0 class=\"form-control inline\" ng-disabled=\"DisableField\" ng-model=\"info.Value.Weight.value\" placeholder=\"Enter {{info.Name}}\"  ng-disabled=\"DisableField\" /> ' +\r\n\t\t\t'<input type=\"text\" placeholder=\"Enter {{info.Name}}\" ng-model=\"info.Value.Weight.units.selectedUnit\" class=\"form-control inline_old\" readonly/>' +\r\n\t\t\t'</div>' +\r\n\t\t\t'</ng-form>';\r\n\t\t//var templateUrl7 = '<input type=\"number\" class=\"form-control inline\" ng-model=\"info.Value.Weight.value\" placeholder=\"Weight\"/> ' +\r\n\t\t//    '<select class=\"form-control inline\" ng-options=\"unit for unit in info.Value.Weight.units.availableUnits\" ng-model=\"info.Value.Weight.units.selectedUnit\" >' +\r\n\t\t//    '<option value=\"\">--Select--</option></select>';\r\n\t\t//var templateUrl7_withvalidation = '<ng-form name=\"form\">' +\r\n\t\t//    '<div class=\"form-group\">' +\r\n\t\t//    '<span ng-show=\"form.input.$invalid\">' +\r\n\t\t//    '</span>' +\r\n\t\t//    '<input type=\"number\" class=\"form-control inline\" ng-model=\"info.Value.Weight.value\" placeholder=\"Weight\"/> ' +\r\n\t\t//    '<select class=\"form-control inline\" ng-options=\"unit for unit in info.Value.Weight.units.availableUnits\" ng-model=\"info.Value.Weight.units.selectedUnit\" name=\"input\" >' +\r\n\t\t//    '<option value=\"\">--Select--</option></select>';\r\n\t\t//'</div>' +\r\n\t\t//    '</ng-form>';\r\n\t\tvar templateUrl3 = '<div class=\"btn-group\" data-toggle=\"\"><label class=\"btn btn-primary\"><input type= \"radio\" ng-model=\"info.Value.OnOrOff.value\"\" value= \"On\" />On</label > <label class=\"btn btn-default\"><input type=\"radio\" ng-model=\"info.Value.OnOrOff.value\" value=\"Off\" ng-disabled=\"DisableField\" />Off</label></div >';\r\n\t\tvar templateUrl3_withvalidation = '<div class=\"form-group\">' +\r\n\t\t\t'<span ng-show=\"form.input.$invalid\">' +\r\n\t\t\t'</span>' +\r\n\t\t\t'<div class=\"btn-group\" data-toggle=\"\"><label class=\"btn btn-primary\"><input type=\"radio\"  name=\"input\" ng-model=\"info.Value.OnOrOff.value\"\" value= \"On\" />On</label > <label class=\"btn btn-default\"><input type=\"radio\" ng-model=\"info.Value.OnOrOff.value\" value=\"Off\" ng-disabled=\"DisableField\" />Off</label></div >';\r\n\t\t'</div>' +\r\n\t\t\t'</ng-form>';\r\n\r\n\t\t//var templateUrl4 = '<ul class=\"input-list-items\" style=\"height:auto;\"><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"checkbox\"><span ng-model=\"info.Value.YesOrNo.value\"><em class=\"icon icon-with-text icon-visible icon-rsi\">{{property.Name}}</em><i class=\"icon\"></i></span></label></li></ul>';\r\n\r\n\t\tvar templateUrl4 = '<ul class=\"input-switch-items\"><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" ng-model=\"info.Value.YesOrNo.value\" value=\"Yes\" ng-disabled=\"DisableField\"><span>Yes</span></label></li><li class=\"form-check\"><label class=\"form-check-label\"><input class=\"form-check-input\" type=\"radio\" ng-model=\"info.Value.YesOrNo.value\" value=\"No\" ng-disabled=\"DisableField\"><span>No</span></label></li></ul>';\r\n\r\n\t\tvar templateUrl4_withvalidation = '<ng-form name=\"form\">' +\r\n\t\t\t'<div class=\"form-group\">' +\r\n\t\t\t'<span ng-show=\"form.input.$invalid\">' +\r\n\t\t\t'</span>' +\r\n\t\t\t'<div class=\"btn-group\" data-toggle=\"\"><label class=\"btn btn-primary\"><input type= \"radio\" name=\"input\" ng-model=\"info.Value.YesOrNo.value\"\" value= \"Yes\" ng-disabled=\"DisableField\" />Yes</label > <label class=\"btn btn-default\"><input type=\"radio\" name=\"input\"  ng-model=\"info.Value.YesOrNo.value\" value=\"No\" ng-disabled=\"DisableField\"/>No</label></div >';\r\n\t\t'</div>' +\r\n\t\t\t'</ng-form>';\r\n\t\tvar templateUrl12 = '<input type=\"number\" min=0 class=\"form-control inline\" ng-model=\"info.Value.Height.value\" placeholder=\"Enter {{info.Name}}\" ng-disabled=\"DisableField\"/> ' +\r\n\t\t\t'<select class=\"form-control inline\" ng-options=\"unit for unit in info.Value.Height.units.availableUnits\" ng-model=\"info.Value.Height.units.selectedUnit\" >' +\r\n\t\t\t'<option value=\"\">--Select--</option></select>';\r\n\t\tvar templateUrl12_withvalidation = '<ng-form name=\"form\">' +\r\n\t\t\t'<div class=\"form-group\">' +\r\n\t\t\t'<span ng-show=\"form.input.$invalid\">' +\r\n\t\t\t'</span>' +\r\n\t\t\t'<input type=\"number\" min=0 class=\"form-control inline\" name=\"input\" ng-model=\"info.Value.Height.value\" placeholder=\"Enter {{info.Name}}\" ng-disabled=\"DisableField\"/> ' +\r\n\t\t\t'<select class=\"form-control inline\" ng-options=\"unit for unit in info.Value.Height.units.availableUnits\" ng-model=\"info.Value.Height.units.selectedUnit\" >' +\r\n\t\t\t'<option value=\"\">--Select--</option></select>';\r\n\t\t'</div>' +\r\n\t\t\t'</ng-form>';\r\n\t\tvar templateUrl5 = '<input type=\"number\" min=0 class=\"form-control inline\" ng-model=\"info.Value.ValueAndSubValue.value\" placeholder=\"Enter {{info.Name}}\" />&nbsp;&nbsp;<input type=\"number\" min=0 class=\"form-control inline\" ng-model=\"info.Value.ValueAndSubValue.subvalue\" placeholder=\"Enter {{info.Name}}\" ng-disabled=\"DisableField\" />';\r\n\t\tvar templateUrl5_withvalidation = '<ng-form name=\"form\">' +\r\n\t\t\t'<div class=\"form-group\">' +\r\n\t\t\t'<span ng-show=\"form.input.$invalid\">' +\r\n\t\t\t'</span>' +\r\n\t\t\t'<input type=\"number\" min=0 class=\"form-control inline\" name=\"input\" ng-model=\"info.Value.ValueAndSubValue.value\" placeholder=\"Enter {{info.Name}}\" ng-disabled=\"DisableField\"/>&nbsp;&nbsp;<input type=\"number\" min=0 class=\"form-control inline\" ng-model=\"info.Value.ValueAndSubValue.subvalue\" placeholder=\"Enter {{info.Name}}\" />';\r\n\t\t'</div>' +\r\n\t\t\t'</ng-form>';\r\n\t\tvar templateUrl6 = '<input type=\"number\" min=0 ng-model=\"info.Value.CurrentAndMaxValue.CurrentValue\" class=\"form-control inline\" placeholder=\"Enter {{info.Name}}\" />&nbsp;&nbsp;<input class=\"form-control inline\" type=\"number\" min=0 ng-model=\"info.Value.CurrentAndMaxValue.MaxValue\" placeholder=\"Enter {{info.Name}}\" ng-disabled=\"DisableField\" />';\r\n\t\tvar templateUrl6_withvalidation = '<ng-form name=\"form\">' +\r\n\t\t\t'<div class=\"form-group\">' +\r\n\t\t\t'<span ng-show=\"form.input.$invalid\">' +\r\n\t\t\t'</span>' +\r\n\t\t\t'<input type=\"number\" min=0 name=\"input\" ng-model=\"info.Value.CurrentAndMaxValue.CurrentValue\" class=\"form-control inline\" placeholder=\"Enter {{info.Name}}\" ng-disabled=\"DisableField\" />&nbsp;&nbsp;<input class=\"form-control inline\" type=\"number\" min=0 ng-model=\"info.Value.CurrentAndMaxValue.MaxValue\" placeholder=\"Enter {{info.Name}}\" />';\r\n\t\t'</div>' +\r\n\t\t\t'</ng-form>';\r\n\t\tvar templateUrl8 = '<div class=\"text edit-character-portrait\"><img id=\"itemImage\" ng-src=\"{{info.Value.Image.image}}\" ng-model=\"info.Value.Image.image\" alt=\"Character Image\" ngf-thumbnail=\"getThumbNail()\" ngf-resize=\"{width: 120, height: 120}\" ng-disabled=\"DisableField\" /></div><div class=\"profile_image\"><span>Choose Portrait</span><input type=\"file\" onchange=\"angular.element(this).scope().ItemImageUpload(this)\" accept=\"x-png,gif,jpeg\" ng-disabled=\"DisableField\" /> </div>';\r\n\t\t//var templateUrl8 = '<div class=\"form-group input-image\"><div class=\"input-image-control-wrapper\" style=\"height:100px;\"><div class=\"input-image-note icon icon-upload\"><span>Click here to upload.</span><small>(320 x 320 px)</small></div><input type=\"file\" id=\"newItemImageFile\" class=\"form-control-file\" ng-src=\"{{info.Value.Image.image}}\" ng-model=\"info.Value.Image.image\" alt=\"\" ngf-thumbnail=\"getThumbNail()\" ngf-resize=\"{width: 120, height: 120}\"></div></div>';\r\n\t\tvar templateUrl8_withvalidation = '<ng-form name=\"form\">' +\r\n\t\t\t'<div class=\"form-group\">' +\r\n\t\t\t'<span ng-show=\"form.input.$invalid\">' +\r\n\t\t\t'</span>' +\r\n\t\t\t'<div class=\"pull-left edit-character-portrait\"><img id=\"itemImage\" ng-src=\"{{info.Value.Image.image}}\" name=\"input\" ng-model=\"info.Value.Image.image\" alt=\"\" ngf-thumbnail=\"getThumbNail()\" ngf-resize=\"{width: 120, height: 120}\" ng-disabled=\"DisableField\" /></div><div class=\"profile_image\"><span></span><input type=\"file\" rpgsmithtype=\"info.Value.Image.image\" ng-class=\"{red: form.input.$dirty && form.input.$error.required}\" ng-required=\"info\" onchange=\"angular.element(this).scope().ItemImageUpload(this)\" accept=\"x-png,gif,jpeg\" ng-disabled=\"DisableField\" /> </div>';\r\n\t\t'</div>' +\r\n\t\t\t'</ng-form>';\r\n\t\t//var templateUrl13 = '<div class=\"col-sm-9 tab_more\" style=\"padding:0px\"><input type=\"number\" class=\"form-control inline\" ng-model=\"info.Value.Volume.lenghtvalue\" placeholder=\"Enter {{info.Name}}\"/><input type=\"number\" class=\"form-control inline\" ng-model=\"info.Value.Volume.heightvalue\" placeholder=\"Enter {{info.Name}}\"/><input type=\"number\" class=\"form-control inline\" ng-model=\"info.Value.Volume.depthvalue\" placeholder=\"Depth\"/><select class=\"form-control\" ng-options=\"unit for unit in info.Value.Volume.units.availableUnits\" ng-model=\"info.Value.Volume.units.selectedUnit\"><option value=\"\">--Select--</option></select></div>';\r\n\t\t//var templateUrl3_withvalidation = '<div class=\"form-group\">' +\r\n\t\t//    '<span ng-show=\"form.input.$invalid\">' +\r\n\t\t//    '</span>' +\r\n\t\t//    '<div class=\"col-sm-9 tab_more\" style=\"padding:0px\"><input type=\"number\" class=\"form-control inline\" name=\"input\" ng-model=\"info.Value.Volume.lenghtvalue\" placeholder=\"Enter {{info.Name}}\"/><input type=\"number\" class=\"form-control inline\" ng-model=\"info.Value.Volume.heightvalue\" placeholder=\"Enter {{info.Name}}\"/><input type=\"number\" class=\"form-control inline\" ng-model=\"info.Value.Volume.depthvalue\" placeholder=\"Depth\"/><select class=\"form-control\" ng-options=\"unit for unit in info.Value.Volume.units.availableUnits\" ng-model=\"info.Value.Volume.units.selectedUnit\"><option value=\"\">--Select--</option></select></div>';\r\n\t\t//'</div>' +\r\n\t\t//    '</ng-form>';\r\n\t\tvar templateUrl13 = '<div class=\"form-group\"><div class=\"form-row\"><div class=\"col\"><input type=\"number\" min=0 class=\"form-control\" ng-model=\"info.Value.Volume.lenghtvalue\" placeholder=\"Enter {{info.Name}}\" ng-disabled=\"DisableField\"></div><div class=\"col\"><input type=\"number\" min=0 class=\"form-control\" ng-model=\"info.Value.Volume.heightvalue\" placeholder=\"Enter {{info.Name}}\" ng-disabled=\"DisableField\" ></div><div class=\"col\"><input type=\"number\" min=0 class=\"form-control\" ng-model=\"info.Value.Volume.depthvalue\" placeholder=\"Depth {{info.Name}}\" ng-disabled=\"DisableField\" ></div><div class=\"col\"><input type=\"text\" placeholder=\"Enter {{info.Name}}\" ng-model=\"info.Value.Volume.units.selectedUnit\" class=\"form-control\" ng-disabled=\"DisableField\" readonly></div></div></div>';\r\n\t\tvar templateUrl3_withvalidation = '<div class=\"form-group\">' +\r\n\t\t\t'<span ng-show=\"form.input.$invalid\">' +\r\n\t\t\t'</span>' +\r\n\t\t\t'<div class=\"\" ><input type=\"number\" ng-disabled=\"DisableField\" min=0 class=\"form-control inline\" name=\"input\" ng-model=\"info.Value.Volume.lenghtvalue\" placeholder=\"Enter {{info.Name}}\"/><input type=\"number\" min=0 class=\"form-control inline\" ng-model=\"info.Value.Volume.heightvalue\" placeholder=\"Enter {{info.Name}}\" ng-disabled=\"DisableField\"/><input type=\"number\" min=0 class=\"form-control inline\" ng-model=\"info.Value.Volume.depthvalue\" placeholder=\"Depth\" ng-disabled=\"DisableField\" /><input type=\"text\" placeholder=\"Enter {{info.Name}}\" ng-model=\"info.Value.Volume.units.selectedUnit\" class=\"form-control inline_old\" ng-disabled=\"DisableField\" readonly/></div>';\r\n\t\t'</div>' +\r\n\t\t\t'</ng-form>';\r\n\t\tvar templateUrl14 = '<input type=\"number\" min=0 ng-model=\"info.Value.Number.value\" placeholder=\"Enter {{info.Name}}\" class=\"form-control inline_width\" ng-disabled=\"DisableField\" />';\r\n\r\n\t\tvar templateUrl14_withvalidation = '<ng-form name=\"form\">' +\r\n\t\t\t'<div class=\"form-group\">' +\r\n\t\t\t'<span ng-show=\"form.quantityinput.$invalid\">' +\r\n\t\t\t'</span>' +\r\n\t\t\t'<input type=\"number\" min=0 placeholder=\"Enter {{info.Name}}\" name=\"quantityinput\" class=\"select_dropdown form-control inline_width\" ng-model=\"info.Value.Number.value\" name=\"input\"  ng-required=\"info\" ng-disabled=\"DisableField\"/> ' +\r\n\t\t\t'</div>' +\r\n\t\t\t'</ng-form>';\r\n\r\n\t\tvar templateUrl2 = '<ul class=\"input-switch-items\"><li class=\"form-check\" ng-repeat=\"choice in info.Value.Choices.choices\"><label class=\"form-check-label\"><input class=\"form-check-input\" ng-model=\"info.Value.Choices.selectedchoice\" type=\"radio\" ng-disabled=\"DisableField\" name=\"newItemRarity\" checked=\"checked\"><span>{{choice.ChoiceName}}</span></label></li></ul>'\r\n\t\tvar templateUrl2_withvalidation = '<ng-form name=\"form\">' +\r\n\t\t\t'<div class=\"form-group\">' +\r\n\t\t\t'<span ng-show=\"form.input.$invalid\">' +\r\n\t\t\t'</span>' +\r\n\t\t\t'<select class=\"form-control\" ng-options=\"choice.ChoiceName for choice in info.Value.Choices.choices\" ng-model=\"info.Value.Choices.selectedchoice\"><option value=\"\">--Select--</option></select>' +\r\n\t\t\t'</div>' +\r\n\t\t\t'</ng-form>';\r\n\r\n\t\tvar templateUrl15 = '<input type=\"text\" ng-disabled=\"DisableField\" placeholder=\"Enter {{info.Name}}\" class=\"form-control\" ng-model=\"info.Value.DefaultDice.value\" /><button type=\"button\" title= \"\" data-toggle=\"tooltip\" class=\"select_dice btn icon icon-dice icon-rsi btn-simple-primary\" data-original-title=\"Show Dice\" ng-click=\"defaultDiceSelect()\" ng-disabled=\"DisableField\"></button>';\r\n\r\n\t\tvar templateUrl15_withvalidation =\r\n\t\t\t'<ng-form name=\"form\">' +\r\n\t\t\t'<div class=\"form-group\">' +\r\n\t\t\t'<span ng-show=\"form.input.$invalid\">' +\r\n\t\t\t'</span>' +\r\n\t\t\t'<input type=\"text\" ng-disabled=\"DisableField\" placeholder=\"Enter {{info.Name}}\" class=\"form-control\" ng-model=\"info.Value.DefaultDice.value\" /><button type=\"button\" title= \"\" data-toggle=\"tooltip\" class=\"select_dice btn icon icon-dice icon-rsi btn-simple-primary\" data-original-title=\"Show Dice\" ng-click=\"defaultDiceSelect()\" ng-disabled=\"DisableField\"></button>';\r\n\t\t'</div>' +\r\n\t\t\t'</ng-form>';\r\n\t\tvar templateUrl19_withvalidation = '<ng-form name=\"form\">' +\r\n\t\t\t'<div class=\"form-group\">' +\r\n\t\t\t'<span ng-show=\"form.input.$invalid\">' +\r\n\t\t\t'</span>' +\r\n\t\t\t'<textarea placeholder=\"Enter {{info.Name}}\" ng-disabled=\"DisableField\" class=\"form-control text-line\" ng-model=\"info.Value.Text.value\" name=\"input\" ng-class=\"{red: form.input.$dirty && form.input.$error.required}\" ng-required=\"info\" ></textarea> ' +\r\n\t\t\t'</div>' +\r\n\t\t\t'</ng-form>';\r\n\r\n\t\tvar templateUrl19 = ' <textarea placeholder=\"Enter {{info.Name}}\" ng-disabled=\"DisableField\" class=\"form-control\" ng-model=\"info.Value.Text.value\"></textarea>';\r\n\r\n\t\tvar templateUrl20 = ' <textarea placeholder=\"Enter {{info.Name}}\" ng-disabled=\"DisableField\" class=\"form-control\" ng-model=\"info.Value.Text.value\"></textarea>';\r\n\r\n\t\t//var templateUrl16 = '<input type=\"text\" ng-model=\"info.Value.Calculation.formulae\" class=\"form-control\" disabled/>' \r\n\t\t//var templateUrl16_withvalidation = '<ng-form name=\"form\">' +\r\n\t\t//    '<div class=\"form-group\">' +\r\n\t\t//    '<span ng-show=\"form.input.$invalid\">' +\r\n\t\t//    '</span>' +\r\n\t\t//    '<input type=\"text\" class=\"form-control\" ng-model=\"info.Value.Calculation.formulae\" ng-required=\"info\" disabled/> ' +\r\n\t\t//    '</div>' +\r\n\t\t//    '</ng-form>';\r\n\r\n\r\n\t\tvar linker = function (scope, element, attrs) {\r\n\r\n\t\t\tvar items = angular.copy(scope.info);\r\n\t\t\tvar mode = angular.copy(attrs.mode);\r\n\r\n\t\t\tif (mode != undefined) {\r\n\t\t\t\tif (mode == \"'Edit'\") {\r\n\t\t\t\t\tif (items.TypeId == 1 && items.Name == \"Name\") {\r\n\t\t\t\t\t\tscope.DisableField = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (mode == \"'Copy'\") {\r\n\t\t\t\t\tif (items.TypeId == 1 && items.Name == \"Name\") {\r\n\t\t\t\t\t\tscope.info.Value.Text.value = \"\";\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tscope.DisableField = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif (mode == \"'Create'\") {\r\n\t\t\t\t\tif (items.TypeId == 1 && items.Name == \"Name\") {\r\n\t\t\t\t\t\tscope.DisableField = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar Calculation = function (FormulaVal, fullscope) {\r\n\t\t\t\tvar FormlaForCalculate = FormulaVal;\r\n\t\t\t\tvar WeightRes = '';\r\n\t\t\t\tvar QuantityRes = '';\r\n\t\t\t\tvar ArrayList = [];\r\n\r\n\t\t\t\tfor (var i = 0; i < FormulaVal.length; i++) {\r\n\r\n\t\t\t\t\tif (FormulaVal[i] == '[' || FormulaVal[i] == ']');\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar Result = '';\r\n\t\t\t\t\t\tvar Str = FormulaVal.substring(i + 1, FormulaVal.length);\r\n\r\n\t\t\t\t\t\tif (FormulaVal[i] == '[') {\r\n\t\t\t\t\t\t\tvar Result = '';\r\n\t\t\t\t\t\t\tfor (var j = 0; j < Str.length; j++) {\r\n\t\t\t\t\t\t\t\tif (Str[j] == ']') {\r\n\t\t\t\t\t\t\t\t\tArrayList.push(Result);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tResult = Result + Str[j];\r\n\t\t\t\t\t\t\t\t\ti = i + 1;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//FormlaForCalculate = FormlaForCalculate.replace('[', '');\r\n\t\t\t\t//FormlaForCalculate = FormlaForCalculate.replace(']', '');\r\n\t\t\t\tFormlaForCalculate = FormlaForCalculate.replace(/\\[/g, '');\r\n\t\t\t\tFormlaForCalculate = FormlaForCalculate.replace(/\\]/g, '');\r\n\r\n\t\t\t\tfor (var i = 0; i < ArrayList.length; i++) {\r\n\t\t\t\t\tfor (var j = 0; j < fullscope.length; j++) {\r\n\t\t\t\t\t\tif ((ArrayList[i] == fullscope[j].Name || ArrayList[i] == fullscope[j].CorestatName)) {\r\n\t\t\t\t\t\t\tif ((ArrayList[i] == fullscope[j].Name || ArrayList[i] == fullscope[j].CorestatName) && fullscope[j].TypeId == 7) {\r\n\t\t\t\t\t\t\t\tFormlaForCalculate = FormlaForCalculate.replace(ArrayList[i], \"fullscope[\" + j + \"].Value.Weight.value\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if ((ArrayList[i] == fullscope[j].Name || ArrayList[i] == fullscope[j].CorestatName) && fullscope[j].TypeId == 14) {\r\n\t\t\t\t\t\t\t\tFormlaForCalculate = FormlaForCalculate.replace(ArrayList[i], \"fullscope[\" + j + \"].Value.Number.value\");\r\n\t\t\t\t\t\t\t\t//FormlaForCalculate = parseInt(FormlaForCalculate.replace(ArrayList[i], \"fullscope[\" + j + \"].Value.Number.value\"));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if ((ArrayList[i] == fullscope[j].Name || ArrayList[i] == fullscope[j].CorestatName) && fullscope[j].TypeId == 5) {\r\n\t\t\t\t\t\t\t\tFormlaForCalculate = FormlaForCalculate.replace(ArrayList[i], \"fullscope[\" + j + \"].Value.ValueAndSubValue.value\");\r\n\t\t\t\t\t\t\t\t//FormlaForCalculate = parseInt(FormlaForCalculate.replace(ArrayList[i], \"fullscope[\" + j + \"].Value.Number.value\"));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if ((ArrayList[i] == fullscope[j].Name || ArrayList[i] == fullscope[j].CorestatName) && fullscope[j].TypeId == 6) {\r\n\t\t\t\t\t\t\t\tFormlaForCalculate = FormlaForCalculate.replace(ArrayList[i], \"fullscope[\" + j + \"].Value.CurrentAndMaxValue.CurrentValue\");\r\n\t\t\t\t\t\t\t\t//FormlaForCalculate = parseInt(FormlaForCalculate.replace(ArrayList[i], \"fullscope[\" + j + \"].Value.Number.value\"));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//else if (ArrayList[i] == fullscope[j].CorestatName && fullscope[j].TypeId == 5) {\r\n\t\t\t\t\t\t\t//    if (fullscope[j].CorestatName.indexOf('.Value') > -1) {\r\n\t\t\t\t\t\t\t//        FormlaForCalculate = FormlaForCalculate.replace(ArrayList[i], \"fullscope[\" + j + \"].Value.ValueAndSubValue.value\");\r\n\t\t\t\t\t\t\t//    }\r\n\t\t\t\t\t\t\t//    else if (fullscope[j].CorestatName.indexOf('.SubValue') > -1) {\r\n\t\t\t\t\t\t\t//        FormlaForCalculate = FormlaForCalculate.replace(ArrayList[i], \"fullscope[\" + j + \"].Value.ValueAndSubValue.subvalue\");\r\n\t\t\t\t\t\t\t//    }\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t\t//else if (ArrayList[i] == fullscope[j].CorestatName && fullscope[j].TypeId == 6) {\r\n\t\t\t\t\t\t\t//    if (fullscope[j].CorestatName.indexOf('.CurrentValue') > -1) {\r\n\t\t\t\t\t\t\t//        FormlaForCalculate = FormlaForCalculate.replace(ArrayList[i], \"fullscope[\" + j + \"].Value.CurrentAndMaxValue.CurrentValue\");\r\n\t\t\t\t\t\t\t//    }\r\n\t\t\t\t\t\t\t//    else if (fullscope[j].CorestatName.indexOf('.MaxValue') > -1) {\r\n\t\t\t\t\t\t\t//        FormlaForCalculate = FormlaForCalculate.replace(ArrayList[i], \"fullscope[\" + j + \"].Value.CurrentAndMaxValue.MaxValue\");\r\n\t\t\t\t\t\t\t//    }\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn FormlaForCalculate;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar getTemplate = function (contentType, IsMandatory) {\r\n\r\n\t\t\t\tvar template = '';\r\n\t\t\t\tswitch (contentType) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tif (IsMandatory == true) {\r\n\t\t\t\t\t\t\ttemplate = templateUrl1_withvalidation;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttemplate = templateUrl1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tif (IsMandatory == true) {\r\n\t\t\t\t\t\t\ttemplate = templateUrl2_withvalidation;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttemplate = templateUrl2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tif (IsMandatory == true) {\r\n\t\t\t\t\t\t\ttemplate = templateUrl3_withvalidation;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttemplate = templateUrl3;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 4:\r\n\r\n\t\t\t\t\t\tif (IsMandatory == true) {\r\n\t\t\t\t\t\t\ttemplate = templateUrl4_withvalidation;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttemplate = templateUrl4;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\tif (IsMandatory == true) {\r\n\t\t\t\t\t\t\ttemplate = templateUrl5_withvalidation;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttemplate = templateUrl5;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\tif (IsMandatory == true) {\r\n\t\t\t\t\t\t\ttemplate = templateUrl6_withvalidation;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttemplate = templateUrl6;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\tif (IsMandatory == true) {\r\n\t\t\t\t\t\t\ttemplate = templateUrl7_withvalidation;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttemplate = templateUrl7;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 8:\r\n\r\n\t\t\t\t\t\tif (IsMandatory == true) {\r\n\t\t\t\t\t\t\ttemplate = templateUrl8_withvalidation;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttemplate = templateUrl8;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 12:\r\n\t\t\t\t\t\tif (IsMandatory == true) {\r\n\t\t\t\t\t\t\ttemplate = templateUrl12_withvalidation;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttemplate = templateUrl12;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 13:\r\n\t\t\t\t\t\tif (IsMandatory == true) {\r\n\t\t\t\t\t\t\ttemplate = templateUrl13_withvalidation;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttemplate = templateUrl13;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 14:\r\n\t\t\t\t\t\tif (IsMandatory == true) {\r\n\t\t\t\t\t\t\ttemplate = templateUrl14_withvalidation;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttemplate = templateUrl14;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 15:\r\n\t\t\t\t\t\tif (IsMandatory == true) {\r\n\t\t\t\t\t\t\ttemplate = templateUrl15_withvalidation;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttemplate = templateUrl15;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 16:\r\n\t\t\t\t\t\t//    if (IsMandatory == true) {\r\n\t\t\t\t\t\t//        template = templateUrl16_withvalidation;\r\n\t\t\t\t\t\t//    }\r\n\t\t\t\t\t\t//    else {\r\n\t\t\t\t\t\t//        template = templateUrl16;\r\n\t\t\t\t\t\t//    }\r\n\t\t\t\t\t\t//    break;\r\n\t\t\t\t\t\tvar templateUrl16 = '{{' + Calculation(scope.info.Value.Calculation.formulae, scope.fullscope) + '}}';\r\n\t\t\t\t\t\tvar templateUrl16_withvalidation = '{{' + Calculation(scope.info.Value.Calculation.formulae, scope.fullscope) + '}}';\r\n\r\n\t\t\t\t\t\tif (IsMandatory == true) {\r\n\t\t\t\t\t\t\ttemplate = templateUrl16_withvalidation;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttemplate = templateUrl16;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 19:\r\n\t\t\t\t\t\tif (IsMandatory == true) {\r\n\t\t\t\t\t\t\ttemplate = templateUrl19_withvalidation;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttemplate = templateUrl19;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn template;\r\n\t\t\t};\r\n\r\n\r\n\r\n\t\t\telement.html(getTemplate(items.TypeId, items.IsMandatory));\r\n\r\n\t\t\t$compile(element.contents())(scope);\r\n\t\t\tscope.getThumbNail = function () {\r\n\t\t\t\tif (scope.file)\r\n\t\t\t\t\treturn $scope.file;\r\n\r\n\t\t\t\tvar c = scope.item;\r\n\t\t\t\tif (c.id && c.portrait)\r\n\t\t\t\t\treturn '/characterdata/' + c.id + '/' + c.portrait;\r\n\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tscope.defaultDiceSelect = function () {\r\n\t\t\t\tvar dlg = dialogs.create('/views/dialogs/defaultdiceselection.html', 'dialogDefaultDiceSelect',\r\n\t\t\t\t\t{ \"mode\": 1 }\r\n\t\t\t\t);\r\n\t\t\t\tdlg.result.then(function (res) {\r\n\t\t\t\t\t//    scope.dice = res;\r\n\t\t\t\t\tscope.info.Value.DefaultDice.value = res;\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t\t//scope.uploadFile = function (input) {\r\n\t\t\t//    debugger;\r\n\t\t\t//    for (var file = 0; file < input.length; file++) {\r\n\t\t\t//        scope.info.Value.Image.image = input[file];\r\n\t\t\t//    }\r\n\t\t\t//    var file = $('input[type=file]').val(); \r\n\t\t\t//    var clientImage =  getBase64(file);\r\n\t\t\t//    scope.info.Value.Image.clientImage = clientImage;\r\n\t\t\t//};\r\n\t\t\tfunction getBase64(file) {\r\n\t\t\t\tvar reader = new FileReader();\r\n\t\t\t\treader.readAsDataURL(file);\r\n\t\t\t\treader.onload = function () {\r\n\t\t\t\t\treturn reader.result;\r\n\t\t\t\t};\r\n\t\t\t\treader.onerror = function (error) {\r\n\t\t\t\t\tconsole.log('Error: ', error);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tscope.ItemImageUpload = function (input) {\r\n\t\t\t\t\r\n\t\t\t\tif (input.files && input.files[0]) {\r\n\t\t\t\t\tvar reader = new FileReader();\r\n\t\t\t\t\treader.onload = function (e) {\r\n\t\t\t\t\t\t$('#itemImage')\r\n\t\t\t\t\t\t\t.attr(\"Src\", e.target.result)\r\n\t\t\t\t\t\t\t.width(120)\r\n\t\t\t\t\t\t\t.height(120);\r\n\t\t\t\t\t\tscope.info.Value.Image.image = e.target.result;\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\treader.readAsDataURL(input.files[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn {\r\n\t\t\trestrict: \"E\",\r\n\t\t\treplace: true,\r\n\t\t\tlink: linker,\r\n\t\t\tscope: {\r\n\t\t\t\tinfo: '=',\r\n\t\t\t\tfullscope: '=',\r\n\t\t\t\tmode: '='\r\n\t\t\t}\r\n\t\t}\r\n\t}]);\r\n\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('rpgsmith-directives');\r\n\r\n    app.directive('rpgsmithcontenttype', ['$compile', 'dialogs', 'characterService', function ($compile, dialogs, characterService) {\r\n        var templateUrl1 = '<button type=\"button\" class=\"btn btn-accent btn_align\" ng-model=\"\" name=\"input\">{{info.Name}}</button>';\r\n        var templateUrl0 = '<button type=\"button\" class=\"btn btn-accent btn_align\" ng-model=\"\" name=\"input\" ng-click=\"UpdateEquip()\">{{info.Name}}</button>';\r\n        var getTemplate = function (contentType, IsMandatory) {.0\r\n            var template = '';\r\n\r\n            switch (contentType) {\r\n                case false:\r\n                        template = templateUrl1;\r\n                    break;\r\n                case true:\r\n                    template = templateUrl0;\r\n                    break;\r\n            }\r\n\r\n            return template;\r\n        };\r\n\r\n\r\n        var linker = function (scope, element, attrs) {\r\n\r\n            var items = angular.copy(scope.info);\r\n            if (items.TypeId == 3 || items.TypeId == 4) {\r\n                if (items.IsAction == true) {\r\n                    if (items.Value.YesOrNo.value == \"Yes\" || items.Value.YesOrNo.value == \"False\" || items.Value.YesOrNo.value == \"\" || items.Value.YesOrNo.value === undefined || items.Value.YesOrNo.value === null) {\r\n\r\n                        element.html(getTemplate(items.IsAction));\r\n                        $compile(element.contents())(scope);\r\n                        items.Name = \"UnEquipped\";\r\n                    }\r\n                    else if (items.Value.YesOrNo.value == \"No\" || items.Value.YesOrNo.value == \"False\" || items.Value.YesOrNo.value == \"\" || items.Value.YesOrNo.value === undefined || items.Value.YesOrNo.value === null) {\r\n\r\n                        element.html(getTemplate(items.IsAction));\r\n                        $compile(element.contents())(scope);\r\n                        items.Name = \"Equipped\";\r\n                    }\r\n\r\n                }\r\n            }\r\n            scope.UpdateEquip = function () {\r\n                //var CharacterItemValueId = scope.info.CharacterItemValueId;\r\n                if (scope.info.CharacterItemValueId != undefined) {\r\n                    if (scope.info.Value.YesOrNo.value == \"Yes\" || items.Value.YesOrNo.value == \"False\" || items.Value.YesOrNo.value == \"\" || items.Value.YesOrNo.value === undefined || items.Value.YesOrNo.value === null) {\r\n                        scope.info.Value.YesOrNo.value = \"No\";\r\n                        characterService.UpdateItemEquipContent(scope.info).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n\r\n                                if (items.IsAction == true) {\r\n                                    scope.info.Name = \"Equipped\";\r\n                                    element.html(getTemplate(items.IsAction));\r\n                                    $compile(element.contents())(scope);\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    else if (scope.info.Value.YesOrNo.value == \"No\" || items.Value.YesOrNo.value == \"False\" || items.Value.YesOrNo.value == \"\" || items.Value.YesOrNo.value === undefined || items.Value.YesOrNo.value === null) {\r\n                        scope.info.Value.YesOrNo.value = \"Yes\";\r\n                        characterService.UpdateItemEquipContent(scope.info).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n\r\n                                if (items.IsAction == true) {\r\n                                    scope.info.Name = \"UnEquipped\";\r\n                                    element.html(getTemplate(items.IsAction));\r\n                                    $compile(element.contents())(scope);\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n                else if (scope.info.CharacterSpellValueId != undefined) {\r\n                    if (scope.info.Value.YesOrNo.value == \"Yes\" || items.Value.YesOrNo.value == \"False\" || items.Value.YesOrNo.value == \"\" || items.Value.YesOrNo.value === undefined || items.Value.YesOrNo.value === null) {\r\n                        scope.info.Value.YesOrNo.value = \"No\";\r\n                        characterService.UpdateSpellMemorizeContent(scope.info).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n\r\n                                if (items.IsAction == true) {\r\n                                    scope.info.Name = \"Memorized\";\r\n                                    element.html(getTemplate(items.IsAction));\r\n                                    $compile(element.contents())(scope);\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    else if (scope.info.Value.YesOrNo.value == \"No\" || items.Value.YesOrNo.value == \"False\" || items.Value.YesOrNo.value == \"\" || items.Value.YesOrNo.value === undefined || items.Value.YesOrNo.value === null) {\r\n                        scope.info.Value.YesOrNo.value = \"Yes\";\r\n                        characterService.UpdateSpellMemorizeContent(scope.info).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n\r\n                                if (items.IsAction == true) {\r\n                                    scope.info.Name = \"UnMemorized\";\r\n                                    element.html(getTemplate(items.IsAction));\r\n                                    $compile(element.contents())(scope);\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n                else if (scope.info.CharacterAbilityValueId != undefined) {\r\n                    if (scope.info.Value.YesOrNo.value == \"Yes\" || items.Value.YesOrNo.value == \"False\" || items.Value.YesOrNo.value == \"\" || items.Value.YesOrNo.value === undefined || items.Value.YesOrNo.value === null) {\r\n                        scope.info.Value.YesOrNo.value = \"No\";\r\n                        characterService.UpdateAbilityEnabledContent(scope.info).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n\r\n                                if (items.IsAction == true) {\r\n                                    scope.info.Name = \"Enabled\";\r\n                                    element.html(getTemplate(items.IsAction));\r\n                                    $compile(element.contents())(scope);\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    else if (scope.info.Value.YesOrNo.value == \"No\" || items.Value.YesOrNo.value == \"False\" || items.Value.YesOrNo.value == \"\" || items.Value.YesOrNo.value === undefined || items.Value.YesOrNo.value === null) {\r\n                        scope.info.Value.YesOrNo.value = \"Yes\";\r\n                        characterService.UpdateAbilityEnabledContent(scope.info).then(function (data) {\r\n                            if (data.data.StatusCode == 200) {\r\n\r\n                                if (items.IsAction == true) {\r\n                                    scope.info.Name = \"Disabled\";\r\n                                    element.html(getTemplate(items.IsAction));\r\n                                    $compile(element.contents())(scope);\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            //for (var i = 0; i < items.length; i++)\r\n            //{\r\n            //    if (items[i].IsAction == 0)\r\n            //    {\r\n            //        element.html(getTemplate(items[i].IsAction));\r\n\r\n            //        $compile(element.contents())(scope);\r\n            //    }\r\n            //    else if (items[i].IsAction == 1)\r\n            //    {\r\n            //        element.html(getTemplate(items[i].IsAction));\r\n\r\n            //        $compile(element.contents())(scope);\r\n            //    }\r\n            //}\r\n            //scope.defaultDiceSelect = function () {\r\n            //    debugger;\r\n            //    var dlg = dialogs.create('/views/dialogs/defaultdiceselection.html', 'dialogDefaultDiceSelect',\r\n            //        { \"mode\": 1 }\r\n            //    );\r\n            //    dlg.result.then(function (res) {\r\n            //        debugger;\r\n            //        //    scope.dice = res;\r\n            //        scope.info.Value.DefaultDice.value = res;\r\n            //    });\r\n            //};\r\n            //scope.getThumbNail = function () {\r\n            //    if (scope.file)\r\n            //        return $scope.file;\r\n\r\n            //    var c = scope.item;\r\n            //    if (c.id && c.portrait)\r\n            //        return '/characterdata/' + c.id + '/' + c.portrait;\r\n\r\n            //    return null;\r\n            //}\r\n        };\r\n\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            link: linker,\r\n            scope: {\r\n                info: '='\r\n            }\r\n        }\r\n    }]);\r\n\r\n\r\n})();",null]}